{"version":3,"names":["config","version","yAxisWidth","xAxisHeight","padding","rotate","fontSize","fontColor","dataPointShape","color","linearColor","pieChartLinePadding","pieChartTextPadding","titleFontSize","subtitleFontSize","radarLabelTextMargin","assign","target","_len2","arguments","length","varArgs","Array","_key2","TypeError","deepAssign","obj1","obj2","key","toString","forEach","val","util","toFixed","num","limit","isFloat","approximatelyEqual","num1","num2","Math","abs","isSameSign","isSameXCoordinateArea","p1","p2","x","isCollision","end","start","width","y","height","flag","hexToRgb","hexValue","opc","rgx","hex","replace","m","r2","g2","b2","rgb","exec","r","parseInt","g","b","findRange","type","isNaN","Error","multiple","ceil","floor","calCandleMA","dayArr","nameArr","colorArr","kdata","seriesTemp","k","seriesItem","data","name","i","len","push","sum","j","calValidDistance","self","distance","chartData","config2","opts","dataChartAreaWidth","area","dataChartWidth","eachSpacing","xAxisData","xAxisPoints","extra","mount","widthRatio","validDistance","uevent","trigger","scrollOption","position","xAxis","scrollPosition","isInAngleRange","angle","startAngle","endAngle","adjust","angle2","PI","createCurveControlPoints","points","isNotMiddlePoint","points2","i2","max","min","isNotMiddlePointX","a","pAx","pAy","pBx","pBy","last","ctrA","ctrB","convertCoordinateOrigin","center","avoidCollision","obj","fixPieSeries","series","pieSeriesArr","constructor","indexOf","_pieSeries_","oldseries","formatter","value","fillSeries","index","item","linearIndex","show","pointShape","legendShape","fillCustomColor","linearType","customColor","newcolor","chazhi","getDataRange","minData","maxData","range","minRange","maxRange","measureText","text","context","String","setFontSize","split","test","dataCombine","reduce","concat","dataCombineStack","getTouches","touches","e","clientX","pix","pageY","currentTarget","offsetTop","getSeriesDataItem","group","newSeries","indexIsArr","tempSeries","filterSeries","tmpindex","style","disableLegend","getMaxTextListLength","list","lengthList","map","apply","getRadarCoordinateSeries","eachAngle","CoordinateSeries","getToolTipData","seriesData","categories","option","calPoints","filterPoints","textList","titleText","tooltip","offset","round","getMixToolTipData","filter","getCandleToolTipData","upColor","upFill","downColor","downFill","text1","text2","text3","text4","validCalPoints","findCurrentIndex","currentPoints","current","spacing","boundaryGap","isInExactChartArea","timePoints","pointValue","pointIndex","minValue","findBarChartCurrentIndex","yAxisPoints","findLegendIndex","legendData","currentIndex","gap","isInExactLegendArea","findRadarChartCurrentIndex","radarData","count","eachAngleArea","isInExactPieChartArea","radius","fixAngle","fixAngle2","atan2","angleList","rangeStart","rangeEnd","findFunnelChartCurrentIndex","funnelData","funnelArea","findWordChartCurrentIndex","wordData","findMapChartCurrentIndex","cData","mapData","tmp","pointToCoordinate","bounds","scale","xoffset","yoffset","poi","geometry","coordinates","isPoiWithinPoly","mercator","findRoseChartCurrentIndex","pieData","getRoseDataPoints","_series_","rose","offsetAngle","_start_","_rose_proportion_","findPieChartCurrentIndex","getPieDataPoints","pie","ring","_proportion_","pow","splitPoints","eachSeries","newPoints","items","connectNulls","calLegendData","wholeWidth","wholeHeight","widthArr","heightArr","legend","margin","shapeWidth","shapeRight","lineHeight","legendList","widthCount","widthCountArr","currentRow","legendText","itemWidth","itemGap","legendWidth","float","maxHeight","maxLength","lineNum","temp","slice","maxWidth","calCategoriesData","result","marginTop","categoriesTextLenth","xitem","maxTextLength","rotateLabel","rotateAngle","tempHeight","sin","enableScroll","scrollShow","disabled","getXAxisTextList","stack","sorted","_typeof2","subitem","rangeSpan","eachRange","splitNumber","calXAxisData","columnstyle","bar","ranges","rangesFormat","xAxisScaleValues","Object","getXAxisPoints","getRadarDataPoints","process","radarOption","radar","_loop3","each","listItem","proportion","cos","_radius_","getFunnelDataPoints","minRadius","dataArr","radiusLength","getArcbarDataPoints","arcbarOption","totalAngle","direction","getGaugeArcbarDataPoints","getGaugeAxisPoints","tempStartAngle","_startAngle_","_endAngle_","getGaugeDataPoints","gaugeOption","pointer","_oldAngle_","oldAngle","oldData","getPieTextMaxLength","textSize","fixColumeData","columnLen","seriesGap","categoryGap","mix","column","fixBarData","fixColumeMeterData","border","fixColumeStackData","indexn","fixBarStackData","spacingValid","dataCount","itemCount","startX","endX","getCandleDataPoints","validHeight","cPoints","indexs","point","getDataPoints","validWidth","xranges","xminRange","xmaxRange","shift","pop","t","getLineDataPoints","lineOption","animation","getColumnDataPoints","zeroPoints","getMountDataPoints","mountOption","mountWidth","getBarDataPoints","getStackDataPoints","seriesIndex","stackSeries","value0","height0","heightc","y0","getBarStackDataPoints","x0","getYAxisTextList","yData","dataRange","yAxis","reverse","calYAxisData","YLength","rangesArr","rangesFormatArr","yAxisWidthArr","_loop4","_i12","opts2","unit","tofix","yAxisFontSizes","calibration","yAxisFontSize","calTooltipYAxisData","yAxisData","minAxis","maxVal","minVal","calMarkLineData","yAxisIndex","contextRotate","rotateLock","translate","_rotate_","drawPointShape","shape","beginPath","dataPointShapeType","setStrokeStyle","setFillStyle","background","setLineWidth","moveTo","lineTo","arc","rect","closePath","fill","stroke","drawActivePoint","includes","activeType","drawRingTitle","titlefontSize","title","subtitlefontSize","subtitle","titleFontColor","subtitleFontColor","titleHeight","subtitleHeight","textWidth","offsetX","startY","offsetY","fillText","_textWidth","_startX","_startY","drawPointText","textOffset","textColor","formatVal","setTextAlign","drawColumePointText","Position","labelPosition","drawMountPointText","drawBarPointText","drawGaugeLabel","centerPosition","labelOffset","splitAngle","splitLine","totalNumber","endNumber","startNumber","nowAngle","nowNumber","pos","labelText","labelColor","drawRadarLabel","labelPointShow","posPoint","posPointAxis","labelPointColor","labelPointRadius","labelShow","posRelativeCanvas","drawPieText","lineRadius","textObjectCollection","lastTextObject","seriesConvert","radius2","orginX1","orginY1","orginX2","orginY2","orginX3","orginY3","textObject","lineStart","lineEnd","lineStartPoistion","lineEndPoistion","textPosition","curveStartX","textStartX","quadraticCurveTo","drawToolTipSplitLine","toolTipOption","gridType","dashLength","endY","setLineDash","gridColor","xAxisLabel","textX","textY","labelBgColor","toolTipBackground","labelBgOpacity","toolTipOpacity","boxPadding","labelFontColor","drawMarkLine","markLineOption","markLine","lineColor","showLabel","labelFontSize","labelPadding","labelAlign","labelOffsetX","labelOffsetY","bgWidth","bgStartX","bgStartY","drawToolTipHorizentalLine","yAxisLabel","tStartLeft","tStartRight","bgEndX","drawToolTipSplitArea","activeBgColor","activeBgOpacity","activeWidth","drawBarToolTipSplitArea","drawToolTip","showBox","showArrow","showCategory","bgColor","bgOpacity","borderColor","borderWidth","borderRadius","borderOpacity","legendShow","unshift","legendMarginRight","arrowWidth","isOverRightBorder","toolTipWidth","toolTipHeight","_scrollDistance_","fillRect","setTextBaseline","drawColumnDataPoints","columnOption","meterBorder","meterFillColor","barBorderCircle","barBorderRadius","linearOpacity","colorStop","save","leftNum","rightNum","zeroHeight","tooltipPoints","fillColor","strokeColor","grd","createLinearGradient","addColorStop","left","top","height2","_columnOption$barBord","_slicedToArray2","r0","r1","r3","_columnOption$barBord2","dataLabel","restore","drawMountDataPoints","_mountOption$barBorde","bezierCurveTo","ranges2","minRange2","maxRange2","drawBarDataPoints","_columnOption$barBord3","drawCandleDataPoints","seriesMA","candleOption","average","candle","upLine","downLine","day","leftSpace","rightSpace","splitPointList","startPoint","ctrlPoint","drawAreaDataPoints","areaOption","opacity","addLine","gradient","firstPoint","lastPoint","lineType","drawScatterDataPoints","scatter","drawBubbleDataPoints","bubbleOption","bubble","drawLineDataPoints","onShadow","line","setShadow","drawMixDataPoints","columnIndex","columnLength","_columnOption$barBord4","splitPointList2","ctrlPoint2","addPoint","drawToolTipBridge","horizentalLine","drawXAxis","scrollY","scrollScreenWidth","scrollTotalWidth","scrollWidth","scrollLeft","setLineCap","scrollBackgroundColor","scrollColor","disableGrid","gridEval","maxXAxisListLength","labelCount","ratio","newCategories","cgLength","xAxisFontSize","_xAxisTextAngle_","truePoints","titleOffsetX","titleOffsetY","axisLine","axisLineColor","drawYAxisGrid","xAxiseachSpacing","TotalWidth","drawYAxis","tStartCenter","_loop5","textAlign","tmpstrat","gapwidth","showTitle","drawLegend","legendArea","backgroundColor","itemList","listIndex","hiddenColor","fontTrans","drawPieDataPoints","pieOption","activeOpacity","activeRadius","labelWidth","ringWidth","customRadius","centerColor","_pieTextMaxLength_","lineJoin","fillcolor","createCircularGradient","createRadialGradient","innerPieWidth","drawRoseDataPoints","roseOption","drawArcbarDataPoints","lineCap","arcbar","centerX","centerY","drawGaugeDataPoints","fixRadius","childNumber","childWidth","gauge","innerRadius","pieRadius","childAngle","proc","pointerRadius","gradient3","eachCategories","childendX","drawRadarDataPoints","axisLabel","axisLabelTofix","gridCount","coordinateAngle","xr","yr","_loop","_loop2","startPos","pos2","radarDataPoints","stepLength","label","lonlat2mercator","longitude","latitude","log","tan","getBoundingBox","coords","xMin","xMax","yMin","yMax","coorda","coordinateToPoint","pointY","pointX","isRayIntersectsSegment","s_poi","e_poi","xseg","poly","sinsc","epoly","drawMapDataPoints","mapOption","active","fillOpacity","activeBorderColor","activeFillColor","activeFillOpacity","xScale","yScale","gaosi","centerPoint","properties","centroid","activeTextColor","draw","normalInt","iter","arr","random","collisionNew","isIn","getWordCloudPoint","tHeight","tWidth","breaknum","isCollision2","Spin","isSpin","areav","drawWordCloudDataPoints","wordOption","autoColors","word","wordCloudData","strokeText","drawFunnelDataPoints","funnelOption","minSize","funnel","seriesNew","drawFunnelText","drawFunnelCenterText","centerText","centerTextSize","centerTextColor","drawCanvas","Timing","easeIn","easeOut","easeInOut","linear","Animation","isStop","duration","timing","delay","createAnimationFrame","setTimeout","step","delay2","timeStamp","Date","requestAnimationFrame","animationFrame","startTimeStamp","_step","timestamp","onProcess","onAnimationFinish","timingFunction","bind","prototype","stop","drawCharts","_this2","_this","animationInstance","_calLegendData","legendHeight","_calYAxisData","maxTitleHeight","rightIndex","leftIndex","_calCategoriesData","categoriesData","scrollAlign","offsetLeft","totalWidth","screenWidth","currentOffset","startTouchX","lastMoveTime","clearRect","_drawLineDataPoints","enableMarkLine","_drawScatterDataPoints","_drawBubbleDataPoints","_drawMixDataPoints","_drawColumnDataPoints","_drawMountDataPoints","_drawBarDataPoints","_drawAreaDataPoints","arcbarData","gaugeData","_drawCandleDataPoints","uChartsEvent","events","addEventListener","listener","delEventListener","_len","args","_key","params","uCharts","uCharts2","pixelRatio","gridSet","canvas2d","config$$1","tempWidth","strokeStyle","lineWidth","font","fillStyle","textBaseline","blur","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","call","updateData","_getXAxisPoints0","zoom","common_vendor","__f__","centerLeft","MaxLeft","dobuleZoom","tcs","changedTouches","clientY","ntcs","xlength","moveCount","cts0","cts1","moveCurrent1","getCurrentDataIndex","moveCurrent2","currentEachSpacing","currentLeft","stopAnimation","mp","_touches$","getLegendDataIndex","touchLegend","showToolTip","_this3","_getToolTipData","_getMixToolTipData","scrollStart","scroll","now","Limit","touchMoveLimit","currMoveTime","_distance","scrollEnd","_scrollOption"],"sources":["u-charts.js"],"sourcesContent":["/*\n * uCharts (R)\n * 高性能跨平台图表库，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360/快手）、Vue、Taro等支持canvas的框架平台\n * Copyright (C) 2018-2022 QIUN (R) 秋云 https://www.ucharts.cn All rights reserved.\n * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )\n * 复制使用请保留本段注释，感谢支持开源！\n * \n * uCharts (R) 官方网站\n * https://www.uCharts.cn\n * \n * 开源地址:\n * https://gitee.com/uCharts/uCharts\n * \n * uni-app插件市场地址：\n * http://ext.dcloud.net.cn/plugin?id=271\n * \n */\r\n\r\n'use strict';\r\n\r\nvar config = {\r\n  version: 'v2.5.0-20230101',\r\n  yAxisWidth: 15,\r\n  xAxisHeight: 22,\r\n  padding: [10, 10, 10, 10],\r\n  rotate: false,\r\n  fontSize: 13,\r\n  fontColor: '#666666',\r\n  dataPointShape: ['circle', 'circle', 'circle', 'circle'],\r\n  color: ['#1890FF', '#91CB74', '#FAC858', '#EE6666', '#73C0DE', '#3CA272', '#FC8452', '#9A60B4', '#ea7ccc'],\r\n  linearColor: ['#0EE2F8', '#2BDCA8', '#FA7D8D', '#EB88E2', '#2AE3A0', '#0EE2F8', '#EB88E2', '#6773E3', '#F78A85'],\r\n  pieChartLinePadding: 15,\r\n  pieChartTextPadding: 5,\r\n  titleFontSize: 20,\r\n  subtitleFontSize: 15,\r\n  radarLabelTextMargin: 13,\r\n};\r\n\r\nvar assign = function(target, ...varArgs) {\r\n  if (target == null) {\r\n    throw new TypeError('[uCharts] Cannot convert undefined or null to object');\r\n  }\r\n  if (!varArgs || varArgs.length <= 0) {\r\n    return target;\r\n  }\r\n  // 深度合并对象\r\n  function deepAssign(obj1, obj2) {\r\n    for (let key in obj2) {\r\n      obj1[key] = obj1[key] && obj1[key].toString() === \"[object Object]\" ?\r\n        deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];\r\n    }\r\n    return obj1;\r\n  }\r\n  varArgs.forEach(val => {\r\n    target = deepAssign(target, val);\r\n  });\r\n  return target;\r\n};\r\n\r\nvar util = {\r\n  toFixed: function toFixed(num, limit) {\r\n    limit = limit || 2;\r\n    if (this.isFloat(num)) {\r\n      num = num.toFixed(limit);\r\n    }\r\n    return num;\r\n  },\r\n  isFloat: function isFloat(num) {\r\n    return num % 1 !== 0;\r\n  },\r\n  approximatelyEqual: function approximatelyEqual(num1, num2) {\r\n    return Math.abs(num1 - num2) < 1e-10;\r\n  },\r\n  isSameSign: function isSameSign(num1, num2) {\r\n    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;\r\n  },\r\n  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {\r\n    return this.isSameSign(p1.x, p2.x);\r\n  },\r\n  isCollision: function isCollision(obj1, obj2) {\r\n    obj1.end = {};\r\n    obj1.end.x = obj1.start.x + obj1.width;\r\n    obj1.end.y = obj1.start.y - obj1.height;\r\n    obj2.end = {};\r\n    obj2.end.x = obj2.start.x + obj2.width;\r\n    obj2.end.y = obj2.start.y - obj2.height;\r\n    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;\r\n    return !flag;\r\n  }\r\n};\r\n\r\n//兼容H5点击事件\r\nfunction getH5Offset(e) {\r\n  e.mp = {\r\n    changedTouches: []\r\n  };\r\n  e.mp.changedTouches.push({\r\n    x: e.offsetX,\r\n    y: e.offsetY\r\n  });\r\n  return e;\r\n}\r\n\r\n// hex 转 rgba\r\nfunction hexToRgb(hexValue, opc) {\r\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  var hex = hexValue.replace(rgx, function(m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  var r = parseInt(rgb[1], 16);\r\n  var g = parseInt(rgb[2], 16);\r\n  var b = parseInt(rgb[3], 16);\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';\r\n}\r\n\r\nfunction findRange(num, type, limit) {\r\n  if (isNaN(num)) {\r\n    throw new Error('[uCharts] series数据需为Number格式');\r\n  }\r\n  limit = limit || 10;\r\n  type = type ? type : 'upper';\r\n  var multiple = 1;\r\n  while (limit < 1) {\r\n    limit *= 10;\r\n    multiple *= 10;\r\n  }\r\n  if (type === 'upper') {\r\n    num = Math.ceil(num * multiple);\r\n  } else {\r\n    num = Math.floor(num * multiple);\r\n  }\r\n  while (num % limit !== 0) {\r\n    if (type === 'upper') {\r\n      if (num == num + 1) { //修复数据值过大num++无效的bug by 向日葵 @xrk_jy\r\n        break;\r\n      }\r\n      num++;\r\n    } else {\r\n      num--;\r\n    }\r\n  }\r\n  return num / multiple;\r\n}\r\n\r\nfunction calCandleMA(dayArr, nameArr, colorArr, kdata) {\r\n  let seriesTemp = [];\r\n  for (let k = 0; k < dayArr.length; k++) {\r\n    let seriesItem = {\r\n      data: [],\r\n      name: nameArr[k],\r\n      color: colorArr[k]\r\n    };\r\n    for (let i = 0, len = kdata.length; i < len; i++) {\r\n      if (i < dayArr[k]) {\r\n        seriesItem.data.push(null);\r\n        continue;\r\n      }\r\n      let sum = 0;\r\n      for (let j = 0; j < dayArr[k]; j++) {\r\n        sum += kdata[i - j][1];\r\n      }\r\n      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));\r\n    }\r\n    seriesTemp.push(seriesItem);\r\n  }\r\n  return seriesTemp;\r\n}\r\n\r\nfunction calValidDistance(self, distance, chartData, config, opts) {\r\n  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];\r\n  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    dataChartWidth += (opts.extra.mount.widthRatio - 1)*chartData.eachSpacing;\r\n  }\r\n  var validDistance = distance;\r\n  if (distance >= 0) {\r\n    validDistance = 0;\r\n    self.uevent.trigger('scrollLeft');\r\n    self.scrollOption.position = 'left'\r\n    opts.xAxis.scrollPosition = 'left';\r\n  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {\r\n    validDistance = dataChartAreaWidth - dataChartWidth;\r\n    self.uevent.trigger('scrollRight');\r\n    self.scrollOption.position = 'right'\r\n    opts.xAxis.scrollPosition = 'right';\r\n  } else {\r\n    self.scrollOption.position = distance\r\n    opts.xAxis.scrollPosition = distance;\r\n  }\r\n  return validDistance;\r\n}\r\n\r\nfunction isInAngleRange(angle, startAngle, endAngle) {\r\n  function adjust(angle) {\r\n    while (angle < 0) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n    while (angle > 2 * Math.PI) {\r\n      angle -= 2 * Math.PI;\r\n    }\r\n    return angle;\r\n  }\r\n  angle = adjust(angle);\r\n  startAngle = adjust(startAngle);\r\n  endAngle = adjust(endAngle);\r\n  if (startAngle > endAngle) {\r\n    endAngle += 2 * Math.PI;\r\n    if (angle < startAngle) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n  }\r\n  return angle >= startAngle && angle <= endAngle;\r\n}\r\n\r\nfunction createCurveControlPoints(points, i) {\r\n  function isNotMiddlePoint(points, i) {\r\n    if (points[i - 1] && points[i + 1]) {\r\n      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y,\r\n        points[i + 1].y);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  function isNotMiddlePointX(points, i) {\r\n    if (points[i - 1] && points[i + 1]) {\r\n      return points[i].x >= Math.max(points[i - 1].x, points[i + 1].x) || points[i].x <= Math.min(points[i - 1].x,\r\n        points[i + 1].x);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  var a = 0.2;\r\n  var b = 0.2;\r\n  var pAx = null;\r\n  var pAy = null;\r\n  var pBx = null;\r\n  var pBy = null;\r\n  if (i < 1) {\r\n    pAx = points[0].x + (points[1].x - points[0].x) * a;\r\n    pAy = points[0].y + (points[1].y - points[0].y) * a;\r\n  } else {\r\n    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;\r\n    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;\r\n  }\r\n\r\n  if (i > points.length - 3) {\r\n    var last = points.length - 1;\r\n    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;\r\n    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;\r\n  } else {\r\n    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;\r\n    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;\r\n  }\r\n  if (isNotMiddlePoint(points, i + 1)) {\r\n    pBy = points[i + 1].y;\r\n  }\r\n  if (isNotMiddlePoint(points, i)) {\r\n    pAy = points[i].y;\r\n  }\r\n  if (isNotMiddlePointX(points, i + 1)) {\r\n    pBx = points[i + 1].x;\r\n  }\r\n  if (isNotMiddlePointX(points, i)) {\r\n    pAx = points[i].x;\r\n  }\r\n  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {\r\n    pAy = points[i].y;\r\n  }\r\n  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {\r\n    pBy = points[i + 1].y;\r\n  }\r\n  if (pAx >= Math.max(points[i].x, points[i + 1].x) || pAx <= Math.min(points[i].x, points[i + 1].x)) {\r\n    pAx = points[i].x;\r\n  }\r\n  if (pBx >= Math.max(points[i].x, points[i + 1].x) || pBx <= Math.min(points[i].x, points[i + 1].x)) {\r\n    pBx = points[i + 1].x;\r\n  }\r\n  return {\r\n    ctrA: {\r\n      x: pAx,\r\n      y: pAy\r\n    },\r\n    ctrB: {\r\n      x: pBx,\r\n      y: pBy\r\n    }\r\n  };\r\n}\r\n\r\n\r\nfunction convertCoordinateOrigin(x, y, center) {\r\n  return {\r\n    x: center.x + x,\r\n    y: center.y - y\r\n  };\r\n}\r\n\r\nfunction avoidCollision(obj, target) {\r\n  if (target) {\r\n    // is collision test\r\n    while (util.isCollision(obj, target)) {\r\n      if (obj.start.x > 0) {\r\n        obj.start.y--;\r\n      } else if (obj.start.x < 0) {\r\n        obj.start.y++;\r\n      } else {\r\n        if (obj.start.y > 0) {\r\n          obj.start.y++;\r\n        } else {\r\n          obj.start.y--;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction fixPieSeries(series, opts, config){\r\n  let pieSeriesArr = [];\r\n  if(series.length>0 && series[0].data.constructor.toString().indexOf('Array') > -1){\r\n    opts._pieSeries_ = series;\r\n    let oldseries = series[0].data;\r\n    for (var i = 0; i < oldseries.length; i++) {\r\n      oldseries[i].formatter = series[0].formatter;\r\n      oldseries[i].data = oldseries[i].value;\r\n      pieSeriesArr.push(oldseries[i]);\r\n    }\r\n    opts.series = pieSeriesArr;\r\n  }else{\r\n    pieSeriesArr = series;\r\n  }\r\n  return pieSeriesArr;\r\n}\r\n\r\nfunction fillSeries(series, opts, config) {\r\n  var index = 0;\r\n  for (var i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    if (!item.color) {\r\n      item.color = config.color[index];\r\n      index = (index + 1) % config.color.length;\r\n    }\r\n    if (!item.linearIndex) {\r\n      item.linearIndex = i;\r\n    }\r\n    if (!item.index) {\r\n      item.index = 0;\r\n    }\r\n    if (!item.type) {\r\n      item.type = opts.type;\r\n    }\r\n    if (typeof item.show == \"undefined\") {\r\n      item.show = true;\r\n    }\r\n    if (!item.type) {\r\n      item.type = opts.type;\r\n    }\r\n    if (!item.pointShape) {\r\n      item.pointShape = \"circle\";\r\n    }\r\n    if (!item.legendShape) {\r\n      switch (item.type) {\r\n        case 'line':\r\n          item.legendShape = \"line\";\r\n          break;\r\n        case 'column':\r\n        case 'bar':\r\n          item.legendShape = \"rect\";\r\n          break;\r\n        case 'area':\r\n        case 'mount':\r\n          item.legendShape = \"triangle\";\r\n          break;\r\n        default:\r\n          item.legendShape = \"circle\";\r\n      }\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction fillCustomColor(linearType, customColor, series, config) {\r\n  var newcolor = customColor || [];\r\n  if (linearType == 'custom' && newcolor.length == 0 ) {\r\n    newcolor = config.linearColor;\r\n  }\r\n  if (linearType == 'custom' && newcolor.length < series.length) {\r\n    let chazhi = series.length - newcolor.length;\r\n    for (var i = 0; i < chazhi; i++) {\r\n      newcolor.push(config.linearColor[(i + 1) % config.linearColor.length]);\r\n    }\r\n  }\r\n  return newcolor;\r\n}\r\n\r\nfunction getDataRange(minData, maxData) {\r\n  var limit = 0;\r\n  var range = maxData - minData;\r\n  if (range >= 10000) {\r\n    limit = 1000;\r\n  } else if (range >= 1000) {\r\n    limit = 100;\r\n  } else if (range >= 100) {\r\n    limit = 10;\r\n  } else if (range >= 10) {\r\n    limit = 5;\r\n  } else if (range >= 1) {\r\n    limit = 1;\r\n  } else if (range >= 0.1) {\r\n    limit = 0.1;\r\n  } else if (range >= 0.01) {\r\n    limit = 0.01;\r\n  } else if (range >= 0.001) {\r\n    limit = 0.001;\r\n  } else if (range >= 0.0001) {\r\n    limit = 0.0001;\r\n  } else if (range >= 0.00001) {\r\n    limit = 0.00001;\r\n  } else {\r\n    limit = 0.000001;\r\n  }\r\n  return {\r\n    minRange: findRange(minData, 'lower', limit),\r\n    maxRange: findRange(maxData, 'upper', limit)\r\n  };\r\n}\r\n\r\nfunction measureText(text, fontSize, context) {\r\n  var width = 0;\r\n  text = String(text);\r\n  // #ifdef MP-ALIPAY || MP-BAIDU || APP-NVUE\r\n  context = false;\r\n  // #endif\r\n  if (context !== false && context !== undefined && context.setFontSize && context.measureText) {\r\n    context.setFontSize(fontSize);\r\n    return context.measureText(text).width;\r\n  } else {\r\n    var text = text.split('');\r\n    for (let i = 0; i < text.length; i++) {\r\n      let item = text[i];\r\n      if (/[a-zA-Z]/.test(item)) {\r\n        width += 7;\r\n      } else if (/[0-9]/.test(item)) {\r\n        width += 5.5;\r\n      } else if (/\\./.test(item)) {\r\n        width += 2.7;\r\n      } else if (/-/.test(item)) {\r\n        width += 3.25;\r\n      } else if (/:/.test(item)) {\r\n        width += 2.5;\r\n      } else if (/[\\u4e00-\\u9fa5]/.test(item)) {\r\n        width += 10;\r\n      } else if (/\\(|\\)/.test(item)) {\r\n        width += 3.73;\r\n      } else if (/\\s/.test(item)) {\r\n        width += 2.5;\r\n      } else if (/%/.test(item)) {\r\n        width += 8;\r\n      } else {\r\n        width += 10;\r\n      }\r\n    }\r\n    return width * fontSize / 10;\r\n  }\r\n}\r\n\r\nfunction dataCombine(series) {\r\n  return series.reduce(function(a, b) {\r\n    return (a.data ? a.data : a).concat(b.data);\r\n  }, []);\r\n}\r\n\r\nfunction dataCombineStack(series, len) {\r\n  var sum = new Array(len);\r\n  for (var j = 0; j < sum.length; j++) {\r\n    sum[j] = 0;\r\n  }\r\n  for (var i = 0; i < series.length; i++) {\r\n    for (var j = 0; j < sum.length; j++) {\r\n      sum[j] += series[i].data[j];\r\n    }\r\n  }\r\n  return series.reduce(function(a, b) {\r\n    return (a.data ? a.data : a).concat(b.data).concat(sum);\r\n  }, []);\r\n}\r\n\r\nfunction getTouches(touches, opts, e) {\r\n  let x, y;\r\n  if (touches.clientX) {\r\n    if (opts.rotate) {\r\n      y = opts.height - touches.clientX * opts.pix;\r\n      x = (touches.pageY - e.currentTarget.offsetTop - (opts.height / opts.pix / 2) * (opts.pix - 1)) * opts.pix;\r\n    } else {\r\n      x = touches.clientX * opts.pix;\r\n      y = (touches.pageY - e.currentTarget.offsetTop - (opts.height / opts.pix / 2) * (opts.pix - 1)) * opts.pix;\r\n    }\r\n  } else {\r\n    if (opts.rotate) {\r\n      y = opts.height - touches.x * opts.pix;\r\n      x = touches.y * opts.pix;\r\n    } else {\r\n      x = touches.x * opts.pix;\r\n      y = touches.y * opts.pix;\r\n    }\r\n  }\r\n  return {\r\n    x: x,\r\n    y: y\r\n  }\r\n}\r\n\r\nfunction getSeriesDataItem(series, index, group) {\r\n  var data = [];\r\n  var newSeries = [];\r\n  var indexIsArr = index.constructor.toString().indexOf('Array') > -1;\r\n  if(indexIsArr){\r\n    let tempSeries = filterSeries(series);\r\n    for (var i = 0; i < group.length; i++) {\r\n      newSeries.push(tempSeries[group[i]]);\r\n    }\r\n  }else{\r\n    newSeries = series;\r\n  };\r\n  for (let i = 0; i < newSeries.length; i++) {\r\n    let item = newSeries[i];\r\n    let tmpindex = -1;\r\n    if(indexIsArr){\r\n      tmpindex = index[i];\r\n    }else{\r\n      tmpindex = index;\r\n    }\r\n    if (item.data[tmpindex] !== null && typeof item.data[tmpindex] !== 'undefined' && item.show) {\r\n      let seriesItem = {};\r\n      seriesItem.color = item.color;\r\n      seriesItem.type = item.type;\r\n      seriesItem.style = item.style;\r\n      seriesItem.pointShape = item.pointShape;\r\n      seriesItem.disableLegend = item.disableLegend;\r\n      seriesItem.legendShape = item.legendShape;\r\n      seriesItem.name = item.name;\r\n      seriesItem.show = item.show;\r\n      seriesItem.data = item.formatter ? item.formatter(item.data[tmpindex]) : item.data[tmpindex];\r\n      data.push(seriesItem);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getMaxTextListLength(list, fontSize, context) {\r\n  var lengthList = list.map(function(item) {\r\n    return measureText(item, fontSize, context);\r\n  });\r\n  return Math.max.apply(null, lengthList);\r\n}\r\n\r\nfunction getRadarCoordinateSeries(length) {\r\n  var eachAngle = 2 * Math.PI / length;\r\n  var CoordinateSeries = [];\r\n  for (var i = 0; i < length; i++) {\r\n    CoordinateSeries.push(eachAngle * i);\r\n  }\r\n  return CoordinateSeries.map(function(item) {\r\n    return -1 * item + Math.PI / 2;\r\n  });\r\n}\r\n\r\nfunction getToolTipData(seriesData, opts, index, group, categories) {\r\n  var option = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\r\n  var calPoints = opts.chartData.calPoints?opts.chartData.calPoints:[];\r\n  let points = {};\r\n  if(group.length > 0){\r\n    let filterPoints = [];\r\n    for (let i = 0; i < group.length; i++) {\r\n      filterPoints.push(calPoints[group[i]])\r\n    }\r\n    points = filterPoints[0][index[0]];\r\n  }else{\r\n    for (let i = 0; i < calPoints.length; i++) {\r\n      if(calPoints[i][index]){\r\n        points = calPoints[i][index];\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  var textList = seriesData.map(function(item) {\r\n    let titleText = null;\r\n    if (opts.categories && opts.categories.length>0) {\r\n      titleText = categories[index];\r\n    };\r\n    return {\r\n      text: option.formatter ? option.formatter(item, titleText, index, opts) : item.name + ': ' + item.data,\r\n      color: item.color,\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n  });\r\n  var offset = {\r\n    x: Math.round(points.x),\r\n    y: Math.round(points.y)\r\n  };\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction getMixToolTipData(seriesData, opts, index, categories) {\r\n  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\r\n  var points = opts.chartData.xAxisPoints[index] + opts.chartData.eachSpacing / 2;\r\n  var textList = seriesData.map(function(item) {\r\n    return {\r\n      text: option.formatter ? option.formatter(item, categories[index], index, opts) : item.name + ': ' + item.data,\r\n      color: item.color,\r\n      disableLegend: item.disableLegend ? true : false,\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n  });\r\n  textList = textList.filter(function(item) {\r\n    if (item.disableLegend !== true) {\r\n      return item;\r\n    }\r\n  });\r\n  var offset = {\r\n    x: Math.round(points),\r\n    y: 0\r\n  };\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction getCandleToolTipData(series, seriesData, opts, index, categories, extra) {\r\n  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};\r\n  var calPoints = opts.chartData.calPoints;\r\n  let upColor = extra.color.upFill;\r\n  let downColor = extra.color.downFill;\r\n  //颜色顺序为开盘，收盘，最低，最高\r\n  let color = [upColor, upColor, downColor, upColor];\r\n  var textList = [];\r\n  seriesData.map(function(item) {\r\n    if (index == 0) {\r\n      if (item.data[1] - item.data[0] < 0) {\r\n        color[1] = downColor;\r\n      } else {\r\n        color[1] = upColor;\r\n      }\r\n    } else {\r\n      if (item.data[0] < series[index - 1][1]) {\r\n        color[0] = downColor;\r\n      }\r\n      if (item.data[1] < item.data[0]) {\r\n        color[1] = downColor;\r\n      }\r\n      if (item.data[2] > series[index - 1][1]) {\r\n        color[2] = upColor;\r\n      }\r\n      if (item.data[3] < series[index - 1][1]) {\r\n        color[3] = downColor;\r\n      }\r\n    }\r\n    let text1 = {\r\n      text: '开盘：' + item.data[0],\r\n      color: color[0],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text2 = {\r\n      text: '收盘：' + item.data[1],\r\n      color: color[1],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text3 = {\r\n      text: '最低：' + item.data[2],\r\n      color: color[2],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    let text4 = {\r\n      text: '最高：' + item.data[3],\r\n      color: color[3],\r\n      legendShape: opts.extra.tooltip.legendShape == 'auto'? item.legendShape : opts.extra.tooltip.legendShape\r\n    };\r\n    textList.push(text1, text2, text3, text4);\r\n  });\r\n  var validCalPoints = [];\r\n  var offset = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  for (let i = 0; i < calPoints.length; i++) {\r\n    let points = calPoints[i];\r\n    if (typeof points[index] !== 'undefined' && points[index] !== null) {\r\n      validCalPoints.push(points[index]);\r\n    }\r\n  }\r\n  offset.x = Math.round(validCalPoints[0][0].x);\r\n  return {\r\n    textList: textList,\r\n    offset: offset\r\n  };\r\n}\r\n\r\nfunction filterSeries(series) {\r\n  let tempSeries = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    if (series[i].show == true) {\r\n      tempSeries.push(series[i])\r\n    }\r\n  }\r\n  return tempSeries;\r\n}\r\n\r\nfunction findCurrentIndex(currentPoints, calPoints, opts, config) {\r\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\r\n  var current={ index:-1, group:[] };\r\n  var spacing = opts.chartData.eachSpacing / 2;\r\n  let xAxisPoints = [];\r\n  if (calPoints && calPoints.length > 0) {\r\n    if (!opts.categories) {\r\n      spacing = 0;\r\n    }else{\r\n      for (let i = 1; i < opts.chartData.xAxisPoints.length; i++) {\r\n        xAxisPoints.push(opts.chartData.xAxisPoints[i] - spacing);\r\n      }\r\n      if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {\r\n        xAxisPoints = opts.chartData.xAxisPoints;\r\n      }\r\n    }\r\n    if (isInExactChartArea(currentPoints, opts, config)) {\r\n      if (!opts.categories) {\r\n        let timePoints = Array(calPoints.length);\r\n        for (let i = 0; i < calPoints.length; i++) {\r\n          timePoints[i] = Array(calPoints[i].length)\r\n          for (let j = 0; j < calPoints[i].length; j++) {\r\n            timePoints[i][j] = (Math.abs(calPoints[i][j].x - currentPoints.x));\r\n          }\r\n        };\r\n        let pointValue =  Array(timePoints.length);\r\n        let pointIndex =  Array(timePoints.length);\r\n        for (let i = 0; i < timePoints.length; i++) {\r\n          pointValue[i] = Math.min.apply(null, timePoints[i]);\r\n          pointIndex[i] = timePoints[i].indexOf(pointValue[i]);\r\n        }\r\n        let minValue = Math.min.apply(null, pointValue);\r\n        current.index = [];\r\n        for (let i = 0; i < pointValue.length; i++) {\r\n          if(pointValue[i] == minValue){\r\n            current.group.push(i);\r\n            current.index.push(pointIndex[i]);\r\n          }\r\n        };\r\n      }else{\r\n        xAxisPoints.forEach(function(item, index) {\r\n          if (currentPoints.x + offset + spacing > item) {\r\n            current.index = index;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nfunction findBarChartCurrentIndex(currentPoints, calPoints, opts, config) {\r\n  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\r\n  var current={ index:-1, group:[] };\r\n  var spacing = opts.chartData.eachSpacing / 2;\r\n  let yAxisPoints = opts.chartData.yAxisPoints;\r\n  if (calPoints && calPoints.length > 0) {\r\n    if (isInExactChartArea(currentPoints, opts, config)) {\r\n      yAxisPoints.forEach(function(item, index) {\r\n        if (currentPoints.y + offset + spacing > item) {\r\n          current.index = index;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nfunction findLegendIndex(currentPoints, legendData, opts) {\r\n  let currentIndex = -1;\r\n  let gap = 0;\r\n  if (isInExactLegendArea(currentPoints, legendData.area)) {\r\n    let points = legendData.points;\r\n    let index = -1;\r\n    for (let i = 0, len = points.length; i < len; i++) {\r\n      let item = points[i];\r\n      for (let j = 0; j < item.length; j++) {\r\n        index += 1;\r\n        let area = item[j]['area'];\r\n        if (area && currentPoints.x > area[0] - gap && currentPoints.x < area[2] + gap && currentPoints.y > area[1] - gap && currentPoints.y < area[3] + gap) {\r\n          currentIndex = index;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return currentIndex;\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction isInExactLegendArea(currentPoints, area) {\r\n  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y && currentPoints.y < area.end.y;\r\n}\r\n\r\nfunction isInExactChartArea(currentPoints, opts, config) {\r\n  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];\r\n}\r\n\r\nfunction findRadarChartCurrentIndex(currentPoints, radarData, count) {\r\n  var eachAngleArea = 2 * Math.PI / count;\r\n  var currentIndex = -1;\r\n  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {\r\n    var fixAngle = function fixAngle(angle) {\r\n      if (angle < 0) {\r\n        angle += 2 * Math.PI;\r\n      }\r\n      if (angle > 2 * Math.PI) {\r\n        angle -= 2 * Math.PI;\r\n      }\r\n      return angle;\r\n    };\r\n    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);\r\n    angle = -1 * angle;\r\n    if (angle < 0) {\r\n      angle += 2 * Math.PI;\r\n    }\r\n    var angleList = radarData.angleList.map(function(item) {\r\n      item = fixAngle(-1 * item);\r\n      return item;\r\n    });\r\n    angleList.forEach(function(item, index) {\r\n      var rangeStart = fixAngle(item - eachAngleArea / 2);\r\n      var rangeEnd = fixAngle(item + eachAngleArea / 2);\r\n      if (rangeEnd < rangeStart) {\r\n        rangeEnd += 2 * Math.PI;\r\n      }\r\n      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <= rangeEnd) {\r\n        currentIndex = index;\r\n      }\r\n    });\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findFunnelChartCurrentIndex(currentPoints, funnelData) {\r\n  var currentIndex = -1;\r\n  for (var i = 0, len = funnelData.series.length; i < len; i++) {\r\n    var item = funnelData.series[i];\r\n    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findWordChartCurrentIndex(currentPoints, wordData) {\r\n  var currentIndex = -1;\r\n  for (var i = 0, len = wordData.length; i < len; i++) {\r\n    var item = wordData[i];\r\n    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findMapChartCurrentIndex(currentPoints, opts) {\r\n  var currentIndex = -1;\r\n  var cData = opts.chartData.mapData;\r\n  var data = opts.series;\r\n  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);\r\n  var poi = [tmp.x, tmp.y];\r\n  for (var i = 0, len = data.length; i < len; i++) {\r\n    var item = data[i].geometry.coordinates;\r\n    if (isPoiWithinPoly(poi, item, opts.chartData.mapData.mercator)) {\r\n      currentIndex = i;\r\n      break;\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findRoseChartCurrentIndex(currentPoints, pieData, opts) {\r\n  var currentIndex = -1;\r\n  var series = getRoseDataPoints(opts._series_, opts.extra.rose.type, pieData.radius, pieData.radius);\r\n  if (pieData && pieData.center && isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\r\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\r\n    angle = -angle;\r\n    if(opts.extra.rose && opts.extra.rose.offsetAngle){\r\n      angle = angle - opts.extra.rose.offsetAngle * Math.PI / 180;\r\n    }\r\n    for (var i = 0, len = series.length; i < len; i++) {\r\n      if (isInAngleRange(angle, series[i]._start_, series[i]._start_ + series[i]._rose_proportion_ * 2 * Math.PI)) {\r\n        currentIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction findPieChartCurrentIndex(currentPoints, pieData, opts) {\r\n  var currentIndex = -1;\r\n  var series = getPieDataPoints(pieData.series);\r\n  if (pieData && pieData.center && isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {\r\n    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);\r\n    angle = -angle;\r\n    if(opts.extra.pie && opts.extra.pie.offsetAngle){\r\n      angle = angle - opts.extra.pie.offsetAngle * Math.PI / 180;\r\n    }\r\n    if(opts.extra.ring && opts.extra.ring.offsetAngle){\r\n      angle = angle - opts.extra.ring.offsetAngle * Math.PI / 180;\r\n    }\r\n    for (var i = 0, len = series.length; i < len; i++) {\r\n      if (isInAngleRange(angle, series[i]._start_, series[i]._start_ + series[i]._proportion_ * 2 * Math.PI)) {\r\n        currentIndex = i;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return currentIndex;\r\n}\r\n\r\nfunction isInExactPieChartArea(currentPoints, center, radius) {\r\n  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);\r\n}\r\n\r\n\r\nfunction splitPoints(points,eachSeries) {\r\n  var newPoints = [];\r\n  var items = [];\r\n  points.forEach(function(item, index) {\r\n    if(eachSeries.connectNulls){\r\n      if (item !== null) {\r\n        items.push(item);\r\n      }\r\n    }else{\r\n      if (item !== null) {\r\n        items.push(item);\r\n      } else {\r\n        if (items.length) {\r\n          newPoints.push(items);\r\n        }\r\n        items = [];\r\n      }\r\n    }\r\n    \r\n  });\r\n  if (items.length) {\r\n    newPoints.push(items);\r\n  }\r\n  return newPoints;\r\n}\r\n\r\n\r\nfunction calLegendData(series, opts, config, chartData, context) {\r\n  let legendData = {\r\n    area: {\r\n      start: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      end: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      width: 0,\r\n      height: 0,\r\n      wholeWidth: 0,\r\n      wholeHeight: 0\r\n    },\r\n    points: [],\r\n    widthArr: [],\r\n    heightArr: []\r\n  };\r\n  if (opts.legend.show === false) {\r\n    chartData.legendData = legendData;\r\n    return legendData;\r\n  }\r\n  let padding = opts.legend.padding * opts.pix;\r\n  let margin = opts.legend.margin * opts.pix;\r\n  let fontSize = opts.legend.fontSize ? opts.legend.fontSize * opts.pix : config.fontSize;\r\n  let shapeWidth = 15 * opts.pix;\r\n  let shapeRight = 5 * opts.pix;\r\n  let lineHeight = Math.max(opts.legend.lineHeight * opts.pix, fontSize);\r\n  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n    let legendList = [];\r\n    let widthCount = 0;\r\n    let widthCountArr = [];\r\n    let currentRow = [];\r\n    for (let i = 0; i < series.length; i++) {\r\n      let item = series[i];\r\n      const legendText = item.legendText ? item.legendText : item.name;\r\n      let itemWidth = shapeWidth + shapeRight + measureText(legendText || 'undefined', fontSize, context) + opts.legend.itemGap * opts.pix;\r\n      if (widthCount + itemWidth > opts.width - opts.area[1] - opts.area[3]) {\r\n        legendList.push(currentRow);\r\n        widthCountArr.push(widthCount - opts.legend.itemGap * opts.pix);\r\n        widthCount = itemWidth;\r\n        currentRow = [item];\r\n      } else {\r\n        widthCount += itemWidth;\r\n        currentRow.push(item);\r\n      }\r\n    }\r\n    if (currentRow.length) {\r\n      legendList.push(currentRow);\r\n      widthCountArr.push(widthCount - opts.legend.itemGap * opts.pix);\r\n      legendData.widthArr = widthCountArr;\r\n      let legendWidth = Math.max.apply(null, widthCountArr);\r\n      switch (opts.legend.float) {\r\n        case 'left':\r\n          legendData.area.start.x = opts.area[3];\r\n          legendData.area.end.x = opts.area[3] + legendWidth + 2 * padding;\r\n          break;\r\n        case 'right':\r\n          legendData.area.start.x = opts.width - opts.area[1] - legendWidth - 2 * padding;\r\n          legendData.area.end.x = opts.width - opts.area[1];\r\n          break;\r\n        default:\r\n          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;\r\n          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;\r\n      }\r\n      legendData.area.width = legendWidth + 2 * padding;\r\n      legendData.area.wholeWidth = legendWidth + 2 * padding;\r\n      legendData.area.height = legendList.length * lineHeight + 2 * padding;\r\n      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;\r\n      legendData.points = legendList;\r\n    }\r\n  } else {\r\n    let len = series.length;\r\n    let maxHeight = opts.height - opts.area[0] - opts.area[2] - 2 * margin - 2 * padding;\r\n    let maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);\r\n    legendData.area.height = maxLength * lineHeight + padding * 2;\r\n    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;\r\n    switch (opts.legend.float) {\r\n      case 'top':\r\n        legendData.area.start.y = opts.area[0] + margin;\r\n        legendData.area.end.y = opts.area[0] + margin + legendData.area.height;\r\n        break;\r\n      case 'bottom':\r\n        legendData.area.start.y = opts.height - opts.area[2] - margin - legendData.area.height;\r\n        legendData.area.end.y = opts.height - opts.area[2] - margin;\r\n        break;\r\n      default:\r\n        legendData.area.start.y = (opts.height - legendData.area.height) / 2;\r\n        legendData.area.end.y = (opts.height + legendData.area.height) / 2;\r\n    }\r\n    let lineNum = len % maxLength === 0 ? len / maxLength : Math.floor((len / maxLength) + 1);\r\n    let currentRow = [];\r\n    for (let i = 0; i < lineNum; i++) {\r\n      let temp = series.slice(i * maxLength, i * maxLength + maxLength);\r\n      currentRow.push(temp);\r\n    }\r\n    legendData.points = currentRow;\r\n    if (currentRow.length) {\r\n      for (let i = 0; i < currentRow.length; i++) {\r\n        let item = currentRow[i];\r\n        let maxWidth = 0;\r\n        for (let j = 0; j < item.length; j++) {\r\n          let itemWidth = shapeWidth + shapeRight + measureText(item[j].name || 'undefined', fontSize, context) + opts.legend.itemGap * opts.pix;\r\n          if (itemWidth > maxWidth) {\r\n            maxWidth = itemWidth;\r\n          }\r\n        }\r\n        legendData.widthArr.push(maxWidth);\r\n        legendData.heightArr.push(item.length * lineHeight + padding * 2);\r\n      }\r\n      let legendWidth = 0\r\n      for (let i = 0; i < legendData.widthArr.length; i++) {\r\n        legendWidth += legendData.widthArr[i];\r\n      }\r\n      legendData.area.width = legendWidth - opts.legend.itemGap * opts.pix + 2 * padding;\r\n      legendData.area.wholeWidth = legendData.area.width + padding;\r\n    }\r\n  }\r\n  switch (opts.legend.position) {\r\n    case 'top':\r\n      legendData.area.start.y = opts.area[0] + margin;\r\n      legendData.area.end.y = opts.area[0] + margin + legendData.area.height;\r\n      break;\r\n    case 'bottom':\r\n      legendData.area.start.y = opts.height - opts.area[2] - legendData.area.height - margin;\r\n      legendData.area.end.y = opts.height - opts.area[2] - margin;\r\n      break;\r\n    case 'left':\r\n      legendData.area.start.x = opts.area[3];\r\n      legendData.area.end.x = opts.area[3] + legendData.area.width;\r\n      break;\r\n    case 'right':\r\n      legendData.area.start.x = opts.width - opts.area[1] - legendData.area.width;\r\n      legendData.area.end.x = opts.width - opts.area[1];\r\n      break;\r\n  }\r\n  chartData.legendData = legendData;\r\n  return legendData;\r\n}\r\n\r\nfunction calCategoriesData(categories, opts, config, eachSpacing, context) {\r\n  var result = {\r\n    angle: 0,\r\n    xAxisHeight: opts.xAxis.lineHeight * opts.pix + opts.xAxis.marginTop * opts.pix\r\n  };\r\n  var fontSize = opts.xAxis.fontSize * opts.pix;\r\n  var categoriesTextLenth = categories.map(function(item,index) {\r\n    var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item,index,opts) : item;\r\n    return measureText(String(xitem), fontSize, context);\r\n  });\r\n  var maxTextLength = Math.max.apply(this, categoriesTextLenth);\r\n  if (opts.xAxis.rotateLabel == true) {\r\n    result.angle = opts.xAxis.rotateAngle * Math.PI / 180;\r\n    let tempHeight = opts.xAxis.marginTop * opts.pix * 2 +  Math.abs(maxTextLength * Math.sin(result.angle))\r\n    tempHeight = tempHeight < fontSize + opts.xAxis.marginTop * opts.pix * 2 ? tempHeight + opts.xAxis.marginTop * opts.pix * 2 : tempHeight;\r\n    result.xAxisHeight = tempHeight;\r\n  }\r\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\r\n    result.xAxisHeight += 6 * opts.pix;\r\n  }\r\n  if (opts.xAxis.disabled){\r\n    result.xAxisHeight = 0;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getXAxisTextList(series, opts, config, stack) {\r\n  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\r\n  var data;\r\n  if (stack == 'stack') {\r\n    data = dataCombineStack(series, opts.categories.length);\r\n  } else {\r\n    data = dataCombine(series);\r\n  }\r\n  var sorted = [];\r\n  // remove null from data\r\n  data = data.filter(function(item) {\r\n    //return item !== null;\r\n    if (typeof item === 'object' && item !== null) {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        return item !== null;\r\n      } else {\r\n        return item.value !== null;\r\n      }\r\n    } else {\r\n      return item !== null;\r\n    }\r\n  });\r\n  data.map(function(item) {\r\n    if (typeof item === 'object') {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        if (opts.type == 'candle') {\r\n          item.map(function(subitem) {\r\n            sorted.push(subitem);\r\n          })\r\n        } else {\r\n          sorted.push(item[0]);\r\n        }\r\n      } else {\r\n        sorted.push(item.value);\r\n      }\r\n    } else {\r\n      sorted.push(item);\r\n    }\r\n  })\r\n\r\n  var minData = 0;\r\n  var maxData = 0;\r\n  if (sorted.length > 0) {\r\n    minData = Math.min.apply(this, sorted);\r\n    maxData = Math.max.apply(this, sorted);\r\n  }\r\n  //为了兼容v1.9.0之前的项目\r\n  if (index > -1) {\r\n    if (typeof opts.xAxis.data[index].min === 'number') {\r\n      minData = Math.min(opts.xAxis.data[index].min, minData);\r\n    }\r\n    if (typeof opts.xAxis.data[index].max === 'number') {\r\n      maxData = Math.max(opts.xAxis.data[index].max, maxData);\r\n    }\r\n  } else {\r\n    if (typeof opts.xAxis.min === 'number') {\r\n      minData = Math.min(opts.xAxis.min, minData);\r\n    }\r\n    if (typeof opts.xAxis.max === 'number') {\r\n      maxData = Math.max(opts.xAxis.max, maxData);\r\n    }\r\n  }\r\n  if (minData === maxData) {\r\n    var rangeSpan = maxData || 10;\r\n    maxData += rangeSpan;\r\n  }\r\n  //var dataRange = getDataRange(minData, maxData);\r\n  var minRange = minData;\r\n  var maxRange = maxData;\r\n  var range = [];\r\n  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;\r\n  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {\r\n    range.push(minRange + eachRange * i);\r\n  }\r\n  return range;\r\n}\r\n\r\nfunction calXAxisData(series, opts, config, context) {\r\n  //堆叠图重算Y轴\r\n  var columnstyle = assign({}, {\r\n    type: \"\"\r\n  }, opts.extra.bar);\r\n  var result = {\r\n    angle: 0,\r\n    xAxisHeight: opts.xAxis.lineHeight * opts.pix + opts.xAxis.marginTop * opts.pix\r\n  };\r\n  result.ranges = getXAxisTextList(series, opts, config, columnstyle.type);\r\n  result.rangesFormat = result.ranges.map(function(item) {\r\n    //item = opts.xAxis.formatter ? opts.xAxis.formatter(item) : util.toFixed(item, 2);\r\n    item = util.toFixed(item, 2);\r\n    return item;\r\n  });\r\n  var xAxisScaleValues = result.ranges.map(function(item) {\r\n    // 如果刻度值是浮点数,则保留两位小数\r\n    item = util.toFixed(item, 2);\r\n    // 若有自定义格式则调用自定义的格式化函数\r\n    //item = opts.xAxis.formatter ? opts.xAxis.formatter(Number(item)) : item;\r\n    return item;\r\n  });\r\n  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));\r\n  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\\结束点以及总长\r\n  var eachSpacing = result.eachSpacing;\r\n  var textLength = xAxisScaleValues.map(function(item) {\r\n    return measureText(item, opts.xAxis.fontSize * opts.pix, context);\r\n  });\r\n  if (opts.xAxis.disabled === true) {\r\n    result.xAxisHeight = 0;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getRadarDataPoints(angleList, center, radius, series, opts) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var radarOption = opts.extra.radar || {};\r\n  radarOption.max = radarOption.max || 0;\r\n  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\r\n  var data = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    let each = series[i];\r\n    let listItem = {};\r\n    listItem.color = each.color;\r\n    listItem.legendShape = each.legendShape;\r\n    listItem.pointShape = each.pointShape;\r\n    listItem.data = [];\r\n    each.data.forEach(function(item, index) {\r\n      let tmp = {};\r\n      tmp.angle = angleList[index];\r\n      tmp.proportion = item / maxData;\r\n      tmp.value = item;\r\n      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion * process * Math.sin(tmp.angle), center);\r\n      listItem.data.push(tmp);\r\n    });\r\n    data.push(listItem);\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getPieDataPoints(series, radius) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  var count = 0;\r\n  var _start_ = 0;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    count += item.data;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (count === 0) {\r\n      item._proportion_ = 1 / series.length * process;\r\n    } else {\r\n      item._proportion_ = item.data / count * process;\r\n    }\r\n    item._radius_ = radius;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item._start_ = _start_;\r\n    _start_ += 2 * item._proportion_ * Math.PI;\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getFunnelDataPoints(series, radius, option, eachSpacing) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  for (let i = 0; i < series.length; i++) {\r\n    if(option.type == 'funnel'){\r\n      series[i].radius = series[i].data / series[0].data * radius * process;\r\n    }else{\r\n      series[i].radius =  (eachSpacing * (series.length - i)) / (eachSpacing * series.length) * radius * process;\r\n    }\r\n    series[i]._proportion_ = series[i].data / series[0].data;\r\n  }\r\n  // if(option.type !== 'pyramid'){\r\n  //   series.reverse();\r\n  // }\r\n  return series;\r\n}\r\n\r\nfunction getRoseDataPoints(series, type, minRadius, radius) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var count = 0;\r\n  var _start_ = 0;\r\n  var dataArr = [];\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    count += item.data;\r\n    dataArr.push(item.data);\r\n  }\r\n  var minData = Math.min.apply(null, dataArr);\r\n  var maxData = Math.max.apply(null, dataArr);\r\n  var radiusLength = radius - minRadius;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (count === 0) {\r\n      item._proportion_ = 1 / series.length * process;\r\n      item._rose_proportion_ = 1 / series.length * process;\r\n    } else {\r\n      item._proportion_ = item.data / count * process;\r\n      if(type == 'area'){\r\n        item._rose_proportion_ = 1 / series.length * process;\r\n      }else{\r\n        item._rose_proportion_ = item.data / count * process;\r\n      }\r\n    }\r\n    item._radius_ = minRadius + radiusLength * ((item.data - minData) / (maxData - minData)) || radius;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item._start_ = _start_;\r\n    _start_ += 2 * item._rose_proportion_ * Math.PI;\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getArcbarDataPoints(series, arcbarOption) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  if (process == 1) {\r\n    process = 0.999999;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    let totalAngle;\r\n    if (arcbarOption.type == 'circle') {\r\n      totalAngle = 2;\r\n    } else {\r\n      if(arcbarOption.direction == 'ccw'){\r\n        if (arcbarOption.startAngle < arcbarOption.endAngle) {\r\n          totalAngle = 2 + arcbarOption.startAngle - arcbarOption.endAngle;\r\n        } else {\r\n          totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n        }\r\n      }else{\r\n        if (arcbarOption.endAngle < arcbarOption.startAngle) {\r\n          totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\r\n        } else {\r\n          totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n        }\r\n      }\r\n    }\r\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\r\n    if(arcbarOption.direction == 'ccw'){\r\n      item._proportion_ = arcbarOption.startAngle - totalAngle * item.data * process ;\r\n    }\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getGaugeArcbarDataPoints(series, arcbarOption) {\r\n  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\r\n  if (process == 1) {\r\n    process = 0.999999;\r\n  }\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    let totalAngle;\r\n    if (arcbarOption.type == 'circle') {\r\n      totalAngle = 2;\r\n    } else {\r\n      if (arcbarOption.endAngle < arcbarOption.startAngle) {\r\n        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;\r\n      } else {\r\n        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;\r\n      }\r\n    }\r\n    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getGaugeAxisPoints(categories, startAngle, endAngle) {\r\n  let totalAngle;\r\n  if (endAngle < startAngle) {\r\n    totalAngle = 2 + endAngle - startAngle;\r\n  } else {\r\n    totalAngle = startAngle - endAngle;\r\n  }\r\n  let tempStartAngle = startAngle;\r\n  for (let i = 0; i < categories.length; i++) {\r\n    categories[i].value = categories[i].value === null ? 0 : categories[i].value;\r\n    categories[i]._startAngle_ = tempStartAngle;\r\n    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;\r\n    if (categories[i]._endAngle_ >= 2) {\r\n      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;\r\n    }\r\n    tempStartAngle = categories[i]._endAngle_;\r\n  }\r\n  return categories;\r\n}\r\n\r\nfunction getGaugeDataPoints(series, categories, gaugeOption) {\r\n  let process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    item.data = item.data === null ? 0 : item.data;\r\n    if (gaugeOption.pointer.color == 'auto') {\r\n      for (let i = 0; i < categories.length; i++) {\r\n        if (item.data <= categories[i].value) {\r\n          item.color = categories[i].color;\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      item.color = gaugeOption.pointer.color;\r\n    }\r\n    let totalAngle;\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;\r\n    item._oldAngle_ = gaugeOption.oldAngle;\r\n    if (gaugeOption.oldAngle < gaugeOption.endAngle) {\r\n      item._oldAngle_ += 2;\r\n    }\r\n    if (item.data >= gaugeOption.oldData) {\r\n      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;\r\n    } else {\r\n      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;\r\n    }\r\n    if (item._proportion_ >= 2) {\r\n      item._proportion_ = item._proportion_ % 2;\r\n    }\r\n  }\r\n  return series;\r\n}\r\n\r\nfunction getPieTextMaxLength(series, config, context, opts) {\r\n  series = getPieDataPoints(series);\r\n  let maxLength = 0;\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    let text = item.formatter ? item.formatter(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';\r\n    maxLength = Math.max(maxLength, measureText(text, item.textSize * opts.pix || config.fontSize, context));\r\n  }\r\n  return maxLength;\r\n}\r\n\r\nfunction fixColumeData(points, eachSpacing, columnLen, index, config, opts) {\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    var seriesGap = 0;\r\n    var categoryGap = 0;\r\n    if (opts.type == 'mix') {\r\n      seriesGap = opts.extra.mix.column.seriesGap * opts.pix || 0;\r\n      categoryGap = opts.extra.mix.column.categoryGap * opts.pix || 0;\r\n    } else {\r\n      seriesGap = opts.extra.column.seriesGap * opts.pix || 0;\r\n      categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n    }\r\n    seriesGap =  Math.min(seriesGap, eachSpacing / columnLen)\r\n    categoryGap =  Math.min(categoryGap, eachSpacing / columnLen)\r\n    item.width = Math.ceil((eachSpacing - 2 * categoryGap - seriesGap * (columnLen - 1)) / columnLen);\r\n    if (opts.extra.mix && opts.extra.mix.column.width && +opts.extra.mix.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.mix.column.width * opts.pix);\r\n    }\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    item.x += (index + 0.5 - columnLen / 2) * (item.width + seriesGap);\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixBarData(points, eachSpacing, columnLen, index, config, opts) {\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    var seriesGap = 0;\r\n    var categoryGap = 0;\r\n    seriesGap = opts.extra.bar.seriesGap * opts.pix || 0;\r\n    categoryGap = opts.extra.bar.categoryGap * opts.pix || 0;\r\n    seriesGap =  Math.min(seriesGap, eachSpacing / columnLen)\r\n    categoryGap =  Math.min(categoryGap, eachSpacing / columnLen)\r\n    item.width = Math.ceil((eachSpacing - 2 * categoryGap - seriesGap * (columnLen - 1)) / columnLen);\r\n    if (opts.extra.bar && opts.extra.bar.width && +opts.extra.bar.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.bar.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    item.y += (index + 0.5 - columnLen / 2) * (item.width + seriesGap);\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {\r\n  var categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n  return points.map(function(item) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = eachSpacing - 2 * categoryGap;\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (index > 0) {\r\n      item.width -= border;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {\r\n  var categoryGap = opts.extra.column.categoryGap * opts.pix || 0;\r\n  return points.map(function(item, indexn) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = Math.ceil(eachSpacing - 2 * categoryGap);\r\n    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.column.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction fixBarStackData(points, eachSpacing, columnLen, index, config, opts, series) {\r\n  var categoryGap = opts.extra.bar.categoryGap * opts.pix || 0;\r\n  return points.map(function(item, indexn) {\r\n    if (item === null) {\r\n      return null;\r\n    }\r\n    item.width = Math.ceil(eachSpacing - 2 * categoryGap);\r\n    if (opts.extra.bar && opts.extra.bar.width && +opts.extra.bar.width > 0) {\r\n      item.width = Math.min(item.width, +opts.extra.bar.width * opts.pix);\r\n    }\r\n    if (item.width <= 0) {\r\n      item.width = 1;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction getXAxisPoints(categories, opts, config) {\r\n  var spacingValid = opts.width - opts.area[1] - opts.area[3];\r\n  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;\r\n  if ((opts.type == 'line' || opts.type == 'area' || opts.type == 'scatter' || opts.type == 'bubble' || opts.type == 'bar') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {\r\n    dataCount -= 1;\r\n  }\r\n  var widthRatio = 0;\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    widthRatio = opts.extra.mount.widthRatio - 1;\r\n    dataCount += widthRatio;\r\n  }\r\n  var eachSpacing = spacingValid / dataCount;\r\n  var xAxisPoints = [];\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  categories.forEach(function(item, index) {\r\n    xAxisPoints.push(startX + widthRatio / 2 * eachSpacing + index * eachSpacing);\r\n  });\r\n  if (opts.xAxis.boundaryGap !== 'justify') {\r\n    if (opts.enableScroll === true) {\r\n      xAxisPoints.push(startX + widthRatio * eachSpacing + categories.length * eachSpacing);\r\n    } else {\r\n      xAxisPoints.push(endX);\r\n    }\r\n  }\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    startX: startX,\r\n    endX: endX,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var cPoints = [];\r\n      item.forEach(function(items, indexs) {\r\n        var point = {};\r\n        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\r\n        var value = items.value || items;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        height *= process;\r\n        point.y = opts.height - Math.round(height) - opts.area[2];\r\n        cPoints.push(point);\r\n      });\r\n      points.push(cPoints);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var boundaryGap = 'center';\r\n  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'scatter' || opts.type == 'bubble' ) {\r\n    boundaryGap = opts.xAxis.boundaryGap;\r\n  }\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        if (item.constructor.toString().indexOf('Array') > -1) {\r\n          let xranges, xminRange, xmaxRange;\r\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n          xminRange = xranges.shift();\r\n          xmaxRange = xranges.pop();\r\n          value = item[1];\r\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n          if(opts.type == 'bubble'){\r\n            point.r = item[2];\r\n            point.t = item[3];\r\n          }\r\n        } else {\r\n          value = item.value;\r\n        }\r\n      }\r\n      if (boundaryGap == 'center') {\r\n        point.x += eachSpacing / 2;\r\n      }\r\n      var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n      height *= process;\r\n      point.y = opts.height - height - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getLineDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, lineOption, process){\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var boundaryGap = opts.xAxis.boundaryGap;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      if(lineOption.animation == 'vertical'){\r\n        point.x = xAxisPoints[index];\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          if (item.constructor.toString().indexOf('Array') > -1) {\r\n            let xranges, xminRange, xmaxRange;\r\n            xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n            xminRange = xranges.shift();\r\n            xmaxRange = xranges.pop();\r\n            value = item[1];\r\n            point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n          } else {\r\n            value = item.value;\r\n          }\r\n        }\r\n        if (boundaryGap == 'center') {\r\n          point.x += eachSpacing / 2;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        height *= process;\r\n        point.y = opts.height - height - opts.area[2];\r\n        points.push(point);\r\n      }else{\r\n        point.x = xAxisPoints[0] + eachSpacing * index * process;\r\n        var value = item;\r\n        if (boundaryGap == 'center') {\r\n          point.x += eachSpacing / 2;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        point.y = opts.height - height - opts.area[2];\r\n        points.push(point);\r\n      }\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, zeroPoints, process){\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        if (item.constructor.toString().indexOf('Array') > -1) {\r\n          let xranges, xminRange, xmaxRange;\r\n          xranges = [].concat(opts.chartData.xAxisData.ranges);\r\n          xminRange = xranges.shift();\r\n          xmaxRange = xranges.pop();\r\n          value = item[1];\r\n          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);\r\n        } else {\r\n          value = item.value;\r\n        }\r\n      }\r\n      point.x += eachSpacing / 2;\r\n      var height = validHeight * (value * process - minRange) / (maxRange - minRange);\r\n      point.y = opts.height - height - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints) {\r\n  var process = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  var mountWidth = eachSpacing * mountOption.widthRatio;\r\n  series.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index];\r\n      point.x += eachSpacing / 2;\r\n      var value = item.data;\r\n      var height = validHeight * (value * process - minRange) / (maxRange - minRange);\r\n      point.y = opts.height - height - opts.area[2];\r\n      point.value = value;\r\n      point.width = mountWidth;\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config) {\r\n  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  var validWidth = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.y = yAxisPoints[index];\r\n      var value = item;\r\n      if (typeof item === 'object' && item !== null) {\r\n        value = item.value;\r\n      }\r\n      var height = validWidth * (value - minRange) / (maxRange - minRange);\r\n      height *= process;\r\n      point.height = height;\r\n      point.value = value;\r\n      point.x = height + opts.area[3];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\r\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\r\n  var points = [];\r\n  var validHeight = opts.height - opts.area[0] - opts.area[2];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);\r\n\r\n      if (seriesIndex > 0) {\r\n        var value = 0;\r\n        for (let i = 0; i <= seriesIndex; i++) {\r\n          value += stackSeries[i].data[index];\r\n        }\r\n        var value0 = value - item;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\r\n      } else {\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          value = item.value;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = 0;\r\n      }\r\n      var heightc = height0;\r\n      height *= process;\r\n      heightc *= process;\r\n      point.y = opts.height - Math.round(height) - opts.area[2];\r\n      point.y0 = opts.height - Math.round(heightc) - opts.area[2];\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {\r\n  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;\r\n  var points = [];\r\n  var validHeight = opts.width - opts.area[1] - opts.area[3];\r\n  data.forEach(function(item, index) {\r\n    if (item === null) {\r\n      points.push(null);\r\n    } else {\r\n      var point = {};\r\n      point.color = item.color;\r\n      point.y = yAxisPoints[index];\r\n      if (seriesIndex > 0) {\r\n        var value = 0;\r\n        for (let i = 0; i <= seriesIndex; i++) {\r\n          value += stackSeries[i].data[index];\r\n        }\r\n        var value0 = value - item;\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);\r\n      } else {\r\n        var value = item;\r\n        if (typeof item === 'object' && item !== null) {\r\n          value = item.value;\r\n        }\r\n        var height = validHeight * (value - minRange) / (maxRange - minRange);\r\n        var height0 = 0;\r\n      }\r\n      var heightc = height0;\r\n      height *= process;\r\n      heightc *= process;\r\n      point.height = height - heightc;\r\n      point.x = opts.area[3] + height;\r\n      point.x0 = opts.area[3] + heightc;\r\n      points.push(point);\r\n    }\r\n  });\r\n  return points;\r\n}\r\n\r\nfunction getYAxisTextList(series, opts, config, stack, yData) {\r\n  var index = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : -1;\r\n  var data;\r\n  if (stack == 'stack') {\r\n    data = dataCombineStack(series, opts.categories.length);\r\n  } else {\r\n    data = dataCombine(series);\r\n  }\r\n  var sorted = [];\r\n  // remove null from data\r\n  data = data.filter(function(item) {\r\n    //return item !== null;\r\n    if (typeof item === 'object' && item !== null) {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        return item !== null;\r\n      } else {\r\n        return item.value !== null;\r\n      }\r\n    } else {\r\n      return item !== null;\r\n    }\r\n  });\r\n  data.map(function(item) {\r\n    if (typeof item === 'object') {\r\n      if (item.constructor.toString().indexOf('Array') > -1) {\r\n        if (opts.type == 'candle') {\r\n          item.map(function(subitem) {\r\n            sorted.push(subitem);\r\n          })\r\n        } else {\r\n          sorted.push(item[1]);\r\n        }\r\n      } else {\r\n        sorted.push(item.value);\r\n      }\r\n    } else {\r\n      sorted.push(item);\r\n    }\r\n  })\r\n  var minData = yData.min || 0;\r\n  var maxData = yData.max || 0;\r\n  if (sorted.length > 0) {\r\n    minData = Math.min.apply(this, sorted);\r\n    maxData = Math.max.apply(this, sorted);\r\n  }\r\n  if (minData === maxData) {\r\n    if(maxData == 0){\r\n      maxData = 10;\r\n    }else{\r\n      minData = 0;\r\n    }\r\n  }\r\n  var dataRange = getDataRange(minData, maxData);\r\n  var minRange = (yData.min === undefined || yData.min === null) ? dataRange.minRange : yData.min;\r\n  var maxRange = (yData.max === undefined || yData.max === null) ? dataRange.maxRange : yData.max;\r\n  var eachRange = (maxRange - minRange) / opts.yAxis.splitNumber;\r\n  var range = [];\r\n  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {\r\n    range.push(minRange + eachRange * i);\r\n  }\r\n  return range.reverse();\r\n}\r\n\r\nfunction calYAxisData(series, opts, config, context) {\r\n  //堆叠图重算Y轴\r\n  var columnstyle = assign({}, {\r\n    type: \"\"\r\n  }, opts.extra.column);\r\n  //如果是多Y轴，重新计算\r\n  var YLength = opts.yAxis.data.length;\r\n  var newSeries = new Array(YLength);\r\n  if (YLength > 0) {\r\n    for (let i = 0; i < YLength; i++) {\r\n      newSeries[i] = [];\r\n      for (let j = 0; j < series.length; j++) {\r\n        if (series[j].index == i) {\r\n          newSeries[i].push(series[j]);\r\n        }\r\n      }\r\n    }\r\n    var rangesArr = new Array(YLength);\r\n    var rangesFormatArr = new Array(YLength);\r\n    var yAxisWidthArr = new Array(YLength);\r\n\r\n    for (let i = 0; i < YLength; i++) {\r\n      let yData = opts.yAxis.data[i];\r\n      //如果总开关不显示，强制每个Y轴为不显示\r\n      if (opts.yAxis.disabled == true) {\r\n        yData.disabled = true;\r\n      }\r\n      if(yData.type === 'categories'){\r\n        if(!yData.formatter){\r\n          yData.formatter = (val,index,opts) => {return val + (yData.unit || '')};\r\n        }\r\n        yData.categories = yData.categories || opts.categories;\r\n        rangesArr[i] = yData.categories;\r\n      }else{\r\n        if(!yData.formatter){\r\n          yData.formatter = (val,index,opts) => {return util.toFixed(val, yData.tofix || 0) + (yData.unit || '')};\r\n        }\r\n        rangesArr[i] = getYAxisTextList(newSeries[i], opts, config, columnstyle.type, yData, i);\r\n      }\r\n      let yAxisFontSizes = yData.fontSize * opts.pix || config.fontSize;\r\n      yAxisWidthArr[i] = {\r\n        position: yData.position ? yData.position : 'left',\r\n        width: 0\r\n      };\r\n      rangesFormatArr[i] = rangesArr[i].map(function(items,index) {\r\n        items = yData.formatter(items,index,opts);\r\n        yAxisWidthArr[i].width = Math.max(yAxisWidthArr[i].width, measureText(items, yAxisFontSizes, context) + 5);\r\n        return items;\r\n      });\r\n      let calibration = yData.calibration ? 4 * opts.pix : 0;\r\n      yAxisWidthArr[i].width += calibration + 3 * opts.pix;\r\n      if (yData.disabled === true) {\r\n        yAxisWidthArr[i].width = 0;\r\n      }\r\n    }\r\n  } else {\r\n    var rangesArr = new Array(1);\r\n    var rangesFormatArr = new Array(1);\r\n    var yAxisWidthArr = new Array(1);\r\n    if(opts.type === 'bar'){\r\n      rangesArr[0] = opts.categories;\r\n      if(!opts.yAxis.formatter){\r\n        opts.yAxis.formatter = (val,index,opts) => {return val + (opts.yAxis.unit || '')}\r\n      }\r\n    }else{\r\n      if(!opts.yAxis.formatter){\r\n        opts.yAxis.formatter = (val,index,opts) => {return val.toFixed(opts.yAxis.tofix ) + (opts.yAxis.unit || '')}\r\n      }\r\n      rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type, {});\r\n    }\r\n    yAxisWidthArr[0] = {\r\n      position: 'left',\r\n      width: 0\r\n    };\r\n    var yAxisFontSize = opts.yAxis.fontSize * opts.pix || config.fontSize;\r\n    rangesFormatArr[0] = rangesArr[0].map(function(item,index) {\r\n      item = opts.yAxis.formatter(item,index,opts);\r\n      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize, context) + 5);\r\n      return item;\r\n    });\r\n    yAxisWidthArr[0].width += 3 * opts.pix;\r\n    if (opts.yAxis.disabled === true) {\r\n      yAxisWidthArr[0] = {\r\n        position: 'left',\r\n        width: 0\r\n      };\r\n      opts.yAxis.data[0] = {\r\n        disabled: true\r\n      };\r\n    } else {\r\n      opts.yAxis.data[0] = {\r\n        disabled: false,\r\n        position: 'left',\r\n        max: opts.yAxis.max,\r\n        min: opts.yAxis.min,\r\n        formatter: opts.yAxis.formatter\r\n      };\r\n      if(opts.type === 'bar'){\r\n        opts.yAxis.data[0].categories = opts.categories;\r\n        opts.yAxis.data[0].type = 'categories';\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    rangesFormat: rangesFormatArr,\r\n    ranges: rangesArr,\r\n    yAxisWidth: yAxisWidthArr\r\n  };\r\n}\r\n\r\nfunction calTooltipYAxisData(point, series, opts, config, eachSpacing) {\r\n  let ranges = [].concat(opts.chartData.yAxisData.ranges);\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  let minAxis = opts.area[0];\r\n  let items = [];\r\n  for (let i = 0; i < ranges.length; i++) {\r\n    let maxVal = Math.max.apply(this, ranges[i]);\r\n    let minVal = Math.min.apply(this, ranges[i]);\r\n    let item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;\r\n    item = opts.yAxis.data && opts.yAxis.data[i].formatter ? opts.yAxis.data[i].formatter(item, i, opts) : item.toFixed(0);\r\n    items.push(String(item))\r\n  }\r\n  return items;\r\n}\r\n\r\nfunction calMarkLineData(points, opts) {\r\n  let minRange, maxRange;\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  for (let i = 0; i < points.length; i++) {\r\n    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;\r\n    let range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);\r\n    minRange = range.pop();\r\n    maxRange = range.shift();\r\n    let height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);\r\n    points[i].y = opts.height - Math.round(height) - opts.area[2];\r\n  }\r\n  return points;\r\n}\r\n\r\nfunction contextRotate(context, opts) {\r\n  if (opts.rotateLock !== true) {\r\n    context.translate(opts.height, 0);\r\n    context.rotate(90 * Math.PI / 180);\r\n  } else if (opts._rotate_ !== true) {\r\n    context.translate(opts.height, 0);\r\n    context.rotate(90 * Math.PI / 180);\r\n    opts._rotate_ = true;\r\n  }\r\n}\r\n\r\nfunction drawPointShape(points, color, shape, context, opts) {\r\n  context.beginPath();\r\n  if (opts.dataPointShapeType == 'hollow') {\r\n    context.setStrokeStyle(color);\r\n    context.setFillStyle(opts.background);\r\n    context.setLineWidth(2 * opts.pix);\r\n  } else {\r\n    context.setStrokeStyle(\"#ffffff\");\r\n    context.setFillStyle(color);\r\n    context.setLineWidth(1 * opts.pix);\r\n  }\r\n  if (shape === 'diamond') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y);\r\n        context.lineTo(item.x, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'circle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n        context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n      }\r\n    });\r\n  } else if (shape === 'square') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x - 3.5, item.y - 3.5);\r\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n      }\r\n    });\r\n  } else if (shape === 'triangle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y + 4.5);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'none') {\r\n    return;\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n}\r\n\r\nfunction drawActivePoint(points, color, shape, context, opts, option, seriesIndex) {\r\n  if(!opts.tooltip){\r\n    return\r\n  }\r\n  if(opts.tooltip.group.length>0 && opts.tooltip.group.includes(seriesIndex) == false){\r\n    return\r\n  }\r\n  var pointIndex = typeof opts.tooltip.index === 'number' ? opts.tooltip.index : opts.tooltip.index[opts.tooltip.group.indexOf(seriesIndex)];\r\n  context.beginPath();\r\n  if (option.activeType == 'hollow') {\r\n    context.setStrokeStyle(color);\r\n    context.setFillStyle(opts.background);\r\n    context.setLineWidth(2 * opts.pix);\r\n  } else {\r\n    context.setStrokeStyle(\"#ffffff\");\r\n    context.setFillStyle(color);\r\n    context.setLineWidth(1 * opts.pix);\r\n  }\r\n  if (shape === 'diamond') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index ) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y);\r\n        context.lineTo(item.x, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'circle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n        context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n      }\r\n    });\r\n  } else if (shape === 'square') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x - 3.5, item.y - 3.5);\r\n        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n      }\r\n    });\r\n  } else if (shape === 'triangle') {\r\n    points.forEach(function(item, index) {\r\n      if (item !== null && pointIndex == index) {\r\n        context.moveTo(item.x, item.y - 4.5);\r\n        context.lineTo(item.x - 4.5, item.y + 4.5);\r\n        context.lineTo(item.x + 4.5, item.y + 4.5);\r\n        context.lineTo(item.x, item.y - 4.5);\r\n      }\r\n    });\r\n  } else if (shape === 'none') {\r\n    return;\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n}\r\n\r\nfunction drawRingTitle(opts, config, context, center) {\r\n  var titlefontSize = opts.title.fontSize || config.titleFontSize;\r\n  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;\r\n  var title = opts.title.name || '';\r\n  var subtitle = opts.subtitle.name || '';\r\n  var titleFontColor = opts.title.color || opts.fontColor;\r\n  var subtitleFontColor = opts.subtitle.color || opts.fontColor;\r\n  var titleHeight = title ? titlefontSize : 0;\r\n  var subtitleHeight = subtitle ? subtitlefontSize : 0;\r\n  var margin = 5;\r\n  if (subtitle) {\r\n    var textWidth = measureText(subtitle, subtitlefontSize * opts.pix, context);\r\n    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX|| 0) * opts.pix ;\r\n    var startY = center.y + subtitlefontSize * opts.pix / 2 + (opts.subtitle.offsetY || 0) * opts.pix;\r\n    if (title) {\r\n      startY += (titleHeight * opts.pix + margin) / 2;\r\n    }\r\n    context.beginPath();\r\n    context.setFontSize(subtitlefontSize * opts.pix);\r\n    context.setFillStyle(subtitleFontColor);\r\n    context.fillText(subtitle, startX, startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n  if (title) {\r\n    var _textWidth = measureText(title, titlefontSize * opts.pix, context);\r\n    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);\r\n    var _startY = center.y + titlefontSize * opts.pix / 2 + (opts.title.offsetY || 0) * opts.pix;\r\n    if (subtitle) {\r\n      _startY -= (subtitleHeight * opts.pix + margin) / 2;\r\n    }\r\n    context.beginPath();\r\n    context.setFontSize(titlefontSize * opts.pix);\r\n    context.setFillStyle(titleFontColor);\r\n    context.fillText(title, _startX, _startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawPointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        if (data[index].constructor.toString().indexOf('Array')>-1) {\r\n          value = data[index][1];\r\n        } else {\r\n          value = data[index].value\r\n        }\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      context.fillText(String(formatVal), item.x, item.y - 4 + textOffset * opts.pix);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawColumePointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  var Position = opts.extra.column.labelPosition;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        if (data[index].constructor.toString().indexOf('Array')>-1) {\r\n          value = data[index][1];\r\n        } else {\r\n          value = data[index].value\r\n        }\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      var startY = item.y - 4 * opts.pix + textOffset * opts.pix;\r\n      if(item.y > series.zeroPoints){\r\n        startY = item.y + textOffset * opts.pix + fontSize;\r\n      }\r\n      if(Position == 'insideTop'){\r\n        startY = item.y + fontSize + textOffset * opts.pix;\r\n        if(item.y > series.zeroPoints){\r\n          startY = item.y - textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n      }\r\n      if(Position == 'center'){\r\n        startY = item.y + textOffset * opts.pix + (opts.height - opts.area[2] - item.y + fontSize)/2;\r\n        if(series.zeroPoints < opts.height - opts.area[2]){\r\n          startY = item.y + textOffset * opts.pix + (series.zeroPoints - item.y + fontSize)/2;\r\n        }\r\n        if(item.y > series.zeroPoints){\r\n          startY = item.y - textOffset * opts.pix - (item.y - series.zeroPoints - fontSize)/2;\r\n        }\r\n        if(opts.extra.column.type == 'stack'){\r\n          startY = item.y + textOffset * opts.pix + (item.y0 - item.y + fontSize)/2;\r\n        }\r\n      }\r\n      if(Position == 'bottom'){\r\n        startY = opts.height - opts.area[2] + textOffset * opts.pix - 4 * opts.pix;\r\n        if(series.zeroPoints < opts.height - opts.area[2]){\r\n          startY = series.zeroPoints + textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n        if(item.y > series.zeroPoints){\r\n          startY = series.zeroPoints - textOffset * opts.pix + fontSize + 2 * opts.pix;\r\n        }\r\n        if(opts.extra.column.type == 'stack'){\r\n          startY = item.y0 + textOffset * opts.pix - 4 * opts.pix;\r\n        }\r\n      }\r\n      context.fillText(String(formatVal), item.x, startY);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawMountPointText(points, series, config, context, opts, zeroPoints) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  var Position = opts.extra.mount.labelPosition;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series[index].textSize ? series[index].textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series[index].textColor || opts.fontColor);\r\n      var value = item.value\r\n      var formatVal = series[index].formatter ? series[index].formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('center');\r\n      var startY = item.y - 4 * opts.pix + textOffset * opts.pix;\r\n      if(item.y > zeroPoints){\r\n        startY = item.y + textOffset * opts.pix + fontSize;\r\n      }\r\n      context.fillText(String(formatVal), item.x, startY);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawBarPointText(points, series, config, context, opts) {\r\n  // 绘制数据文案\r\n  var data = series.data;\r\n  var textOffset = series.textOffset ? series.textOffset : 0;\r\n  points.forEach(function(item, index) {\r\n    if (item !== null) {\r\n      context.beginPath();\r\n      var fontSize = series.textSize ? series.textSize * opts.pix : config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(series.textColor || opts.fontColor);\r\n      var value = data[index]\r\n      if (typeof data[index] === 'object' && data[index] !== null) {\r\n        value = data[index].value ;\r\n      }\r\n      var formatVal = series.formatter ? series.formatter(value,index,series,opts) : value;\r\n      context.setTextAlign('left');\r\n      context.fillText(String(formatVal), item.x + 4 * opts.pix , item.y + fontSize / 2 - 3 );\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {\r\n  radius -= gaugeOption.width / 2 + gaugeOption.labelOffset * opts.pix;\r\n  radius = radius < 10 ? 10 : radius;\r\n  let totalAngle;\r\n  if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n    totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n  } else {\r\n    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n  }\r\n  let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n  let totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;\r\n  let splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;\r\n  let nowAngle = gaugeOption.startAngle;\r\n  let nowNumber = gaugeOption.startNumber;\r\n  for (let i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\r\n    var pos = {\r\n      x: radius * Math.cos(nowAngle * Math.PI),\r\n      y: radius * Math.sin(nowAngle * Math.PI)\r\n    };\r\n    var labelText = gaugeOption.formatter ? gaugeOption.formatter(nowNumber,i,opts) : nowNumber;\r\n    pos.x += centerPosition.x - measureText(labelText, config.fontSize, context) / 2;\r\n    pos.y += centerPosition.y;\r\n    var startX = pos.x;\r\n    var startY = pos.y;\r\n    context.beginPath();\r\n    context.setFontSize(config.fontSize);\r\n    context.setFillStyle(gaugeOption.labelColor || opts.fontColor);\r\n    context.fillText(labelText, startX, startY + config.fontSize / 2);\r\n    context.closePath();\r\n    context.stroke();\r\n    nowAngle += splitAngle;\r\n    if (nowAngle >= 2) {\r\n      nowAngle = nowAngle % 2;\r\n    }\r\n    nowNumber += splitNumber;\r\n  }\r\n}\r\n\r\nfunction drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {\r\n  var radarOption = opts.extra.radar || {};\r\n  angleList.forEach(function(angle, index) {\r\n    if(radarOption.labelPointShow === true && opts.categories[index] !== ''){\r\n      var posPoint = {\r\n        x: radius * Math.cos(angle),\r\n        y: radius * Math.sin(angle)\r\n      };\r\n      var posPointAxis = convertCoordinateOrigin(posPoint.x, posPoint.y, centerPosition);\r\n      context.setFillStyle(radarOption.labelPointColor);\r\n      context.beginPath();\r\n      context.arc(posPointAxis.x, posPointAxis.y, radarOption.labelPointRadius * opts.pix, 0, 2 * Math.PI, false);\r\n      context.closePath();\r\n      context.fill();\r\n    }\r\n    if(radarOption.labelShow === true){\r\n      var pos = {\r\n        x: (radius + config.radarLabelTextMargin * opts.pix) * Math.cos(angle),\r\n        y: (radius + config.radarLabelTextMargin * opts.pix) * Math.sin(angle)\r\n      };\r\n      var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);\r\n      var startX = posRelativeCanvas.x;\r\n      var startY = posRelativeCanvas.y;\r\n      if (util.approximatelyEqual(pos.x, 0)) {\r\n        startX -= measureText(opts.categories[index] || '', config.fontSize, context) / 2;\r\n      } else if (pos.x < 0) {\r\n        startX -= measureText(opts.categories[index] || '', config.fontSize, context);\r\n      }\r\n      context.beginPath();\r\n      context.setFontSize(config.fontSize);\r\n      context.setFillStyle(radarOption.labelColor || opts.fontColor);\r\n      context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);\r\n      context.closePath();\r\n      context.stroke();\r\n    }\r\n  });\r\n\r\n}\r\n\r\nfunction drawPieText(series, opts, config, context, radius, center) {\r\n  var lineRadius = config.pieChartLinePadding;\r\n  var textObjectCollection = [];\r\n  var lastTextObject = null;\r\n  var seriesConvert = series.map(function(item,index) {\r\n    var text = item.formatter ? item.formatter(item,index,series,opts) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';\r\n    text = item.labelText ? item.labelText : text;\r\n    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);\r\n    if (item._rose_proportion_) {\r\n      arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._rose_proportion_ / 2);\r\n    }\r\n    var color = item.color;\r\n    var radius = item._radius_;\r\n    return {\r\n      arc: arc,\r\n      text: text,\r\n      color: color,\r\n      radius: radius,\r\n      textColor: item.textColor,\r\n      textSize: item.textSize,\r\n      labelShow: item.labelShow\r\n    };\r\n  });\r\n  for (let i = 0; i < seriesConvert.length; i++) {\r\n    let item = seriesConvert[i];\r\n    // line end\r\n    let orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);\r\n    let orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);\r\n    // line start\r\n    let orginX2 = Math.cos(item.arc) * item.radius;\r\n    let orginY2 = Math.sin(item.arc) * item.radius;\r\n    // text start\r\n    let orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;\r\n    let orginY3 = orginY1;\r\n    let textWidth = measureText(item.text, item.textSize * opts.pix || config.fontSize, context);\r\n    let startY = orginY3;\r\n    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {\r\n        x: orginX3\r\n      })) {\r\n      if (orginX3 > 0) {\r\n        startY = Math.min(orginY3, lastTextObject.start.y);\r\n      } else if (orginX1 < 0) {\r\n        startY = Math.max(orginY3, lastTextObject.start.y);\r\n      } else {\r\n        if (orginY3 > 0) {\r\n          startY = Math.max(orginY3, lastTextObject.start.y);\r\n        } else {\r\n          startY = Math.min(orginY3, lastTextObject.start.y);\r\n        }\r\n      }\r\n    }\r\n    if (orginX3 < 0) {\r\n      orginX3 -= textWidth;\r\n    }\r\n    let textObject = {\r\n      lineStart: {\r\n        x: orginX2,\r\n        y: orginY2\r\n      },\r\n      lineEnd: {\r\n        x: orginX1,\r\n        y: orginY1\r\n      },\r\n      start: {\r\n        x: orginX3,\r\n        y: startY\r\n      },\r\n      width: textWidth,\r\n      height: config.fontSize,\r\n      text: item.text,\r\n      color: item.color,\r\n      textColor: item.textColor,\r\n      textSize: item.textSize\r\n    };\r\n    lastTextObject = avoidCollision(textObject, lastTextObject);\r\n    textObjectCollection.push(lastTextObject);\r\n  }\r\n  for (let i = 0; i < textObjectCollection.length; i++) {\r\n    if(seriesConvert[i].labelShow === false){\r\n      continue;\r\n    }\r\n    let item = textObjectCollection[i];\r\n    let lineStartPoistion = convertCoordinateOrigin(item.lineStart.x, item.lineStart.y, center);\r\n    let lineEndPoistion = convertCoordinateOrigin(item.lineEnd.x, item.lineEnd.y, center);\r\n    let textPosition = convertCoordinateOrigin(item.start.x, item.start.y, center);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.setFontSize(item.textSize * opts.pix || config.fontSize);\r\n    context.beginPath();\r\n    context.setStrokeStyle(item.color);\r\n    context.setFillStyle(item.color);\r\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\r\n    let curveStartX = item.start.x < 0 ? textPosition.x + item.width : textPosition.x;\r\n    let textStartX = item.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;\r\n    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);\r\n    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.beginPath();\r\n    context.moveTo(textPosition.x + item.width, textPosition.y);\r\n    context.arc(curveStartX, textPosition.y, 2 * opts.pix, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    context.beginPath();\r\n    context.setFontSize(item.textSize * opts.pix || config.fontSize);\r\n    context.setFillStyle(item.textColor || opts.fontColor);\r\n    context.fillText(item.text, textStartX, textPosition.y + 3);\r\n    context.closePath();\r\n    context.stroke();\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nfunction drawToolTipSplitLine(offsetX, opts, config, context) {\r\n  var toolTipOption = opts.extra.tooltip || {};\r\n  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;\r\n  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;\r\n  var startY = opts.area[0];\r\n  var endY = opts.height - opts.area[2];\r\n  if (toolTipOption.gridType == 'dash') {\r\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\r\n  }\r\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.beginPath();\r\n  context.moveTo(offsetX, startY);\r\n  context.lineTo(offsetX, endY);\r\n  context.stroke();\r\n  context.setLineDash([]);\r\n  if (toolTipOption.xAxisLabel) {\r\n    let labelText = opts.categories[opts.tooltip.index];\r\n    context.setFontSize(config.fontSize);\r\n    let textWidth = measureText(labelText, config.fontSize, context);\r\n    let textX = offsetX - 0.5 * textWidth;\r\n    let textY = endY + 2 * opts.pix;\r\n    context.beginPath();\r\n    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\r\n    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.rect(textX - toolTipOption.boxPadding * opts.pix, textY, textWidth + 2 * toolTipOption.boxPadding * opts.pix, config.fontSize + 2 * toolTipOption.boxPadding * opts.pix);\r\n    context.closePath();\r\n    context.stroke();\r\n    context.fill();\r\n    context.beginPath();\r\n    context.setFontSize(config.fontSize);\r\n    context.setFillStyle(toolTipOption.labelFontColor || opts.fontColor);\r\n    context.fillText(String(labelText), textX, textY + toolTipOption.boxPadding * opts.pix + config.fontSize);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawMarkLine(opts, config, context) {\r\n  let markLineOption = assign({}, {\r\n    type: 'solid',\r\n    dashLength: 4,\r\n    data: []\r\n  }, opts.extra.markLine);\r\n  let startX = opts.area[3];\r\n  let endX = opts.width - opts.area[1];\r\n  let points = calMarkLineData(markLineOption.data, opts);\r\n  for (let i = 0; i < points.length; i++) {\r\n    let item = assign({}, {\r\n      lineColor: '#DE4A42',\r\n      showLabel: false,\r\n      labelFontSize: 13,\r\n      labelPadding: 6,\r\n      labelFontColor: '#666666',\r\n      labelBgColor: '#DFE8FF',\r\n      labelBgOpacity: 0.8,\r\n      labelAlign: 'left',\r\n      labelOffsetX: 0,\r\n      labelOffsetY: 0,\r\n    }, points[i]);\r\n    if (markLineOption.type == 'dash') {\r\n      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);\r\n    }\r\n    context.setStrokeStyle(item.lineColor);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.beginPath();\r\n    context.moveTo(startX, item.y);\r\n    context.lineTo(endX, item.y);\r\n    context.stroke();\r\n    context.setLineDash([]);\r\n    if (item.showLabel) {\r\n      let fontSize = item.labelFontSize * opts.pix;\r\n      let labelText = item.labelText ? item.labelText : item.value;\r\n      context.setFontSize(fontSize);\r\n      let textWidth = measureText(labelText, fontSize, context);\r\n      let bgWidth = textWidth + item.labelPadding * opts.pix * 2;\r\n      let bgStartX = item.labelAlign == 'left' ? opts.area[3] - bgWidth : opts.width - opts.area[1];\r\n      bgStartX += item.labelOffsetX;\r\n      let bgStartY = item.y - 0.5 * fontSize - item.labelPadding * opts.pix;\r\n      bgStartY += item.labelOffsetY;\r\n      let textX = bgStartX + item.labelPadding * opts.pix;\r\n      let textY = item.y;\r\n      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));\r\n      context.setStrokeStyle(item.labelBgColor);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.beginPath();\r\n      context.rect(bgStartX, bgStartY, bgWidth, fontSize + 2 * item.labelPadding * opts.pix);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.fill();\r\n      context.setFontSize(fontSize);\r\n      context.setTextAlign('left');\r\n      context.setFillStyle(item.labelFontColor);\r\n      context.fillText(String(labelText), textX, bgStartY + fontSize + item.labelPadding * opts.pix/2);\r\n      context.stroke();\r\n      context.setTextAlign('left');\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = assign({}, {\r\n    gridType: 'solid',\r\n    dashLength: 4\r\n  }, opts.extra.tooltip);\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  if (toolTipOption.gridType == 'dash') {\r\n    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);\r\n  }\r\n  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.beginPath();\r\n  context.moveTo(startX, opts.tooltip.offset.y);\r\n  context.lineTo(endX, opts.tooltip.offset.y);\r\n  context.stroke();\r\n  context.setLineDash([]);\r\n  if (toolTipOption.yAxisLabel) {\r\n    let boxPadding = toolTipOption.boxPadding * opts.pix;\r\n    let labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);\r\n    let widthArr = opts.chartData.yAxisData.yAxisWidth;\r\n    let tStartLeft = opts.area[3];\r\n    let tStartRight = opts.width - opts.area[1];\r\n    for (let i = 0; i < labelText.length; i++) {\r\n      context.setFontSize(toolTipOption.fontSize * opts.pix);\r\n      let textWidth = measureText(labelText[i], toolTipOption.fontSize * opts.pix, context);\r\n      let bgStartX, bgEndX, bgWidth;\r\n      if (widthArr[i].position == 'left') {\r\n        bgStartX = tStartLeft - (textWidth + boxPadding * 2) - 2 * opts.pix;\r\n        bgEndX = Math.max(bgStartX, bgStartX + textWidth + boxPadding * 2);\r\n      } else {\r\n        bgStartX = tStartRight + 2 * opts.pix;\r\n        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + boxPadding * 2);\r\n      }\r\n      bgWidth = bgEndX - bgStartX;\r\n      let textX = bgStartX + (bgWidth - textWidth) / 2;\r\n      let textY = opts.tooltip.offset.y;\r\n      context.beginPath();\r\n      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));\r\n      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.rect(bgStartX, textY - 0.5 * config.fontSize - boxPadding, bgWidth, config.fontSize + 2 * boxPadding);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(config.fontSize);\r\n      context.setFillStyle(toolTipOption.labelFontColor || opts.fontColor);\r\n      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);\r\n      context.closePath();\r\n      context.stroke();\r\n      if (widthArr[i].position == 'left') {\r\n        tStartLeft -= (widthArr[i].width + opts.yAxis.padding * opts.pix);\r\n      } else {\r\n        tStartRight += widthArr[i].width + opts.yAxis.padding * opts.pix;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\r\n  var toolTipOption = assign({}, {\r\n    activeBgColor: '#000000',\r\n    activeBgOpacity: 0.08,\r\n    activeWidth: eachSpacing\r\n  }, opts.extra.column);\r\n  toolTipOption.activeWidth = toolTipOption.activeWidth > eachSpacing ? eachSpacing : toolTipOption.activeWidth;\r\n  var startY = opts.area[0];\r\n  var endY = opts.height - opts.area[2];\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\r\n  context.rect(offsetX - toolTipOption.activeWidth / 2, startY, toolTipOption.activeWidth, endY - startY);\r\n  context.closePath();\r\n  context.fill();\r\n  context.setFillStyle(\"#FFFFFF\");\r\n}\r\n\r\nfunction drawBarToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {\r\n  var toolTipOption = assign({}, {\r\n    activeBgColor: '#000000',\r\n    activeBgOpacity: 0.08\r\n  }, opts.extra.bar);\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));\r\n  context.rect( startX ,offsetX - eachSpacing / 2 ,  endX - startX,eachSpacing);\r\n  context.closePath();\r\n  context.fill();\r\n  context.setFillStyle(\"#FFFFFF\");\r\n}\r\n\r\n\r\nfunction drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = assign({}, {\r\n    showBox: true,\r\n    showArrow: true,\r\n    showCategory: false,\r\n    bgColor: '#000000',\r\n    bgOpacity: 0.7,\r\n    borderColor: '#000000',\r\n    borderWidth: 0,\r\n    borderRadius: 0,\r\n    borderOpacity: 0.7,\r\n    boxPadding: 3,\r\n    fontColor: '#FFFFFF',\r\n    fontSize: 13,\r\n    lineHeight: 20,\r\n    legendShow: true,\r\n    legendShape: 'auto',\r\n    splitLine: true,\r\n  }, opts.extra.tooltip);\r\n  if(toolTipOption.showCategory==true && opts.categories){\r\n    textList.unshift({text:opts.categories[opts.tooltip.index],color:null})\r\n  }\r\n  var fontSize = toolTipOption.fontSize * opts.pix;\r\n  var lineHeight = toolTipOption.lineHeight * opts.pix;\r\n  var boxPadding = toolTipOption.boxPadding * opts.pix;\r\n  var legendWidth = fontSize;\r\n  var legendMarginRight = 5 * opts.pix;\r\n  if(toolTipOption.legendShow == false){\r\n    legendWidth = 0;\r\n    legendMarginRight = 0;\r\n  }\r\n  var arrowWidth = toolTipOption.showArrow ? 8 * opts.pix : 0;\r\n  var isOverRightBorder = false;\r\n  if (opts.type == 'line' || opts.type == 'mount' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {\r\n    if (toolTipOption.splitLine == true) {\r\n      drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);\r\n    }\r\n  }\r\n  offset = assign({\r\n    x: 0,\r\n    y: 0\r\n  }, offset);\r\n  offset.y -= 8 * opts.pix;\r\n  var textWidth = textList.map(function(item) {\r\n    return measureText(item.text, fontSize, context);\r\n  });\r\n  var toolTipWidth = legendWidth + legendMarginRight + 4 * boxPadding + Math.max.apply(null, textWidth);\r\n  var toolTipHeight = 2 * boxPadding + textList.length * lineHeight;\r\n  if (toolTipOption.showBox == false) {\r\n    return\r\n  }\r\n  // if beyond the right border\r\n  if (offset.x - Math.abs(opts._scrollDistance_ || 0) + arrowWidth + toolTipWidth > opts.width) {\r\n    isOverRightBorder = true;\r\n  }\r\n  if (toolTipHeight + offset.y > opts.height) {\r\n    offset.y = opts.height - toolTipHeight;\r\n  }\r\n  // draw background rect\r\n  context.beginPath();\r\n  context.setFillStyle(hexToRgb(toolTipOption.bgColor, toolTipOption.bgOpacity));\r\n  context.setLineWidth(toolTipOption.borderWidth * opts.pix);\r\n  context.setStrokeStyle(hexToRgb(toolTipOption.borderColor, toolTipOption.borderOpacity));\r\n  var radius = toolTipOption.borderRadius;\r\n  if (isOverRightBorder) {\r\n    // 增加左侧仍然超出的判断\r\n    if(toolTipWidth + arrowWidth > opts.width){\r\n      offset.x = opts.width + Math.abs(opts._scrollDistance_ || 0) + arrowWidth + (toolTipWidth - opts.width)\r\n    }\r\n    if(toolTipWidth > offset.x){\r\n      offset.x = opts.width + Math.abs(opts._scrollDistance_ || 0) + arrowWidth + (toolTipWidth - opts.width)\r\n    }\r\n    if (toolTipOption.showArrow) {\r\n      context.moveTo(offset.x, offset.y + 10 * opts.pix);\r\n      context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pix + 5 * opts.pix);\r\n    }\r\n    context.arc(offset.x - arrowWidth - radius, offset.y + toolTipHeight - radius, radius, 0, Math.PI / 2, false);\r\n    context.arc(offset.x - arrowWidth - Math.round(toolTipWidth) + radius, offset.y + toolTipHeight - radius, radius,\r\n      Math.PI / 2, Math.PI, false);\r\n    context.arc(offset.x - arrowWidth - Math.round(toolTipWidth) + radius, offset.y + radius, radius, -Math.PI, -Math.PI / 2, false);\r\n    context.arc(offset.x - arrowWidth - radius, offset.y + radius, radius, -Math.PI / 2, 0, false);\r\n    if (toolTipOption.showArrow) {\r\n      context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pix - 5 * opts.pix);\r\n      context.lineTo(offset.x, offset.y + 10 * opts.pix);\r\n    }\r\n  } else {\r\n    if (toolTipOption.showArrow) {\r\n      context.moveTo(offset.x, offset.y + 10 * opts.pix);\r\n      context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pix - 5 * opts.pix);\r\n    }\r\n    context.arc(offset.x + arrowWidth + radius, offset.y + radius, radius, -Math.PI, -Math.PI / 2, false);\r\n    context.arc(offset.x + arrowWidth + Math.round(toolTipWidth) - radius, offset.y + radius, radius, -Math.PI / 2, 0,\r\n      false);\r\n    context.arc(offset.x + arrowWidth + Math.round(toolTipWidth) - radius, offset.y + toolTipHeight - radius, radius, 0,\r\n      Math.PI / 2, false);\r\n    context.arc(offset.x + arrowWidth + radius, offset.y + toolTipHeight - radius, radius, Math.PI / 2, Math.PI, false);\r\n    if (toolTipOption.showArrow) {\r\n      context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pix + 5 * opts.pix);\r\n      context.lineTo(offset.x, offset.y + 10 * opts.pix);\r\n    }\r\n  }\r\n  context.closePath();\r\n  context.fill();\r\n  if (toolTipOption.borderWidth > 0) {\r\n    context.stroke();\r\n  }\r\n  // draw legend\r\n  if(toolTipOption.legendShow){\r\n    textList.forEach(function(item, index) {\r\n      if (item.color !== null) {\r\n        context.beginPath();\r\n        context.setFillStyle(item.color);\r\n        var startX = offset.x + arrowWidth + 2 * boxPadding;\r\n        var startY = offset.y + (lineHeight - fontSize) / 2 + lineHeight * index + boxPadding + 1;\r\n        if (isOverRightBorder) {\r\n          startX = offset.x - toolTipWidth - arrowWidth + 2 * boxPadding;\r\n        }\r\n        switch (item.legendShape) {\r\n          case 'line':\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 2 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 2 * opts.pix, legendWidth, 4 * opts.pix);\r\n            break;\r\n          case 'triangle':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            break;\r\n          case 'diamond':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth + 5 * opts.pix);\r\n            context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            break;\r\n          case 'circle':\r\n            context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth);\r\n            context.arc(startX + 7.5 * opts.pix, startY + 0.5 * legendWidth, 5 * opts.pix, 0, 2 * Math.PI);\r\n            break;\r\n          case 'rect':\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n            break;\r\n          case 'square':\r\n            context.moveTo(startX + 2 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX + 2 * opts.pix, startY + 0.5 * legendWidth - 5 * opts.pix, 10 * opts.pix, 10 * opts.pix);\r\n            break;\r\n          default:\r\n            context.moveTo(startX, startY + 0.5 * legendWidth - 5 * opts.pix);\r\n            context.fillRect(startX, startY + 0.5 * legendWidth - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    });\r\n  }\r\n  \r\n  // draw text list\r\n  textList.forEach(function(item, index) {\r\n    var startX = offset.x + arrowWidth + 2 * boxPadding + legendWidth + legendMarginRight;\r\n    if (isOverRightBorder) {\r\n      startX = offset.x - toolTipWidth - arrowWidth + 2 * boxPadding + legendWidth + legendMarginRight;\r\n    }\r\n    var startY = offset.y + lineHeight * index + (lineHeight - fontSize)/2 - 1 + boxPadding + fontSize;\r\n    context.beginPath();\r\n    context.setFontSize(fontSize);\r\n    context.setTextBaseline('normal');\r\n    context.setFillStyle(toolTipOption.fontColor);\r\n    context.fillText(item.text, startX, startY);\r\n    context.closePath();\r\n    context.stroke();\r\n  });\r\n}\r\n\r\nfunction drawColumnDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let columnOption = assign({}, {\r\n    type: 'group',\r\n    width: eachSpacing / 2,\r\n    meterBorder: 4,\r\n    meterFillColor: '#FFFFFF',\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n    labelPosition: 'outside'\r\n  }, opts.extra.column);\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n  }\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    \r\n    // 计算0轴坐标\r\n    let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n    let zeroHeight = spacingValid * (0 - minRange) / (maxRange - minRange);\r\n    let zeroPoints = opts.height - Math.round(zeroHeight) - opts.area[2];\r\n    eachSeries.zeroPoints = zeroPoints;\r\n    var data = eachSeries.data;\r\n    switch (columnOption.type) {\r\n      case 'group':\r\n        var points = getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, zeroPoints, process);\r\n        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(tooltipPoints);\r\n        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          //fix issues/I27B1N yyoinge & Joeshu\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - item.width / 2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color\r\n            var strokeColor = item.color || eachSeries.color\r\n            if (columnOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (columnOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n                grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex],columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const top = item.y > zeroPoints ? zeroPoints : item.y;\r\n              const width = item.width;\r\n              const height = Math.abs(zeroPoints - item.y);\r\n              if (columnOption.barBorderCircle) {\r\n                columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              if(item.y > zeroPoints){\r\n                columnOption.barBorderRadius = [0, 0,width / 2, width / 2];\r\n              }\r\n              let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n              context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n              context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n              context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, item.y);\r\n              context.lineTo(startX + item.width, item.y);\r\n              context.lineTo(startX + item.width, zeroPoints);\r\n              context.lineTo(startX, zeroPoints);\r\n              context.lineTo(startX, item.y);\r\n              context.setLineWidth(1)\r\n              context.setStrokeStyle(strokeColor);\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.closePath();\r\n            //context.stroke();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'stack':\r\n        // 绘制堆叠数据图\r\n        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(points);\r\n        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color;\r\n            var startX = item.x - item.width / 2 + 1;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            var height0 = opts.height - item.y0 - opts.area[2];\r\n            if (seriesIndex > 0) {\r\n              height -= height0;\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.moveTo(startX, item.y);\r\n            context.fillRect(startX, item.y, item.width, height);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'meter':\r\n        // 绘制温度计数据图\r\n        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n        calPoints.push(points);\r\n        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meterBorder);\r\n          for (let i = 0; i < points.length; i++) {\r\n            let item = points[i];\r\n            if (item !== null && i > leftNum && i < rightNum) {\r\n              //画背景颜色\r\n              context.beginPath();\r\n              if (seriesIndex == 0 && columnOption.meterBorder > 0) {\r\n                context.setStrokeStyle(eachSeries.color);\r\n                context.setLineWidth(columnOption.meterBorder * opts.pix);\r\n              }\r\n              if(seriesIndex == 0){\r\n                context.setFillStyle(columnOption.meterFillColor);\r\n              }else{\r\n                context.setFillStyle(item.color || eachSeries.color);\r\n              }\r\n              var startX = item.x - item.width / 2;\r\n              var height = opts.height - item.y - opts.area[2];\r\n              if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n                const left = startX;\r\n                const top = item.y;\r\n                const width = item.width;\r\n                const height = zeroPoints - item.y;\r\n                if (columnOption.barBorderCircle) {\r\n                  columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n                }\r\n                let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n                let minRadius = Math.min(width/2,height/2);\r\n                r0 = r0 > minRadius ? minRadius : r0;\r\n                r1 = r1 > minRadius ? minRadius : r1;\r\n                r2 = r2 > minRadius ? minRadius : r2;\r\n                r3 = r3 > minRadius ? minRadius : r3;\r\n                r0 = r0 < 0 ? 0 : r0;\r\n                r1 = r1 < 0 ? 0 : r1;\r\n                r2 = r2 < 0 ? 0 : r2;\r\n                r3 = r3 < 0 ? 0 : r3;\r\n                context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n                context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n                context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n                context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n                context.fill();\r\n              }else{\r\n                context.moveTo(startX, item.y);\r\n                context.lineTo(startX + item.width, item.y);\r\n                context.lineTo(startX + item.width, zeroPoints);\r\n                context.lineTo(startX, zeroPoints);\r\n                context.lineTo(startX, item.y);\r\n                context.fill();\r\n              }\r\n              if (seriesIndex == 0 && columnOption.meterBorder > 0) {\r\n                context.closePath();\r\n                context.stroke();\r\n              }\r\n            }\r\n          }\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      switch (columnOption.type) {\r\n        case 'group':\r\n          var points = getColumnDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'stack':\r\n          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'meter':\r\n          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n          drawColumePointText(points, eachSeries, config, context, opts);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawMountDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let mountOption = assign({}, {\r\n    type: 'mount',\r\n    widthRatio: 1,\r\n    borderWidth: 1,\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.mount);\r\n  mountOption.widthRatio = mountOption.widthRatio <= 0 ? 0 : mountOption.widthRatio;\r\n  mountOption.widthRatio = mountOption.widthRatio >= 2 ? 2 : mountOption.widthRatio;\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n  }\r\n  mountOption.customColor = fillCustomColor(mountOption.linearType, mountOption.customColor, series, config);\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[0]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    \r\n    // 计算0轴坐标\r\n    let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n    let zeroHeight = spacingValid * (0 - minRange) / (maxRange - minRange);\r\n    let zeroPoints = opts.height - Math.round(zeroHeight) - opts.area[2];\r\n    \r\n    var points = getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints, process);\r\n    switch (mountOption.type) {\r\n      case 'bar':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((mountOption.barBorderRadius && mountOption.barBorderRadius.length === 4) || mountOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const top = item.y > zeroPoints ? zeroPoints : item.y;\r\n              const width = item.width;\r\n              const height = Math.abs(zeroPoints - item.y);\r\n              if (mountOption.barBorderCircle) {\r\n                mountOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              if(item.y > zeroPoints){\r\n                mountOption.barBorderRadius = [0, 0,width / 2, width / 2];\r\n              }\r\n              let [r0, r1, r2, r3] = mountOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n              context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n              context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n              context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, item.y);\r\n              context.lineTo(startX + item.width, item.y);\r\n              context.lineTo(startX + item.width, zeroPoints);\r\n              context.lineTo(startX, zeroPoints);\r\n              context.lineTo(startX, item.y);\r\n            }\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.closePath();\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'triangle':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.lineTo(item.x, item.y);\r\n            context.lineTo(startX + item.width, zeroPoints);\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'mount':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.bezierCurveTo(item.x - item.width/4, zeroPoints, item.x - item.width/4, item.y, item.x, item.y);\r\n            context.bezierCurveTo(item.x + item.width/4, item.y, item.x + item.width/4, zeroPoints, startX + item.width, zeroPoints);\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'sharp':\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            var startX = item.x - eachSpacing*mountOption.widthRatio/2;\r\n            var height = opts.height - item.y - opts.area[2];\r\n            context.beginPath();\r\n            var fillColor = item.color || series[i].color\r\n            var strokeColor = item.color || series[i].color\r\n            if (mountOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, startX, zeroPoints);\r\n              //透明渐变\r\n              if (mountOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(mountOption.customColor[series[i].linearIndex], mountOption.linearOpacity));\r\n                grd.addColorStop(mountOption.colorStop, hexToRgb(mountOption.customColor[series[i].linearIndex],mountOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            context.moveTo(startX, zeroPoints);\r\n            context.quadraticCurveTo(item.x - 0, zeroPoints - height/4, item.x, item.y);\r\n            context.quadraticCurveTo(item.x + 0, zeroPoints - height/4, startX + item.width, zeroPoints)\r\n            context.setStrokeStyle(strokeColor);\r\n            context.setFillStyle(fillColor);\r\n            if(mountOption.borderWidth > 0){\r\n              context.setLineWidth(mountOption.borderWidth * opts.pix);\r\n              context.stroke();\r\n            }\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n    }\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[0]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var points = getMountDataPoints(series, minRange, maxRange, xAxisPoints, eachSpacing, opts, mountOption, zeroPoints, process);\r\n    drawMountPointText(points, series, config, context, opts, zeroPoints);\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: points,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawBarDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let yAxisPoints = [];\r\n  let eachSpacing = (opts.height - opts.area[0] - opts.area[2])/opts.categories.length;\r\n  for (let i = 0; i < opts.categories.length; i++) {\r\n    yAxisPoints.push(opts.area[0] + eachSpacing / 2 + eachSpacing * i);\r\n  }\r\n  let columnOption = assign({}, {\r\n    type: 'group',\r\n    width: eachSpacing / 2,\r\n    meterBorder: 4,\r\n    meterFillColor: '#FFFFFF',\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.bar);\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = yAxisPoints.length + 2;\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawBarToolTipSplitArea(opts.tooltip.offset.y, opts, config, context, eachSpacing);\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.xAxisData.ranges);\r\n    maxRange = ranges.pop();\r\n    minRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    switch (columnOption.type) {\r\n      case 'group':\r\n        var points = getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, process);\r\n        var tooltipPoints = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(tooltipPoints);\r\n        points = fixBarData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          //fix issues/I27B1N yyoinge & Joeshu\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            //var startX = item.x - item.width / 2;\r\n            var startX = opts.area[3];\r\n            var startY = item.y - item.width / 2;\r\n            var height = item.height;\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color\r\n            var strokeColor = item.color || eachSeries.color\r\n            if (columnOption.linearType !== 'none') {\r\n              var grd = context.createLinearGradient(startX, item.y, item.x, item.y);\r\n              //透明渐变\r\n              if (columnOption.linearType == 'opacity') {\r\n                grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              } else {\r\n                grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n                grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex],columnOption.linearOpacity));\r\n                grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n              }\r\n              fillColor = grd\r\n            }\r\n            // 圆角边框\r\n            if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle === true) {\r\n              const left = startX;\r\n              const width = item.width;\r\n              const top = item.y - item.width / 2;\r\n              const height = item.height;\r\n              if (columnOption.barBorderCircle) {\r\n                columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n              }\r\n              let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n              let minRadius = Math.min(width/2,height/2);\r\n              r0 = r0 > minRadius ? minRadius : r0;\r\n              r1 = r1 > minRadius ? minRadius : r1;\r\n              r2 = r2 > minRadius ? minRadius : r2;\r\n              r3 = r3 > minRadius ? minRadius : r3;\r\n              r0 = r0 < 0 ? 0 : r0;\r\n              r1 = r1 < 0 ? 0 : r1;\r\n              r2 = r2 < 0 ? 0 : r2;\r\n              r3 = r3 < 0 ? 0 : r3;\r\n              \r\n              context.arc(left + r3, top + r3, r3, -Math.PI, -Math.PI / 2);\r\n              context.arc(item.x - r0, top + r0, r0, -Math.PI / 2, 0);\r\n              context.arc(item.x - r1, top + width - r1, r1, 0, Math.PI / 2);\r\n              context.arc(left + r2, top + width - r2, r2, Math.PI / 2, Math.PI);\r\n            } else {\r\n              context.moveTo(startX, startY);\r\n              context.lineTo(item.x, startY);\r\n              context.lineTo(item.x, startY + item.width);\r\n              context.lineTo(startX, startY + item.width);\r\n              context.lineTo(startX, startY);\r\n              context.setLineWidth(1)\r\n              context.setStrokeStyle(strokeColor);\r\n            }\r\n            context.setFillStyle(fillColor);\r\n            context.closePath();\r\n            //context.stroke();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n      case 'stack':\r\n        // 绘制堆叠数据图\r\n        var points = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n        calPoints.push(points);\r\n        points = fixBarStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);\r\n        for (let i = 0; i < points.length; i++) {\r\n          let item = points[i];\r\n          if (item !== null && i > leftNum && i < rightNum) {\r\n            context.beginPath();\r\n            var fillColor = item.color || eachSeries.color;\r\n            var startX = item.x0;\r\n            context.setFillStyle(fillColor);\r\n            context.moveTo(startX, item.y - item.width/2);\r\n            context.fillRect(startX, item.y - item.width/2, item.height , item.width);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        };\r\n        break;\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.xAxisData.ranges);\r\n      maxRange = ranges.pop();\r\n      minRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      switch (columnOption.type) {\r\n        case 'group':\r\n          var points = getBarDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, process);\r\n          points = fixBarData(points, eachSpacing, series.length, seriesIndex, config, opts);\r\n          drawBarPointText(points, eachSeries, config, context, opts);\r\n          break;\r\n        case 'stack':\r\n          var points = getBarStackDataPoints(data, minRange, maxRange, yAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);\r\n          drawBarPointText(points, eachSeries, config, context, opts);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  return {\r\n    yAxisPoints: yAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawCandleDataPoints(series, seriesMA, opts, config, context) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var candleOption = assign({}, {\r\n    color: {},\r\n    average: {}\r\n  }, opts.extra.candle);\r\n  candleOption.color = assign({}, {\r\n    upLine: '#f04864',\r\n    upFill: '#f04864',\r\n    downLine: '#2fc25b',\r\n    downFill: '#2fc25b'\r\n  }, candleOption.color);\r\n  candleOption.average = assign({}, {\r\n    show: false,\r\n    name: [],\r\n    day: [],\r\n    color: config.color\r\n  }, candleOption.average);\r\n  opts.extra.candle = candleOption;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  //画均线\r\n  if (candleOption.average.show || seriesMA) { //Merge pull request !12 from 邱贵翔\r\n    seriesMA.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      var splitPointList = splitPoints(points,eachSeries);\r\n      for (let i = 0; i < splitPointList.length; i++) {\r\n        let points = splitPointList[i];\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(1);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x,\r\n                item.y);\r\n            }\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    });\r\n  }\r\n  //画K线\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    var splitPointList = splitPoints(points,eachSeries);\r\n    for (let i = 0; i < splitPointList[0].length; i++) {\r\n      if (i > leftNum && i < rightNum) {\r\n        let item = splitPointList[0][i];\r\n        context.beginPath();\r\n        //如果上涨\r\n        if (data[i][1] - data[i][0] > 0) {\r\n          context.setStrokeStyle(candleOption.color.upLine);\r\n          context.setFillStyle(candleOption.color.upFill);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\r\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[2].x, item[2].y); //底点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\r\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n        } else {\r\n          context.setStrokeStyle(candleOption.color.downLine);\r\n          context.setFillStyle(candleOption.color.downFill);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点\r\n          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[2].x, item[2].y); //底点\r\n          context.lineTo(item[1].x, item[1].y); //收盘中间点\r\n          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点\r\n          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点\r\n          context.lineTo(item[0].x, item[0].y); //开盘中间点\r\n          context.moveTo(item[3].x, item[3].y); //顶点\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n        context.stroke();\r\n      }\r\n    }\r\n  });\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawAreaDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var areaOption = assign({}, {\r\n    type: 'straight',\r\n    opacity: 0.2,\r\n    addLine: false,\r\n    width: 2,\r\n    gradient: false,\r\n    activeType: 'none'\r\n  }, opts.extra.area);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let endY = opts.height - opts.area[2];\r\n  let calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    let data = eachSeries.data;\r\n    let points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    let splitPointList = splitPoints(points,eachSeries);\r\n    for (let i = 0; i < splitPointList.length; i++) {\r\n      let points = splitPointList[i];\r\n      // 绘制区域数\r\n      context.beginPath();\r\n      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n      if (areaOption.gradient) {\r\n        let gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\r\n        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\r\n        gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n        context.setFillStyle(gradient);\r\n      } else {\r\n        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n      }\r\n      context.setLineWidth(areaOption.width * opts.pix);\r\n      if (points.length > 1) {\r\n        let firstPoint = points[0];\r\n        let lastPoint = points[points.length - 1];\r\n        context.moveTo(firstPoint.x, firstPoint.y);\r\n        let startPoint = 0;\r\n        if (areaOption.type === 'curve') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              let ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n            }\r\n          };\r\n        } \r\n        if (areaOption.type === 'straight') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (areaOption.type === 'step') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, points[j - 1].y);\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        context.lineTo(lastPoint.x, endY);\r\n        context.lineTo(firstPoint.x, endY);\r\n        context.lineTo(firstPoint.x, firstPoint.y);\r\n      } else {\r\n        let item = points[0];\r\n        context.moveTo(item.x - eachSpacing / 2, item.y);\r\n        // context.lineTo(item.x + eachSpacing / 2, item.y);\r\n        // context.lineTo(item.x + eachSpacing / 2, endY);\r\n        // context.lineTo(item.x - eachSpacing / 2, endY);\r\n        // context.moveTo(item.x - eachSpacing / 2, item.y);\r\n      }\r\n      context.closePath();\r\n      context.fill();\r\n      //画连线\r\n      if (areaOption.addLine) {\r\n        if (eachSeries.lineType == 'dash') {\r\n          let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n          dashLength *= opts.pix;\r\n          context.setLineDash([dashLength, dashLength]);\r\n        }\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(areaOption.width * opts.pix);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          if (areaOption.type === 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                let ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          if (areaOption.type === 'straight') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          if (areaOption.type === 'step') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, points[j - 1].y);\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.stroke();\r\n        context.setLineDash([]);\r\n      }\r\n    }\r\n    //画点\r\n    if (opts.dataPointShape !== false) {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n    drawActivePoint(points, eachSeries.color, eachSeries.pointShape, context, opts, areaOption,seriesIndex);\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawScatterDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var scatterOption = assign({}, {\r\n    type: 'circle'\r\n  }, opts.extra.scatter);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.setFillStyle(eachSeries.color);\r\n    context.setLineWidth(1 * opts.pix);\r\n    var shape = eachSeries.pointShape;\r\n    if (shape === 'diamond') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x, item.y - 4.5);\r\n          context.lineTo(item.x - 4.5, item.y);\r\n          context.lineTo(item.x, item.y + 4.5);\r\n          context.lineTo(item.x + 4.5, item.y);\r\n          context.lineTo(item.x, item.y - 4.5);\r\n        }\r\n      });\r\n    } else if (shape === 'circle') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x + 2.5 * opts.pix, item.y);\r\n          context.arc(item.x, item.y, 3 * opts.pix, 0, 2 * Math.PI, false);\r\n        }\r\n      });\r\n    } else if (shape === 'square') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x - 3.5, item.y - 3.5);\r\n          context.rect(item.x - 3.5, item.y - 3.5, 7, 7);\r\n        }\r\n      });\r\n    } else if (shape === 'triangle') {\r\n      points.forEach(function(item, index) {\r\n        if (item !== null) {\r\n          context.moveTo(item.x, item.y - 4.5);\r\n          context.lineTo(item.x - 4.5, item.y + 4.5);\r\n          context.lineTo(item.x + 4.5, item.y + 4.5);\r\n          context.lineTo(item.x, item.y - 4.5);\r\n        }\r\n      });\r\n    } else if (shape === 'triangle') {\r\n      return;\r\n    }\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawBubbleDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var bubbleOption = assign({}, {\r\n    opacity: 1,\r\n    border:2\r\n  }, opts.extra.bubble);\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.setLineWidth(bubbleOption.border * opts.pix);\r\n    context.setFillStyle(hexToRgb(eachSeries.color, bubbleOption.opacity));\r\n    points.forEach(function(item, index) {\r\n      context.moveTo(item.x + item.r, item.y);\r\n      context.arc(item.x, item.y, item.r * opts.pix, 0, 2 * Math.PI, false);\r\n    });\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n    \r\n    if (opts.dataLabel !== false && process === 1) {\r\n      points.forEach(function(item, index) {\r\n        context.beginPath();\r\n        var fontSize = eachSeries.textSize * opts.pix || config.fontSize;\r\n        context.setFontSize(fontSize);\r\n        context.setFillStyle(eachSeries.textColor || \"#FFFFFF\");\r\n        context.setTextAlign('center');\r\n        context.fillText(String(item.t), item.x, item.y + fontSize/2);\r\n        context.closePath();\r\n        context.stroke();\r\n        context.setTextAlign('left');\r\n      });\r\n    }\r\n  });\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawLineDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var lineOption = assign({}, {\r\n    type: 'straight',\r\n    width: 2,\r\n    activeType: 'none',\r\n    linearType: 'none',\r\n    onShadow: false,\r\n    animation: 'vertical',\r\n  }, opts.extra.line);\r\n  lineOption.width *= opts.pix;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var calPoints = [];\r\n  context.save();\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    // 这段很神奇的代码用于解决ios16的setStrokeStyle失效的bug\r\n    context.beginPath();\r\n    context.setStrokeStyle(eachSeries.color);\r\n    context.moveTo(-10000, -10000);\r\n    context.lineTo(-10001, -10001);\r\n    context.stroke();\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getLineDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, lineOption, process);\r\n    calPoints.push(points);\r\n    var splitPointList = splitPoints(points,eachSeries);\r\n    if (eachSeries.lineType == 'dash') {\r\n      let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n      dashLength *= opts.pix;\r\n      context.setLineDash([dashLength, dashLength]);\r\n    }\r\n    context.beginPath();\r\n    var strokeColor = eachSeries.color;\r\n    if (lineOption.linearType !== 'none' && eachSeries.linearColor && eachSeries.linearColor.length > 0) {\r\n      var grd = context.createLinearGradient(opts.chartData.xAxisData.startX, opts.height/2, opts.chartData.xAxisData.endX, opts.height/2);\r\n      for (var i = 0; i < eachSeries.linearColor.length; i++) {\r\n        grd.addColorStop(eachSeries.linearColor[i][0], hexToRgb(eachSeries.linearColor[i][1], 1));\r\n      }\r\n      strokeColor = grd\r\n    }\r\n    context.setStrokeStyle(strokeColor);\r\n    if (lineOption.onShadow == true && eachSeries.setShadow && eachSeries.setShadow.length > 0) {\r\n      context.setShadow(eachSeries.setShadow[0], eachSeries.setShadow[1], eachSeries.setShadow[2], eachSeries.setShadow[3]);\r\n    }else{\r\n      context.setShadow(0, 0, 0, 'rgba(0,0,0,0)');\r\n    }\r\n    context.setLineWidth(lineOption.width);\r\n    splitPointList.forEach(function(points, index) {\r\n      if (points.length === 1) {\r\n        context.moveTo(points[0].x, points[0].y);\r\n        // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n      } else {\r\n        context.moveTo(points[0].x, points[0].y);\r\n        let startPoint = 0;\r\n        if (lineOption.type === 'curve') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (lineOption.type === 'straight') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        if (lineOption.type === 'step') {\r\n          for (let j = 0; j < points.length; j++) {\r\n            let item = points[j];\r\n            if (startPoint == 0 && item.x > leftSpace) {\r\n              context.moveTo(item.x, item.y);\r\n              startPoint = 1;\r\n            }\r\n            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n              context.lineTo(item.x, points[j - 1].y);\r\n              context.lineTo(item.x, item.y);\r\n            }\r\n          };\r\n        }\r\n        context.moveTo(points[0].x, points[0].y);\r\n      }\r\n    });\r\n    context.stroke();\r\n    context.setLineDash([]);\r\n    if (opts.dataPointShape !== false) {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n    drawActivePoint(points, eachSeries.color, eachSeries.pointShape, context, opts, lineOption);\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      drawPointText(points, eachSeries, config, context, opts);\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing\r\n  };\r\n}\r\n\r\nfunction drawMixDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  let columnOption = assign({}, {\r\n    width: eachSpacing / 2,\r\n    barBorderCircle: false,\r\n    barBorderRadius: [],\r\n    seriesGap: 2,\r\n    linearType: 'none',\r\n    linearOpacity: 1,\r\n    customColor: [],\r\n    colorStop: 0,\r\n  }, opts.extra.mix.column);\r\n  let areaOption = assign({}, {\r\n    opacity: 0.2,\r\n    gradient: false\r\n  }, opts.extra.mix.area);\r\n  let lineOption = assign({}, {\r\n    width: 2\r\n  }, opts.extra.mix.line);\r\n  let endY = opts.height - opts.area[2];\r\n  let calPoints = [];\r\n  var columnIndex = 0;\r\n  var columnLength = 0;\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (eachSeries.type == 'column') {\r\n      columnLength += 1;\r\n    }\r\n  });\r\n  context.save();\r\n  let leftNum = -2;\r\n  let rightNum = xAxisPoints.length + 2;\r\n  let leftSpace = 0;\r\n  let rightSpace = opts.width + eachSpacing;\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;\r\n    rightNum = leftNum + opts.xAxis.itemCount + 4;\r\n    leftSpace = -opts._scrollDistance_ - eachSpacing * 2 + opts.area[3];\r\n    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;\r\n  }\r\n  columnOption.customColor = fillCustomColor(columnOption.linearType, columnOption.customColor, series, config);\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    let ranges, minRange, maxRange;\r\n    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n    minRange = ranges.pop();\r\n    maxRange = ranges.shift();\r\n    var data = eachSeries.data;\r\n    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n    calPoints.push(points);\r\n    // 绘制柱状数据图\r\n    if (eachSeries.type == 'column') {\r\n      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\r\n      for (let i = 0; i < points.length; i++) {\r\n        let item = points[i];\r\n        if (item !== null && i > leftNum && i < rightNum) {\r\n          var startX = item.x - item.width / 2;\r\n          var height = opts.height - item.y - opts.area[2];\r\n          context.beginPath();\r\n          var fillColor = item.color || eachSeries.color\r\n          var strokeColor = item.color || eachSeries.color\r\n          if (columnOption.linearType !== 'none') {\r\n            var grd = context.createLinearGradient(startX, item.y, startX, opts.height - opts.area[2]);\r\n            //透明渐变\r\n            if (columnOption.linearType == 'opacity') {\r\n              grd.addColorStop(0, hexToRgb(fillColor, columnOption.linearOpacity));\r\n              grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n            } else {\r\n              grd.addColorStop(0, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n              grd.addColorStop(columnOption.colorStop, hexToRgb(columnOption.customColor[eachSeries.linearIndex], columnOption.linearOpacity));\r\n              grd.addColorStop(1, hexToRgb(fillColor, 1));\r\n            }\r\n            fillColor = grd\r\n          }\r\n          // 圆角边框\r\n          if ((columnOption.barBorderRadius && columnOption.barBorderRadius.length === 4) || columnOption.barBorderCircle) {\r\n            const left = startX;\r\n            const top = item.y;\r\n            const width = item.width;\r\n            const height = opts.height - opts.area[2] - item.y;\r\n            if (columnOption.barBorderCircle) {\r\n              columnOption.barBorderRadius = [width / 2, width / 2, 0, 0];\r\n            }\r\n            let [r0, r1, r2, r3] = columnOption.barBorderRadius;\r\n            let minRadius = Math.min(width/2,height/2);\r\n            r0 = r0 > minRadius ? minRadius : r0;\r\n            r1 = r1 > minRadius ? minRadius : r1;\r\n            r2 = r2 > minRadius ? minRadius : r2;\r\n            r3 = r3 > minRadius ? minRadius : r3;\r\n            r0 = r0 < 0 ? 0 : r0;\r\n            r1 = r1 < 0 ? 0 : r1;\r\n            r2 = r2 < 0 ? 0 : r2;\r\n            r3 = r3 < 0 ? 0 : r3;\r\n            context.arc(left + r0, top + r0, r0, -Math.PI, -Math.PI / 2);\r\n            context.arc(left + width - r1, top + r1, r1, -Math.PI / 2, 0);\r\n            context.arc(left + width - r2, top + height - r2, r2, 0, Math.PI / 2);\r\n            context.arc(left + r3, top + height - r3, r3, Math.PI / 2, Math.PI);\r\n          } else {\r\n            context.moveTo(startX, item.y);\r\n            context.lineTo(startX + item.width, item.y);\r\n            context.lineTo(startX + item.width, opts.height - opts.area[2]);\r\n            context.lineTo(startX, opts.height - opts.area[2]);\r\n            context.lineTo(startX, item.y);\r\n            context.setLineWidth(1)\r\n            context.setStrokeStyle(strokeColor);\r\n          }\r\n          context.setFillStyle(fillColor);\r\n          context.closePath();\r\n          context.fill();\r\n        }\r\n      }\r\n      columnIndex += 1;\r\n    }\r\n    //绘制区域图数据\r\n    if (eachSeries.type == 'area') {\r\n      let splitPointList = splitPoints(points,eachSeries);\r\n      for (let i = 0; i < splitPointList.length; i++) {\r\n        let points = splitPointList[i];\r\n        // 绘制区域数据\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n        if (areaOption.gradient) {\r\n          let gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);\r\n          gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));\r\n          gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n          context.setFillStyle(gradient);\r\n        } else {\r\n          context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));\r\n        }\r\n        context.setLineWidth(2 * opts.pix);\r\n        if (points.length > 1) {\r\n          var firstPoint = points[0];\r\n          let lastPoint = points[points.length - 1];\r\n          context.moveTo(firstPoint.x, firstPoint.y);\r\n          let startPoint = 0;\r\n          if (eachSeries.style === 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);\r\n              }\r\n            };\r\n          } else {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            };\r\n          }\r\n          context.lineTo(lastPoint.x, endY);\r\n          context.lineTo(firstPoint.x, endY);\r\n          context.lineTo(firstPoint.x, firstPoint.y);\r\n        } else {\r\n          let item = points[0];\r\n          context.moveTo(item.x - eachSpacing / 2, item.y);\r\n          // context.lineTo(item.x + eachSpacing / 2, item.y);\r\n          // context.lineTo(item.x + eachSpacing / 2, endY);\r\n          // context.lineTo(item.x - eachSpacing / 2, endY);\r\n          // context.moveTo(item.x - eachSpacing / 2, item.y);\r\n        }\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    // 绘制折线数据图\r\n    if (eachSeries.type == 'line') {\r\n      var splitPointList = splitPoints(points,eachSeries);\r\n      splitPointList.forEach(function(points, index) {\r\n        if (eachSeries.lineType == 'dash') {\r\n          let dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;\r\n          dashLength *= opts.pix;\r\n          context.setLineDash([dashLength, dashLength]);\r\n        }\r\n        context.beginPath();\r\n        context.setStrokeStyle(eachSeries.color);\r\n        context.setLineWidth(lineOption.width * opts.pix);\r\n        if (points.length === 1) {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          // context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);\r\n        } else {\r\n          context.moveTo(points[0].x, points[0].y);\r\n          let startPoint = 0;\r\n          if (eachSeries.style == 'curve') {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                var ctrlPoint = createCurveControlPoints(points, j - 1);\r\n                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y,\r\n                  item.x, item.y);\r\n              }\r\n            }\r\n          } else {\r\n            for (let j = 0; j < points.length; j++) {\r\n              let item = points[j];\r\n              if (startPoint == 0 && item.x > leftSpace) {\r\n                context.moveTo(item.x, item.y);\r\n                startPoint = 1;\r\n              }\r\n              if (j > 0 && item.x > leftSpace && item.x < rightSpace) {\r\n                context.lineTo(item.x, item.y);\r\n              }\r\n            }\r\n          }\r\n          context.moveTo(points[0].x, points[0].y);\r\n        }\r\n        context.stroke();\r\n        context.setLineDash([]);\r\n      });\r\n    }\r\n    // 绘制点数据图\r\n    if (eachSeries.type == 'point') {\r\n      eachSeries.addPoint = true;\r\n    }\r\n    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n  });\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    var columnIndex = 0;\r\n    series.forEach(function(eachSeries, seriesIndex) {\r\n      let ranges, minRange, maxRange;\r\n      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);\r\n      minRange = ranges.pop();\r\n      maxRange = ranges.shift();\r\n      var data = eachSeries.data;\r\n      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);\r\n      if (eachSeries.type !== 'column') {\r\n        drawPointText(points, eachSeries, config, context, opts);\r\n      } else {\r\n        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);\r\n        drawPointText(points, eachSeries, config, context, opts);\r\n        columnIndex += 1;\r\n      }\r\n    });\r\n  }\r\n  context.restore();\r\n  return {\r\n    xAxisPoints: xAxisPoints,\r\n    calPoints: calPoints,\r\n    eachSpacing: eachSpacing,\r\n  }\r\n}\r\n\r\n\r\nfunction drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {\r\n  var toolTipOption = opts.extra.tooltip || {};\r\n  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'mount' || opts.type == 'candle' || opts.type == 'mix')) {\r\n    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints)\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {\r\n    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);\r\n  }\r\n  context.restore();\r\n\r\n}\r\n\r\nfunction drawXAxis(categories, opts, config, context) {\r\n\r\n  let xAxisData = opts.chartData.xAxisData,\r\n    xAxisPoints = xAxisData.xAxisPoints,\r\n    startX = xAxisData.startX,\r\n    endX = xAxisData.endX,\r\n    eachSpacing = xAxisData.eachSpacing;\r\n  var boundaryGap = 'center';\r\n  if (opts.type == 'bar' || opts.type == 'line' || opts.type == 'area'|| opts.type == 'scatter' || opts.type == 'bubble') {\r\n    boundaryGap = opts.xAxis.boundaryGap;\r\n  }\r\n  var startY = opts.height - opts.area[2];\r\n  var endY = opts.area[0];\r\n\r\n  //绘制滚动条\r\n  if (opts.enableScroll && opts.xAxis.scrollShow) {\r\n    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;\r\n    var scrollScreenWidth = endX - startX;\r\n    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n    if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1){\r\n      if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n      scrollTotalWidth += (opts.extra.mount.widthRatio - 1)*eachSpacing;\r\n    }\r\n    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;\r\n    var scrollLeft = 0;\r\n    if (opts._scrollDistance_) {\r\n      scrollLeft = -opts._scrollDistance_ * (scrollScreenWidth) / scrollTotalWidth;\r\n    }\r\n    context.beginPath();\r\n    context.setLineCap('round');\r\n    context.setLineWidth(6 * opts.pix);\r\n    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || \"#EFEBEF\");\r\n    context.moveTo(startX, scrollY);\r\n    context.lineTo(endX, scrollY);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.beginPath();\r\n    context.setLineCap('round');\r\n    context.setLineWidth(6 * opts.pix);\r\n    context.setStrokeStyle(opts.xAxis.scrollColor || \"#A6A6A6\");\r\n    context.moveTo(startX + scrollLeft, scrollY);\r\n    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);\r\n    context.stroke();\r\n    context.closePath();\r\n    context.setLineCap('butt');\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  //绘制X轴刻度线\r\n  if (opts.xAxis.calibration === true) {\r\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\r\n    context.setLineCap('butt');\r\n    context.setLineWidth(1 * opts.pix);\r\n    xAxisPoints.forEach(function(item, index) {\r\n      if (index > 0) {\r\n        context.beginPath();\r\n        context.moveTo(item - eachSpacing / 2, startY);\r\n        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pix);\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    });\r\n  }\r\n  //绘制X轴网格\r\n  if (opts.xAxis.disableGrid !== true) {\r\n    context.setStrokeStyle(opts.xAxis.gridColor || \"#cccccc\");\r\n    context.setLineCap('butt');\r\n    context.setLineWidth(1 * opts.pix);\r\n    if (opts.xAxis.gridType == 'dash') {\r\n      context.setLineDash([opts.xAxis.dashLength * opts.pix, opts.xAxis.dashLength * opts.pix]);\r\n    }\r\n    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;\r\n    xAxisPoints.forEach(function(item, index) {\r\n      if (index % opts.xAxis.gridEval == 0) {\r\n        context.beginPath();\r\n        context.moveTo(item, startY);\r\n        context.lineTo(item, endY);\r\n        context.stroke();\r\n      }\r\n    });\r\n    context.setLineDash([]);\r\n  }\r\n  //绘制X轴文案\r\n  if (opts.xAxis.disabled !== true) {\r\n    // 对X轴列表做抽稀处理\r\n    //默认全部显示X轴标签\r\n    let maxXAxisListLength = categories.length;\r\n    //如果设置了X轴单屏数量\r\n    if (opts.xAxis.labelCount) {\r\n      //如果设置X轴密度\r\n      if (opts.xAxis.itemCount) {\r\n        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);\r\n      } else {\r\n        maxXAxisListLength = opts.xAxis.labelCount;\r\n      }\r\n      maxXAxisListLength -= 1;\r\n    }\r\n\r\n    let ratio = Math.ceil(categories.length / maxXAxisListLength);\r\n\r\n    let newCategories = [];\r\n    let cgLength = categories.length;\r\n    for (let i = 0; i < cgLength; i++) {\r\n      if (i % ratio !== 0) {\r\n        newCategories.push(\"\");\r\n      } else {\r\n        newCategories.push(categories[i]);\r\n      }\r\n    }\r\n    newCategories[cgLength - 1] = categories[cgLength - 1];\r\n    var xAxisFontSize = opts.xAxis.fontSize * opts.pix || config.fontSize;\r\n    if (config._xAxisTextAngle_ === 0) {\r\n      newCategories.forEach(function(item, index) {\r\n        var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item,index,opts) : item;\r\n        var offset = -measureText(String(xitem), xAxisFontSize, context) / 2;\r\n        if (boundaryGap == 'center') {\r\n          offset += eachSpacing / 2;\r\n        }\r\n        var scrollHeight = 0;\r\n        if (opts.xAxis.scrollShow) {\r\n          scrollHeight = 6 * opts.pix;\r\n        }\r\n        // 如果在主视图区域内\r\n        var _scrollDistance_ = opts._scrollDistance_ || 0;\r\n        var truePoints = boundaryGap == 'center' ? xAxisPoints[index] + eachSpacing / 2 : xAxisPoints[index];\r\n        if((truePoints - Math.abs(_scrollDistance_)) >= (opts.area[3] - 1) && (truePoints - Math.abs(_scrollDistance_)) <= (opts.width - opts.area[1] + 1)){\r\n          context.beginPath();\r\n          context.setFontSize(xAxisFontSize);\r\n          context.setFillStyle(opts.xAxis.fontColor || opts.fontColor);\r\n          context.fillText(String(xitem), xAxisPoints[index] + offset, startY + opts.xAxis.marginTop * opts.pix + (opts.xAxis.lineHeight - opts.xAxis.fontSize) * opts.pix / 2 + opts.xAxis.fontSize * opts.pix);\r\n          context.closePath();\r\n          context.stroke();\r\n        }\r\n      });\r\n    } else {\r\n      newCategories.forEach(function(item, index) {\r\n        var xitem = opts.xAxis.formatter ? opts.xAxis.formatter(item) : item;\r\n        // 如果在主视图区域内\r\n        var _scrollDistance_ = opts._scrollDistance_ || 0;\r\n        var truePoints = boundaryGap == 'center' ? xAxisPoints[index] + eachSpacing / 2 : xAxisPoints[index];\r\n        if((truePoints - Math.abs(_scrollDistance_)) >= (opts.area[3] - 1) && (truePoints - Math.abs(_scrollDistance_)) <= (opts.width - opts.area[1] + 1)){\r\n          context.save();\r\n          context.beginPath();\r\n          context.setFontSize(xAxisFontSize);\r\n          context.setFillStyle(opts.xAxis.fontColor || opts.fontColor);\r\n          var textWidth = measureText(String(xitem), xAxisFontSize, context);\r\n          var offsetX = xAxisPoints[index];\r\n          if (boundaryGap == 'center') {\r\n            offsetX = xAxisPoints[index] + eachSpacing / 2;\r\n          }\r\n          var scrollHeight = 0;\r\n          if (opts.xAxis.scrollShow) {\r\n            scrollHeight = 6 * opts.pix;\r\n          }\r\n          var offsetY = startY + opts.xAxis.marginTop * opts.pix + xAxisFontSize - xAxisFontSize * Math.abs(Math.sin(config._xAxisTextAngle_));\r\n          if(opts.xAxis.rotateAngle < 0){\r\n            offsetX -= xAxisFontSize / 2;\r\n            textWidth = 0;\r\n          }else{\r\n            offsetX += xAxisFontSize / 2;\r\n            textWidth = -textWidth;\r\n          }\r\n          context.translate(offsetX, offsetY);\r\n          context.rotate(-1 * config._xAxisTextAngle_);\r\n          context.fillText(String(xitem), textWidth , 0 );\r\n          context.closePath();\r\n          context.stroke();\r\n          context.restore();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  context.restore();\r\n  \r\n  //画X轴标题\r\n  if (opts.xAxis.title) {\r\n    context.beginPath();\r\n    context.setFontSize(opts.xAxis.titleFontSize * opts.pix);\r\n    context.setFillStyle(opts.xAxis.titleFontColor);\r\n    context.fillText(String(opts.xAxis.title), opts.width - opts.area[1] + opts.xAxis.titleOffsetX * opts.pix,opts.height - opts.area[2] + opts.xAxis.marginTop * opts.pix + (opts.xAxis.lineHeight - opts.xAxis.titleFontSize) * opts.pix / 2 + (opts.xAxis.titleFontSize + opts.xAxis.titleOffsetY) * opts.pix);\r\n    context.closePath();\r\n    context.stroke();\r\n  }\r\n  \r\n  //绘制X轴轴线\r\n  if (opts.xAxis.axisLine) {\r\n    context.beginPath();\r\n    context.setStrokeStyle(opts.xAxis.axisLineColor);\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.moveTo(startX, opts.height - opts.area[2]);\r\n    context.lineTo(endX, opts.height - opts.area[2]);\r\n    context.stroke();\r\n  }\r\n}\r\n\r\nfunction drawYAxisGrid(categories, opts, config, context) {\r\n  if (opts.yAxis.disableGrid === true) {\r\n    return;\r\n  }\r\n  let spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  let eachSpacing = spacingValid / opts.yAxis.splitNumber;\r\n  let startX = opts.area[3];\r\n  let xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\r\n    xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;\r\n  let TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);\r\n  if(opts.type == 'mount' && opts.extra && opts.extra.mount && opts.extra.mount.widthRatio && opts.extra.mount.widthRatio > 1 ){\r\n    if(opts.extra.mount.widthRatio>2) opts.extra.mount.widthRatio = 2\r\n    TotalWidth += (opts.extra.mount.widthRatio - 1) * xAxiseachSpacing;\r\n  }\r\n  let endX = startX + TotalWidth;\r\n  let points = [];\r\n  let startY = 1\r\n  if (opts.xAxis.axisLine === false) {\r\n    startY = 0\r\n  }\r\n  for (let i = startY; i < opts.yAxis.splitNumber + 1; i++) {\r\n    points.push(opts.height - opts.area[2] - eachSpacing * i);\r\n  }\r\n  context.save();\r\n  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {\r\n    context.translate(opts._scrollDistance_, 0);\r\n  }\r\n  if (opts.yAxis.gridType == 'dash') {\r\n    context.setLineDash([opts.yAxis.dashLength * opts.pix, opts.yAxis.dashLength * opts.pix]);\r\n  }\r\n  context.setStrokeStyle(opts.yAxis.gridColor);\r\n  context.setLineWidth(1 * opts.pix);\r\n  points.forEach(function(item, index) {\r\n    context.beginPath();\r\n    context.moveTo(startX, item);\r\n    context.lineTo(endX, item);\r\n    context.stroke();\r\n  });\r\n  context.setLineDash([]);\r\n  context.restore();\r\n}\r\n\r\nfunction drawYAxis(series, opts, config, context) {\r\n  if (opts.yAxis.disabled === true) {\r\n    return;\r\n  }\r\n  var spacingValid = opts.height - opts.area[0] - opts.area[2];\r\n  var eachSpacing = spacingValid / opts.yAxis.splitNumber;\r\n  var startX = opts.area[3];\r\n  var endX = opts.width - opts.area[1];\r\n  var endY = opts.height - opts.area[2];\r\n  // set YAxis background\r\n  context.beginPath();\r\n  context.setFillStyle(opts.background);\r\n  if (opts.enableScroll == true && opts.xAxis.scrollPosition && opts.xAxis.scrollPosition !== 'left') {\r\n    context.fillRect(0, 0, startX, endY + 2 * opts.pix);\r\n  }\r\n  if (opts.enableScroll == true && opts.xAxis.scrollPosition && opts.xAxis.scrollPosition !== 'right') {\r\n    context.fillRect(endX, 0, opts.width, endY + 2 * opts.pix);\r\n  }\r\n  context.closePath();\r\n  context.stroke();\r\n  \r\n  let tStartLeft = opts.area[3];\r\n  let tStartRight = opts.width - opts.area[1];\r\n  let tStartCenter = opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2;\r\n  if (opts.yAxis.data) {\r\n    for (let i = 0; i < opts.yAxis.data.length; i++) {\r\n      let yData = opts.yAxis.data[i];\r\n      var points = [];\r\n      if(yData.type === 'categories'){\r\n        for (let i = 0; i <= yData.categories.length; i++) {\r\n          points.push(opts.area[0] + spacingValid / yData.categories.length / 2 + spacingValid / yData.categories.length * i);\r\n        }\r\n      }else{\r\n        for (let i = 0; i <= opts.yAxis.splitNumber; i++) {\r\n          points.push(opts.area[0] + eachSpacing * i);\r\n        }\r\n      }\r\n      if (yData.disabled !== true) {\r\n        let rangesFormat = opts.chartData.yAxisData.rangesFormat[i];\r\n        let yAxisFontSize = yData.fontSize ? yData.fontSize * opts.pix : config.fontSize;\r\n        let yAxisWidth = opts.chartData.yAxisData.yAxisWidth[i];\r\n        let textAlign = yData.textAlign || \"right\";\r\n        //画Y轴刻度及文案\r\n        rangesFormat.forEach(function(item, index) {\r\n          var pos = points[index];\r\n          context.beginPath();\r\n          context.setFontSize(yAxisFontSize);\r\n          context.setLineWidth(1 * opts.pix);\r\n          context.setStrokeStyle(yData.axisLineColor || '#cccccc');\r\n          context.setFillStyle(yData.fontColor || opts.fontColor);\r\n          let tmpstrat = 0;\r\n          let gapwidth = 4 * opts.pix;\r\n          if (yAxisWidth.position == 'left') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartLeft, pos);\r\n              context.lineTo(tStartLeft - 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            //画文字\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartLeft - yAxisWidth.width\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartLeft - gapwidth\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartLeft - yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n\r\n          } else if (yAxisWidth.position == 'right') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartRight, pos);\r\n              context.lineTo(tStartRight + 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartRight + gapwidth\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartRight + yAxisWidth.width\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartRight + yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            //画刻度线\r\n            if (yData.calibration == true) {\r\n              context.moveTo(tStartCenter, pos);\r\n              context.lineTo(tStartCenter - 3 * opts.pix, pos);\r\n              gapwidth += 3 * opts.pix;\r\n            }\r\n            //画文字\r\n            switch (textAlign) {\r\n              case \"left\":\r\n                context.setTextAlign('left');\r\n                tmpstrat = tStartCenter - yAxisWidth.width\r\n                break;\r\n              case \"right\":\r\n                context.setTextAlign('right');\r\n                tmpstrat = tStartCenter - gapwidth\r\n                break;\r\n              default:\r\n                context.setTextAlign('center');\r\n                tmpstrat = tStartCenter - yAxisWidth.width / 2\r\n            }\r\n            context.fillText(String(item), tmpstrat, pos + yAxisFontSize / 2 - 3 * opts.pix);\r\n          }\r\n          context.closePath();\r\n          context.stroke();\r\n          context.setTextAlign('left');\r\n        });\r\n        //画Y轴轴线\r\n        if (yData.axisLine !== false) {\r\n          context.beginPath();\r\n          context.setStrokeStyle(yData.axisLineColor || '#cccccc');\r\n          context.setLineWidth(1 * opts.pix);\r\n          if (yAxisWidth.position == 'left') {\r\n            context.moveTo(tStartLeft, opts.height - opts.area[2]);\r\n            context.lineTo(tStartLeft, opts.area[0]);\r\n          } else if (yAxisWidth.position == 'right') {\r\n            context.moveTo(tStartRight, opts.height - opts.area[2]);\r\n            context.lineTo(tStartRight, opts.area[0]);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            context.moveTo(tStartCenter, opts.height - opts.area[2]);\r\n            context.lineTo(tStartCenter, opts.area[0]);\r\n          }\r\n          context.stroke();\r\n        }\r\n        //画Y轴标题\r\n        if (opts.yAxis.showTitle) {\r\n          let titleFontSize = yData.titleFontSize * opts.pix || config.fontSize;\r\n          let title = yData.title;\r\n          context.beginPath();\r\n          context.setFontSize(titleFontSize);\r\n          context.setFillStyle(yData.titleFontColor || opts.fontColor);\r\n          if (yAxisWidth.position == 'left') {\r\n            context.fillText(title, tStartLeft - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          } else if (yAxisWidth.position == 'right') {\r\n            context.fillText(title, tStartRight - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          } else if (yAxisWidth.position == 'center') {\r\n            context.fillText(title, tStartCenter - measureText(title, titleFontSize, context) / 2 + (yData.titleOffsetX || 0), opts.area[0] - (10 - (yData.titleOffsetY || 0)) * opts.pix);\r\n          }\r\n          context.closePath();\r\n          context.stroke();\r\n        }\r\n        if (yAxisWidth.position == 'left') {\r\n          tStartLeft -= (yAxisWidth.width + opts.yAxis.padding * opts.pix);\r\n        } else {\r\n          tStartRight += yAxisWidth.width + opts.yAxis.padding * opts.pix;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction drawLegend(series, opts, config, context, chartData) {\r\n  if (opts.legend.show === false) {\r\n    return;\r\n  }\r\n  let legendData = chartData.legendData;\r\n  let legendList = legendData.points;\r\n  let legendArea = legendData.area;\r\n  let padding = opts.legend.padding * opts.pix;\r\n  let fontSize = opts.legend.fontSize * opts.pix;\r\n  let shapeWidth = 15 * opts.pix;\r\n  let shapeRight = 5 * opts.pix;\r\n  let itemGap = opts.legend.itemGap * opts.pix;\r\n  let lineHeight = Math.max(opts.legend.lineHeight * opts.pix, fontSize);\r\n  //画背景及边框\r\n  context.beginPath();\r\n  context.setLineWidth(opts.legend.borderWidth * opts.pix);\r\n  context.setStrokeStyle(opts.legend.borderColor);\r\n  context.setFillStyle(opts.legend.backgroundColor);\r\n  context.moveTo(legendArea.start.x, legendArea.start.y);\r\n  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);\r\n  context.closePath();\r\n  context.fill();\r\n  context.stroke();\r\n  legendList.forEach(function(itemList, listIndex) {\r\n    let width = 0;\r\n    let height = 0;\r\n    width = legendData.widthArr[listIndex];\r\n    height = legendData.heightArr[listIndex];\r\n    let startX = 0;\r\n    let startY = 0;\r\n    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n      switch (opts.legend.float) {\r\n        case 'left':\r\n          startX = legendArea.start.x + padding;\r\n        break;\r\n        case 'right':\r\n          startX = legendArea.start.x + legendArea.width - width;\r\n        break;\r\n        default:\r\n        startX = legendArea.start.x + (legendArea.width - width) / 2;\r\n      }\r\n      startY = legendArea.start.y + padding + listIndex * lineHeight;\r\n    } else {\r\n      if (listIndex == 0) {\r\n        width = 0;\r\n      } else {\r\n        width = legendData.widthArr[listIndex - 1];\r\n      }\r\n      startX = legendArea.start.x + padding + width;\r\n      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;\r\n    }\r\n    context.setFontSize(config.fontSize);\r\n    for (let i = 0; i < itemList.length; i++) {\r\n      let item = itemList[i];\r\n      item.area = [0, 0, 0, 0];\r\n      item.area[0] = startX;\r\n      item.area[1] = startY;\r\n      item.area[3] = startY + lineHeight;\r\n      context.beginPath();\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);\r\n      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);\r\n      switch (item.legendShape) {\r\n        case 'line':\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pix, 15 * opts.pix, 4 * opts.pix);\r\n          break;\r\n        case 'triangle':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          break;\r\n        case 'diamond':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.lineTo(startX + 2.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight + 5 * opts.pix);\r\n          context.lineTo(startX + 12.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.lineTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          break;\r\n        case 'circle':\r\n          context.moveTo(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight);\r\n          context.arc(startX + 7.5 * opts.pix, startY + 0.5 * lineHeight, 5 * opts.pix, 0, 2 * Math.PI);\r\n          break;\r\n        case 'rect':\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n          break;\r\n        case 'square':\r\n          context.moveTo(startX + 5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX + 5 * opts.pix, startY + 0.5 * lineHeight - 5 * opts.pix, 10 * opts.pix, 10 * opts.pix);\r\n          break;\r\n        case 'none':\r\n          break;\r\n        default:\r\n          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pix);\r\n          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pix, 15 * opts.pix, 10 * opts.pix);\r\n      }\r\n      context.closePath();\r\n      context.fill();\r\n      context.stroke();\r\n      startX += shapeWidth + shapeRight;\r\n      let fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;\r\n      const legendText = item.legendText ? item.legendText : item.name;\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);\r\n      context.fillText(legendText, startX, startY + fontTrans);\r\n      context.closePath();\r\n      context.stroke();\r\n      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {\r\n        startX += measureText(legendText, fontSize, context) + itemGap;\r\n        item.area[2] = startX;\r\n      } else {\r\n        item.area[2] = startX + measureText(legendText, fontSize, context) + itemGap;;\r\n        startX -= shapeWidth + shapeRight;\r\n        startY += lineHeight;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawPieDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var pieOption = assign({}, {\r\n    activeOpacity: 0.5,\r\n    activeRadius: 10,\r\n    offsetAngle: 0,\r\n    labelWidth: 15,\r\n    ringWidth: 30,\r\n    customRadius: 0,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    centerColor: '#FFFFFF',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.type == \"pie\" ? opts.extra.pie : opts.extra.ring);\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  if (config.pieChartLinePadding == 0) {\r\n    config.pieChartLinePadding = pieOption.activeRadius * opts.pix;\r\n  }\r\n\r\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\r\n  radius = radius < 10 ? 10 : radius;\r\n  if (pieOption.customRadius > 0) {\r\n    radius = pieOption.customRadius * opts.pix;\r\n  }\r\n  series = getPieDataPoints(series, radius, process);\r\n  var activeRadius = pieOption.activeRadius * opts.pix;\r\n  pieOption.customColor = fillCustomColor(pieOption.linearType, pieOption.customColor, series, config);\r\n  series = series.map(function(eachSeries) {\r\n    eachSeries._start_ += (pieOption.offsetAngle) * Math.PI / 180;\r\n    return eachSeries;\r\n  });\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (opts.tooltip) {\r\n      if (opts.tooltip.index == seriesIndex) {\r\n        context.beginPath();\r\n        context.setFillStyle(hexToRgb(eachSeries.color, pieOption.activeOpacity || 0.5));\r\n        context.moveTo(centerPosition.x, centerPosition.y);\r\n        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    context.beginPath();\r\n    context.setLineWidth(pieOption.borderWidth * opts.pix);\r\n    context.lineJoin = \"round\";\r\n    context.setStrokeStyle(pieOption.borderColor);\r\n    var fillcolor = eachSeries.color;\r\n    if (pieOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(pieOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, 1))\r\n      fillcolor = grd\r\n    }\r\n    context.setFillStyle(fillcolor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    if (pieOption.border == true) {\r\n      context.stroke();\r\n    }\r\n  });\r\n  if (opts.type === 'ring') {\r\n    var innerPieWidth = radius * 0.6;\r\n    if (typeof pieOption.ringWidth === 'number' && pieOption.ringWidth > 0) {\r\n      innerPieWidth = Math.max(0, radius - pieOption.ringWidth * opts.pix);\r\n    }\r\n    context.beginPath();\r\n    context.setFillStyle(pieOption.centerColor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n  }\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawPieText(series, opts, config, context, radius, centerPosition);\r\n  }\r\n  if (process === 1 && opts.type === 'ring') {\r\n    drawRingTitle(opts, config, context, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawRoseDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var roseOption = assign({}, {\r\n    type: 'area',\r\n    activeOpacity: 0.5,\r\n    activeRadius: 10,\r\n    offsetAngle: 0,\r\n    labelWidth: 15,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.rose);\r\n  if (config.pieChartLinePadding == 0) {\r\n    config.pieChartLinePadding = roseOption.activeRadius * opts.pix;\r\n  }\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);\r\n  radius = radius < 10 ? 10 : radius;\r\n  var minRadius = roseOption.minRadius || radius * 0.5;\r\n  if(radius < minRadius){\r\n    radius = minRadius + 10;\r\n  }\r\n  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);\r\n  var activeRadius = roseOption.activeRadius * opts.pix;\r\n  roseOption.customColor = fillCustomColor(roseOption.linearType, roseOption.customColor, series, config);\r\n  series = series.map(function(eachSeries) {\r\n    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;\r\n    return eachSeries;\r\n  });\r\n  series.forEach(function(eachSeries, seriesIndex) {\r\n    if (opts.tooltip) {\r\n      if (opts.tooltip.index == seriesIndex) {\r\n        context.beginPath();\r\n        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));\r\n        context.moveTo(centerPosition.x, centerPosition.y);\r\n        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n    }\r\n    context.beginPath();\r\n    context.setLineWidth(roseOption.borderWidth * opts.pix);\r\n    context.lineJoin = \"round\";\r\n    context.setStrokeStyle(roseOption.borderColor);\r\n    var fillcolor = eachSeries.color;\r\n    if (roseOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, eachSeries._radius_)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(roseOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, 1))\r\n      fillcolor = grd\r\n    }\r\n    context.setFillStyle(fillcolor);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    if (roseOption.border == true) {\r\n      context.stroke();\r\n    }\r\n  });\r\n\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawPieText(series, opts, config, context, radius, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawArcbarDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var arcbarOption = assign({}, {\r\n    startAngle: 0.75,\r\n    endAngle: 0.25,\r\n    type: 'default',\r\n    direction: 'cw',\r\n    lineCap: 'round',\r\n    width: 12 ,\r\n    gap: 2 ,\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.arcbar);\r\n  series = getArcbarDataPoints(series, arcbarOption, process);\r\n  var centerPosition;\r\n  if (arcbarOption.centerX || arcbarOption.centerY) {\r\n    centerPosition = {\r\n      x: arcbarOption.centerX ? arcbarOption.centerX : opts.width / 2,\r\n      y: arcbarOption.centerY ? arcbarOption.centerY : opts.height / 2\r\n    };\r\n  } else {\r\n    centerPosition = {\r\n      x: opts.width / 2,\r\n      y: opts.height / 2\r\n    };\r\n  }\r\n  var radius;\r\n  if (arcbarOption.radius) {\r\n    radius = arcbarOption.radius;\r\n  } else {\r\n    radius = Math.min(centerPosition.x, centerPosition.y);\r\n    radius -= 5 * opts.pix;\r\n    radius -= arcbarOption.width / 2;\r\n  }\r\n  radius = radius < 10 ? 10 : radius;\r\n  arcbarOption.customColor = fillCustomColor(arcbarOption.linearType, arcbarOption.customColor, series, config);\r\n  \r\n  for (let i = 0; i < series.length; i++) {\r\n    let eachSeries = series[i];\r\n    //背景颜色\r\n    context.setLineWidth(arcbarOption.width * opts.pix);\r\n    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');\r\n    context.setLineCap(arcbarOption.lineCap);\r\n    context.beginPath();\r\n    if (arcbarOption.type == 'default') {\r\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, arcbarOption.direction == 'ccw');\r\n    } else {\r\n      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, 0, 2 * Math.PI, arcbarOption.direction == 'ccw');\r\n    }\r\n    context.stroke();\r\n    //进度条\r\n    var fillColor = eachSeries.color\r\n    if(arcbarOption.linearType == 'custom'){\r\n      var grd = context.createLinearGradient(centerPosition.x - radius, centerPosition.y, centerPosition.x + radius, centerPosition.y);\r\n      grd.addColorStop(1, hexToRgb(arcbarOption.customColor[eachSeries.linearIndex], 1))\r\n      grd.addColorStop(0, hexToRgb(eachSeries.color, 1))\r\n      fillColor = grd;\r\n    }\r\n    context.setLineWidth(arcbarOption.width * opts.pix);\r\n    context.setStrokeStyle(fillColor);\r\n    context.setLineCap(arcbarOption.lineCap);\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width * opts.pix + arcbarOption.gap * opts.pix) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, arcbarOption.direction == 'ccw');\r\n    context.stroke();\r\n  }\r\n  drawRingTitle(opts, config, context, centerPosition);\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: series\r\n  };\r\n}\r\n\r\nfunction drawGaugeDataPoints(categories, series, opts, config, context) {\r\n  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\r\n  var gaugeOption = assign({}, {\r\n    type: 'default',\r\n    startAngle: 0.75,\r\n    endAngle: 0.25,\r\n    width: 15,\r\n    labelOffset:13,\r\n    splitLine: {\r\n      fixRadius: 0,\r\n      splitNumber: 10,\r\n      width: 15,\r\n      color: '#FFFFFF',\r\n      childNumber: 5,\r\n      childWidth: 5\r\n    },\r\n    pointer: {\r\n      width: 15,\r\n      color: 'auto'\r\n    }\r\n  }, opts.extra.gauge);\r\n  if (gaugeOption.oldAngle == undefined) {\r\n    gaugeOption.oldAngle = gaugeOption.startAngle;\r\n  }\r\n  if (gaugeOption.oldData == undefined) {\r\n    gaugeOption.oldData = 0;\r\n  }\r\n  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);\r\n  var centerPosition = {\r\n    x: opts.width / 2,\r\n    y: opts.height / 2\r\n  };\r\n  var radius = Math.min(centerPosition.x, centerPosition.y);\r\n  radius -= 5 * opts.pix;\r\n  radius -= gaugeOption.width / 2;\r\n  radius = radius < 10 ? 10 : radius;\r\n  var innerRadius = radius - gaugeOption.width;\r\n  var totalAngle = 0;\r\n  //判断仪表盘的样式：default百度样式，progress新样式\r\n  if (gaugeOption.type == 'progress') {\r\n    //## 第一步画中心圆形背景和进度条背景\r\n    //中心圆形背景\r\n    var pieRadius = radius - gaugeOption.width * 3;\r\n    context.beginPath();\r\n    let gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);\r\n    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）\r\n    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));\r\n    gradient.addColorStop('1.0', hexToRgb(\"#FFFFFF\", 0.1));\r\n    context.setFillStyle(gradient);\r\n    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);\r\n    context.fill();\r\n    //画进度条背景\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\r\n    context.setLineCap('round');\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);\r\n    context.stroke();\r\n    //## 第二步画刻度线\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n    let childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\r\n    let startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\r\n    let endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    let len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;\r\n    let proc = series[0].data * process;\r\n    for (let i = 0; i < len; i++) {\r\n      context.beginPath();\r\n      //刻度线随进度变色\r\n      if (proc > (i / len)) {\r\n        context.setStrokeStyle(hexToRgb(series[0].color, 1));\r\n      } else {\r\n        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));\r\n      }\r\n      context.setLineWidth(3 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(endX, 0);\r\n      context.stroke();\r\n      context.rotate(childAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    //## 第三步画进度条\r\n    series = getGaugeArcbarDataPoints(series, gaugeOption, process);\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setStrokeStyle(series[0].color);\r\n    context.setLineCap('round');\r\n    context.beginPath();\r\n    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);\r\n    context.stroke();\r\n    //## 第四步画指针\r\n    let pointerRadius = radius - gaugeOption.width * 2.5;\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((series[0]._proportion_ - 1) * Math.PI);\r\n    context.beginPath();\r\n    context.setLineWidth(gaugeOption.width / 3);\r\n    let gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);\r\n    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));\r\n    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));\r\n    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));\r\n    context.setStrokeStyle(gradient3);\r\n    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);\r\n    context.stroke();\r\n    context.beginPath();\r\n    context.setLineWidth(1);\r\n    context.setStrokeStyle(series[0].color);\r\n    context.setFillStyle(series[0].color);\r\n    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);\r\n    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);\r\n    context.stroke();\r\n    context.fill();\r\n    context.restore();\r\n    //default百度样式\r\n  } else {\r\n    //画背景\r\n    context.setLineWidth(gaugeOption.width);\r\n    context.setLineCap('butt');\r\n    for (let i = 0; i < categories.length; i++) {\r\n      let eachCategories = categories[i];\r\n      context.beginPath();\r\n      context.setStrokeStyle(eachCategories.color);\r\n      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);\r\n      context.stroke();\r\n    }\r\n    context.save();\r\n    //画刻度线\r\n    if (gaugeOption.endAngle < gaugeOption.startAngle) {\r\n      totalAngle = 2 + gaugeOption.endAngle - gaugeOption.startAngle;\r\n    } else {\r\n      totalAngle = gaugeOption.startAngle - gaugeOption.endAngle;\r\n    }\r\n    let splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;\r\n    let childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;\r\n    let startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;\r\n    let endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;\r\n    let childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    for (let i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {\r\n      context.beginPath();\r\n      context.setStrokeStyle(gaugeOption.splitLine.color);\r\n      context.setLineWidth(2 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(endX, 0);\r\n      context.stroke();\r\n      context.rotate(splitAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    context.save();\r\n    context.translate(centerPosition.x, centerPosition.y);\r\n    context.rotate((gaugeOption.startAngle - 1) * Math.PI);\r\n    for (let i = 0; i < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; i++) {\r\n      context.beginPath();\r\n      context.setStrokeStyle(gaugeOption.splitLine.color);\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.moveTo(startX, 0);\r\n      context.lineTo(childendX, 0);\r\n      context.stroke();\r\n      context.rotate(childAngle * Math.PI);\r\n    }\r\n    context.restore();\r\n    //画指针\r\n    series = getGaugeDataPoints(series, categories, gaugeOption, process);\r\n    for (let i = 0; i < series.length; i++) {\r\n      let eachSeries = series[i];\r\n      context.save();\r\n      context.translate(centerPosition.x, centerPosition.y);\r\n      context.rotate((eachSeries._proportion_ - 1) * Math.PI);\r\n      context.beginPath();\r\n      context.setFillStyle(eachSeries.color);\r\n      context.moveTo(gaugeOption.pointer.width, 0);\r\n      context.lineTo(0, -gaugeOption.pointer.width / 2);\r\n      context.lineTo(-innerRadius, 0);\r\n      context.lineTo(0, gaugeOption.pointer.width / 2);\r\n      context.lineTo(gaugeOption.pointer.width, 0);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFillStyle('#FFFFFF');\r\n      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);\r\n      context.fill();\r\n      context.restore();\r\n    }\r\n    if (opts.dataLabel !== false) {\r\n      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);\r\n    }\r\n  }\r\n  //画仪表盘标题，副标题\r\n  drawRingTitle(opts, config, context, centerPosition);\r\n  if (process === 1 && opts.type === 'gauge') {\r\n    opts.extra.gauge.oldAngle = series[0]._proportion_;\r\n    opts.extra.gauge.oldData = series[0].data;\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    innerRadius: innerRadius,\r\n    categories: categories,\r\n    totalAngle: totalAngle\r\n  };\r\n}\r\n\r\nfunction drawRadarDataPoints(series, opts, config, context) {\r\n  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  var radarOption = assign({}, {\r\n    gridColor: '#cccccc',\r\n    gridType: 'radar',\r\n    gridEval:1,\r\n    axisLabel:false,\r\n    axisLabelTofix:0,\r\n    labelShow:true,\r\n    labelColor:'#666666',\r\n    labelPointShow:false,\r\n    labelPointRadius:3,\r\n    labelPointColor:'#cccccc',\r\n    opacity: 0.2,\r\n    gridCount: 3,\r\n    border:false,\r\n    borderWidth:2,\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.radar);\r\n  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);\r\n  var centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  };\r\n  var xr = (opts.width - opts.area[1] - opts.area[3]) / 2\r\n  var yr = (opts.height - opts.area[0] - opts.area[2]) / 2\r\n  var radius = Math.min(xr - (getMaxTextListLength(opts.categories, config.fontSize, context) + config.radarLabelTextMargin), yr - config.radarLabelTextMargin);\r\n  radius -= config.radarLabelTextMargin * opts.pix;\r\n  radius = radius < 10 ? 10 : radius;\r\n  radius = radarOption.radius ? radarOption.radius : radius;\r\n  // 画分割线\r\n  context.beginPath();\r\n  context.setLineWidth(1 * opts.pix);\r\n  context.setStrokeStyle(radarOption.gridColor);\r\n  coordinateAngle.forEach(function(angle,index) {\r\n    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);\r\n    context.moveTo(centerPosition.x, centerPosition.y);\r\n    if (index % radarOption.gridEval == 0) {\r\n      context.lineTo(pos.x, pos.y);\r\n    }\r\n  });\r\n  context.stroke();\r\n  context.closePath();\r\n  \r\n  // 画背景网格\r\n  var _loop = function _loop(i) {\r\n    var startPos = {};\r\n    context.beginPath();\r\n    context.setLineWidth(1 * opts.pix);\r\n    context.setStrokeStyle(radarOption.gridColor);\r\n    if (radarOption.gridType == 'radar') {\r\n      coordinateAngle.forEach(function(angle, index) {\r\n        var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius /\r\n          radarOption.gridCount * i * Math.sin(angle), centerPosition);\r\n        if (index === 0) {\r\n          startPos = pos;\r\n          context.moveTo(pos.x, pos.y);\r\n        } else {\r\n          context.lineTo(pos.x, pos.y);\r\n        }\r\n      });\r\n      context.lineTo(startPos.x, startPos.y);\r\n    } else {\r\n      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(1.5), radius / radarOption.gridCount * i * Math.sin(1.5), centerPosition);\r\n      context.arc(centerPosition.x, centerPosition.y, centerPosition.y - pos.y, 0, 2 * Math.PI, false);\r\n    }\r\n    context.stroke();\r\n    context.closePath();\r\n  };\r\n  for (var i = 1; i <= radarOption.gridCount; i++) {\r\n    _loop(i);\r\n  }\r\n  radarOption.customColor = fillCustomColor(radarOption.linearType, radarOption.customColor, series, config);\r\n  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);\r\n  radarDataPoints.forEach(function(eachSeries, seriesIndex) {\r\n    // 绘制区域数据\r\n    context.beginPath();\r\n    context.setLineWidth(radarOption.borderWidth * opts.pix);\r\n    context.setStrokeStyle(eachSeries.color);\r\n    \r\n    var fillcolor = hexToRgb(eachSeries.color, radarOption.opacity);\r\n    if (radarOption.linearType == 'custom') {\r\n      var grd;\r\n      if(context.createCircularGradient){\r\n        grd = context.createCircularGradient(centerPosition.x, centerPosition.y, radius)\r\n      }else{\r\n        grd = context.createRadialGradient(centerPosition.x, centerPosition.y, 0,centerPosition.x, centerPosition.y, radius)\r\n      }\r\n      grd.addColorStop(0, hexToRgb(radarOption.customColor[series[seriesIndex].linearIndex], radarOption.opacity))\r\n      grd.addColorStop(1, hexToRgb(eachSeries.color, radarOption.opacity))\r\n      fillcolor = grd\r\n    }\r\n    \r\n    context.setFillStyle(fillcolor);\r\n    eachSeries.data.forEach(function(item, index) {\r\n      if (index === 0) {\r\n        context.moveTo(item.position.x, item.position.y);\r\n      } else {\r\n        context.lineTo(item.position.x, item.position.y);\r\n      }\r\n    });\r\n    context.closePath();\r\n    context.fill();\r\n    if(radarOption.border === true){\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n    if (opts.dataPointShape !== false) {\r\n      var points = eachSeries.data.map(function(item) {\r\n        return item.position;\r\n      });\r\n      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);\r\n    }\r\n  });\r\n  // 画刻度值\r\n  if(radarOption.axisLabel === true){\r\n    const maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));\r\n    const stepLength = radius / radarOption.gridCount;\r\n    const fontSize = opts.fontSize * opts.pix;\r\n    context.setFontSize(fontSize);\r\n    context.setFillStyle(opts.fontColor);\r\n    context.setTextAlign('left');\r\n    for (var i = 0; i < radarOption.gridCount + 1; i++) {\r\n      let label = i * maxData / radarOption.gridCount;\r\n      label = label.toFixed(radarOption.axisLabelTofix);\r\n      context.fillText(String(label), centerPosition.x + 3 * opts.pix, centerPosition.y - i * stepLength + fontSize / 2);\r\n    }\r\n  }\r\n  \r\n  // draw label text\r\n  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);\r\n  \r\n  // draw dataLabel\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    radarDataPoints.forEach(function(eachSeries, seriesIndex) {\r\n      context.beginPath();\r\n      var fontSize = eachSeries.textSize * opts.pix || config.fontSize;\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(eachSeries.textColor || opts.fontColor);\r\n      eachSeries.data.forEach(function(item, index) {\r\n        //如果是中心点垂直的上下点位\r\n        if(Math.abs(item.position.x - centerPosition.x)<2){\r\n          //如果在上面\r\n          if(item.position.y < centerPosition.y){\r\n            context.setTextAlign('center');\r\n            context.fillText(item.value, item.position.x, item.position.y - 4);\r\n          }else{\r\n            context.setTextAlign('center');\r\n            context.fillText(item.value, item.position.x, item.position.y + fontSize + 2);\r\n          }\r\n        }else{\r\n          //如果在左侧\r\n          if(item.position.x < centerPosition.x){\r\n            context.setTextAlign('right');\r\n            context.fillText(item.value, item.position.x - 4, item.position.y + fontSize / 2 - 2);\r\n          }else{\r\n            context.setTextAlign('left');\r\n            context.fillText(item.value, item.position.x + 4, item.position.y + fontSize / 2 - 2);\r\n          }\r\n        }\r\n      });\r\n      context.closePath();\r\n      context.stroke();\r\n    });\r\n    context.setTextAlign('left');\r\n  }\r\n  \r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    angleList: coordinateAngle\r\n  };\r\n}\r\n\r\n// 经纬度转墨卡托\r\nfunction lonlat2mercator(longitude, latitude) {\r\n  var mercator = Array(2);\r\n  var x = longitude * 20037508.34 / 180;\r\n  var y = Math.log(Math.tan((90 + latitude) * Math.PI / 360)) / (Math.PI / 180);\r\n  y = y * 20037508.34 / 180;\r\n  mercator[0] = x;\r\n  mercator[1] = y;\r\n  return mercator;\r\n}\r\n\r\n// 墨卡托转经纬度\r\nfunction mercator2lonlat(longitude, latitude) {\r\n  var lonlat = Array(2)\r\n  var x = longitude / 20037508.34 * 180;\r\n  var y = latitude / 20037508.34 * 180;\r\n  y = 180 / Math.PI * (2 * Math.atan(Math.exp(y * Math.PI / 180)) - Math.PI / 2);\r\n  lonlat[0] = x;\r\n  lonlat[1] = y;\r\n  return lonlat;\r\n}\r\n\r\nfunction getBoundingBox(data) {\r\n  var bounds = {},coords;\r\n  bounds.xMin = 180;\r\n  bounds.xMax = 0;\r\n  bounds.yMin = 90;\r\n  bounds.yMax = 0\r\n  for (var i = 0; i < data.length; i++) {\r\n    var coorda = data[i].geometry.coordinates\r\n    for (var k = 0; k < coorda.length; k++) {\r\n      coords = coorda[k];\r\n      if (coords.length == 1) {\r\n        coords = coords[0]\r\n      }\r\n      for (var j = 0; j < coords.length; j++) {\r\n        var longitude = coords[j][0];\r\n        var latitude = coords[j][1];\r\n        var point = {\r\n          x: longitude,\r\n          y: latitude\r\n        }\r\n        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;\r\n        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;\r\n        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;\r\n        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;\r\n      }\r\n    }\r\n  }\r\n  return bounds;\r\n}\r\n\r\nfunction coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {\r\n  return {\r\n    x: (longitude - bounds.xMin) * scale + xoffset,\r\n    y: (bounds.yMax - latitude) * scale + yoffset\r\n  };\r\n}\r\n\r\nfunction pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {\r\n  return {\r\n    x: (pointX - xoffset) / scale + bounds.xMin,\r\n    y: bounds.yMax - (pointY - yoffset) / scale\r\n  };\r\n}\r\n\r\nfunction isRayIntersectsSegment(poi, s_poi, e_poi) {\r\n  if (s_poi[1] == e_poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {\r\n    return false;\r\n  }\r\n  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {\r\n    return false;\r\n  }\r\n  let xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);\r\n  if (xseg < poi[0]) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nfunction isPoiWithinPoly(poi, poly, mercator) {\r\n  let sinsc = 0;\r\n  for (let i = 0; i < poly.length; i++) {\r\n    let epoly = poly[i][0];\r\n    if (poly.length == 1) {\r\n      epoly = poly[i][0]\r\n    }\r\n    for (let j = 0; j < epoly.length - 1; j++) {\r\n      let s_poi = epoly[j];\r\n      let e_poi = epoly[j + 1];\r\n      if (mercator) {\r\n        s_poi = lonlat2mercator(epoly[j][0], epoly[j][1]);\r\n        e_poi = lonlat2mercator(epoly[j + 1][0], epoly[j + 1][1]);\r\n      }\r\n      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {\r\n        sinsc += 1;\r\n      }\r\n    }\r\n  }\r\n  if (sinsc % 2 == 1) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction drawMapDataPoints(series, opts, config, context) {\r\n  var mapOption = assign({}, {\r\n    border: true,\r\n    mercator: false,\r\n    borderWidth: 1,\r\n    active:true,\r\n    borderColor: '#666666',\r\n    fillOpacity: 0.6,\r\n    activeBorderColor: '#f04864',\r\n    activeFillColor: '#facc14',\r\n    activeFillOpacity: 1\r\n  }, opts.extra.map);\r\n  var coords, point;\r\n  var data = series;\r\n  var bounds = getBoundingBox(data);\r\n  if (mapOption.mercator) {\r\n    var max = lonlat2mercator(bounds.xMax, bounds.yMax)\r\n    var min = lonlat2mercator(bounds.xMin, bounds.yMin)\r\n    bounds.xMax = max[0]\r\n    bounds.yMax = max[1]\r\n    bounds.xMin = min[0]\r\n    bounds.yMin = min[1]\r\n  }\r\n  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);\r\n  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);\r\n  var scale = xScale < yScale ? xScale : yScale;\r\n  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;\r\n  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;\r\n  for (var i = 0; i < data.length; i++) {\r\n    context.beginPath();\r\n    context.setLineWidth(mapOption.borderWidth * opts.pix);\r\n    context.setStrokeStyle(mapOption.borderColor);\r\n    context.setFillStyle(hexToRgb(series[i].color, series[i].fillOpacity||mapOption.fillOpacity));\r\n    if (mapOption.active == true && opts.tooltip) {\r\n      if (opts.tooltip.index == i) {\r\n        context.setStrokeStyle(mapOption.activeBorderColor);\r\n        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));\r\n      }\r\n    }\r\n    var coorda = data[i].geometry.coordinates\r\n    for (var k = 0; k < coorda.length; k++) {\r\n      coords = coorda[k];\r\n      if (coords.length == 1) {\r\n        coords = coords[0]\r\n      }\r\n      for (var j = 0; j < coords.length; j++) {\r\n        var gaosi = Array(2);\r\n        if (mapOption.mercator) {\r\n          gaosi = lonlat2mercator(coords[j][0], coords[j][1])\r\n        } else {\r\n          gaosi = coords[j]\r\n        }\r\n        point = coordinateToPoint(gaosi[1], gaosi[0], bounds, scale, xoffset, yoffset)\r\n        if (j === 0) {\r\n          context.beginPath();\r\n          context.moveTo(point.x, point.y);\r\n        } else {\r\n          context.lineTo(point.x, point.y);\r\n        }\r\n      }\r\n      context.fill();\r\n      if (mapOption.border == true) {\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  if (opts.dataLabel == true) {\r\n    for (var i = 0; i < data.length; i++) {\r\n      var centerPoint = data[i].properties.centroid;\r\n      if (centerPoint) {\r\n        if (mapOption.mercator) {\r\n          centerPoint = lonlat2mercator(data[i].properties.centroid[0], data[i].properties.centroid[1])\r\n        }\r\n        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);\r\n        let fontSize = data[i].textSize * opts.pix || config.fontSize;\r\n        let fontColor = data[i].textColor || opts.fontColor;\r\n        if(mapOption.active && mapOption.activeTextColor && opts.tooltip && opts.tooltip.index == i){\r\n          fontColor = mapOption.activeTextColor;\r\n        }\r\n        let text = data[i].properties.name;\r\n        context.beginPath();\r\n        context.setFontSize(fontSize)\r\n        context.setFillStyle(fontColor)\r\n        context.fillText(text, point.x - measureText(text, fontSize, context) / 2, point.y + fontSize / 2);\r\n        context.closePath();\r\n        context.stroke();\r\n      }\r\n    }\r\n  }\r\n  opts.chartData.mapData = {\r\n    bounds: bounds,\r\n    scale: scale,\r\n    xoffset: xoffset,\r\n    yoffset: yoffset,\r\n    mercator: mapOption.mercator\r\n  }\r\n  drawToolTipBridge(opts, config, context, 1);\r\n  context.draw();\r\n}\r\n\r\nfunction normalInt(min, max, iter) {\r\n  iter = iter == 0 ? 1 : iter;\r\n  var arr = [];\r\n  for (var i = 0; i < iter; i++) {\r\n    arr[i] = Math.random();\r\n  };\r\n  return Math.floor(arr.reduce(function(i, j) {\r\n    return i + j\r\n  }) / iter * (max - min)) + min;\r\n};\r\n\r\nfunction collisionNew(area, points, width, height) {\r\n  var isIn = false;\r\n  for (let i = 0; i < points.length; i++) {\r\n    if (points[i].area) {\r\n      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {\r\n        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {\r\n          isIn = true;\r\n          break;\r\n        } else {\r\n          isIn = false;\r\n        }\r\n      } else {\r\n        isIn = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return isIn;\r\n};\r\n\r\nfunction getWordCloudPoint(opts, type, context) {\r\n  let points = opts.series;\r\n  switch (type) {\r\n    case 'normal':\r\n      for (let i = 0; i < points.length; i++) {\r\n        let text = points[i].name;\r\n        let tHeight = points[i].textSize * opts.pix;\r\n        let tWidth = measureText(text, tHeight, context);\r\n        let x, y;\r\n        let area;\r\n        let breaknum = 0;\r\n        while (true) {\r\n          breaknum++;\r\n          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 +\r\n            opts.height / 2\r\n          ];\r\n          let isCollision = collisionNew(area, points, opts.width, opts.height);\r\n          if (!isCollision) break;\r\n          if (breaknum == 1000) {\r\n            area = [-100, -100, -100, -100];\r\n            break;\r\n          }\r\n        };\r\n        points[i].area = area;\r\n      }\r\n      break;\r\n    case 'vertical':\r\n      function Spin() {\r\n        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）\r\n        if (Math.random() > 0.7) {\r\n          return true;\r\n        } else {\r\n          return false\r\n        };\r\n      };\r\n      for (let i = 0; i < points.length; i++) {\r\n        let text = points[i].name;\r\n        let tHeight = points[i].textSize * opts.pix;\r\n        let tWidth = measureText(text, tHeight, context);\r\n        let isSpin = Spin();\r\n        let x, y, area, areav;\r\n        let breaknum = 0;\r\n        while (true) {\r\n          breaknum++;\r\n          let isCollision;\r\n          if (isSpin) {\r\n            x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n            y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n            area = [y - 5 - tWidth + opts.width / 2, (-x - 5 + opts.height / 2), y + 5 + opts.width / 2, (-x + tHeight + 5 + opts.height / 2)];\r\n            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-x + tHeight + 5 + opts.height / 2) - 5, (opts.height / 2 - opts.width / 2) + (y - 5 - tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-x + tHeight + 5 + opts.height / 2) + tHeight, (opts.height / 2 - opts.width / 2) + (y - 5 - tWidth + opts.width / 2) + tWidth + 5];\r\n            isCollision = collisionNew(areav, points, opts.height, opts.width);\r\n          } else {\r\n            x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;\r\n            y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;\r\n            area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];\r\n            isCollision = collisionNew(area, points, opts.width, opts.height);\r\n          }\r\n          if (!isCollision) break;\r\n          if (breaknum == 1000) {\r\n            area = [-1000, -1000, -1000, -1000];\r\n            break;\r\n          }\r\n        };\r\n        if (isSpin) {\r\n          points[i].area = areav;\r\n          points[i].areav = area;\r\n        } else {\r\n          points[i].area = area;\r\n        }\r\n        points[i].rotate = isSpin;\r\n      };\r\n      break;\r\n  }\r\n  return points;\r\n}\r\n\r\nfunction drawWordCloudDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let wordOption = assign({}, {\r\n    type: 'normal',\r\n    autoColors: true\r\n  }, opts.extra.word);\r\n  if (!opts.chartData.wordCloudData) {\r\n    opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type, context);\r\n  }\r\n  context.beginPath();\r\n  context.setFillStyle(opts.background);\r\n  context.rect(0, 0, opts.width, opts.height);\r\n  context.fill();\r\n  context.save();\r\n  let points = opts.chartData.wordCloudData;\r\n  context.translate(opts.width / 2, opts.height / 2);\r\n  for (let i = 0; i < points.length; i++) {\r\n    context.save();\r\n    if (points[i].rotate) {\r\n      context.rotate(90 * Math.PI / 180);\r\n    }\r\n    let text = points[i].name;\r\n    let tHeight = points[i].textSize * opts.pix;\r\n    let tWidth = measureText(text, tHeight, context);\r\n    context.beginPath();\r\n    context.setStrokeStyle(points[i].color);\r\n    context.setFillStyle(points[i].color);\r\n    context.setFontSize(tHeight);\r\n    if (points[i].rotate) {\r\n      if (points[i].areav[0] > 0) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n          } else {\r\n            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n          }\r\n        } else {\r\n          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);\r\n        }\r\n      }\r\n    } else {\r\n      if (points[i].area[0] > 0) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n          } else {\r\n            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n          }\r\n        } else {\r\n          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);\r\n        }\r\n      }\r\n    }\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n  context.restore();\r\n}\r\n\r\nfunction drawFunnelDataPoints(series, opts, config, context) {\r\n  let process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\r\n  let funnelOption = assign({}, {\r\n    type:'funnel',\r\n    activeWidth: 10,\r\n    activeOpacity: 0.3,\r\n    border: false,\r\n    borderWidth: 2,\r\n    borderColor: '#FFFFFF',\r\n    fillOpacity: 1,\r\n    minSize: 0,\r\n    labelAlign: 'right',\r\n    linearType: 'none',\r\n    customColor: [],\r\n  }, opts.extra.funnel);\r\n  let eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;\r\n  let centerPosition = {\r\n    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,\r\n    y: opts.height - opts.area[2]\r\n  };\r\n  let activeWidth = funnelOption.activeWidth * opts.pix;\r\n  let radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);\r\n  let seriesNew = getFunnelDataPoints(series, radius, funnelOption, eachSpacing, process);\r\n  context.save();\r\n  context.translate(centerPosition.x, centerPosition.y);\r\n  funnelOption.customColor = fillCustomColor(funnelOption.linearType, funnelOption.customColor, series, config);\r\n  if(funnelOption.type == 'pyramid'){\r\n    for (let i = 0; i < seriesNew.length; i++) {\r\n      if (i == seriesNew.length -1) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(-activeWidth, -eachSpacing);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, 0);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, 0);\r\n            context.lineTo(activeWidth, -eachSpacing);\r\n            context.lineTo(-activeWidth, -eachSpacing);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * i];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, -eachSpacing);\r\n        context.lineTo(-seriesNew[i].radius, 0);\r\n        context.lineTo(seriesNew[i].radius, 0);\r\n        context.lineTo(0, -eachSpacing);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      } else {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(0, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, 0);\r\n            context.lineTo(-seriesNew[i + 1].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i + 1].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, 0);\r\n            context.lineTo(0, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * i];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-seriesNew[i].radius, 0);\r\n        context.lineTo(-seriesNew[i + 1].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i + 1].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      }\r\n      context.translate(0, -eachSpacing)\r\n    }\r\n  }else{\r\n    context.translate(0, - (seriesNew.length - 1) * eachSpacing);\r\n    for (let i = 0; i < seriesNew.length; i++) {\r\n      if (i == seriesNew.length - 1) {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(-activeWidth - funnelOption.minSize/2, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(activeWidth + funnelOption.minSize/2, 0);\r\n            context.lineTo(-activeWidth - funnelOption.minSize/2, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing, centerPosition.x + seriesNew[i].radius, centerPosition.y ];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-funnelOption.minSize/2, 0);\r\n        context.lineTo(-seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(funnelOption.minSize/2, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      } else {\r\n        if (opts.tooltip) {\r\n          if (opts.tooltip.index == i) {\r\n            context.beginPath();\r\n            context.setFillStyle(hexToRgb(seriesNew[i].color, funnelOption.activeOpacity));\r\n            context.moveTo(0, 0);\r\n            context.lineTo(-seriesNew[i + 1].radius - activeWidth, 0);\r\n            context.lineTo(-seriesNew[i].radius - activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i].radius + activeWidth, -eachSpacing);\r\n            context.lineTo(seriesNew[i + 1].radius + activeWidth, 0);\r\n            context.lineTo(0, 0);\r\n            context.closePath();\r\n            context.fill();\r\n          }\r\n        }\r\n        seriesNew[i].funnelArea = [centerPosition.x - seriesNew[i].radius, centerPosition.y - eachSpacing * (seriesNew.length - i), centerPosition.x + seriesNew[i].radius, centerPosition.y - eachSpacing * (seriesNew.length - i - 1)];\r\n        context.beginPath();\r\n        context.setLineWidth(funnelOption.borderWidth * opts.pix);\r\n        context.setStrokeStyle(funnelOption.borderColor);\r\n        var fillColor = hexToRgb(seriesNew[i].color, funnelOption.fillOpacity);\r\n        if (funnelOption.linearType == 'custom') {\r\n          var grd = context.createLinearGradient(seriesNew[i].radius, -eachSpacing, -seriesNew[i].radius, -eachSpacing);\r\n          grd.addColorStop(0, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          grd.addColorStop(0.5, hexToRgb(funnelOption.customColor[seriesNew[i].linearIndex], funnelOption.fillOpacity));\r\n          grd.addColorStop(1, hexToRgb(seriesNew[i].color, funnelOption.fillOpacity));\r\n          fillColor = grd\r\n        }\r\n        context.setFillStyle(fillColor);\r\n        context.moveTo(0, 0);\r\n        context.lineTo(-seriesNew[i + 1].radius, 0);\r\n        context.lineTo(-seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i].radius, -eachSpacing);\r\n        context.lineTo(seriesNew[i + 1].radius, 0);\r\n        context.lineTo(0, 0);\r\n        context.closePath();\r\n        context.fill();\r\n        if (funnelOption.border == true) {\r\n          context.stroke();\r\n        }\r\n      }\r\n      context.translate(0, eachSpacing)\r\n    }\r\n  }\r\n  \r\n  context.restore();\r\n  if (opts.dataLabel !== false && process === 1) {\r\n    drawFunnelText(seriesNew, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\r\n  }\r\n  if (process === 1) {\r\n    drawFunnelCenterText(seriesNew, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);\r\n  }\r\n  return {\r\n    center: centerPosition,\r\n    radius: radius,\r\n    series: seriesNew\r\n  };\r\n}\r\n\r\nfunction drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    if(item.labelShow === false){\r\n      continue;\r\n    }\r\n    let startX, endX, startY, fontSize;\r\n    let text = item.formatter ? item.formatter(item,i,series,opts) : util.toFixed(item._proportion_ * 100) + '%';\r\n    text = item.labelText ? item.labelText : text;\r\n    if (labelAlign == 'right') {\r\n      if (i == series.length -1) {\r\n        startX = (item.funnelArea[2] + centerPosition.x) / 2;\r\n      } else {\r\n        startX = (item.funnelArea[2] + series[i + 1].funnelArea[2]) / 2;\r\n      }\r\n      endX = startX + activeWidth * 2;\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.textSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.color);\r\n      context.setFillStyle(item.color);\r\n      context.beginPath();\r\n      context.moveTo(startX, startY);\r\n      context.lineTo(endX, startY);\r\n      context.stroke();\r\n      context.closePath();\r\n      context.beginPath();\r\n      context.moveTo(endX, startY);\r\n      context.arc(endX, startY, 2 * opts.pix, 0, 2 * Math.PI);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.textColor || opts.fontColor);\r\n      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n    if (labelAlign == 'left') {\r\n      if (i == series.length -1) {\r\n        startX = (item.funnelArea[0] + centerPosition.x) / 2;\r\n      } else {\r\n        startX = (item.funnelArea[0] + series[i + 1].funnelArea[0]) / 2;\r\n      }\r\n      endX = startX - activeWidth * 2;\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.textSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.setLineWidth(1 * opts.pix);\r\n      context.setStrokeStyle(item.color);\r\n      context.setFillStyle(item.color);\r\n      context.beginPath();\r\n      context.moveTo(startX, startY);\r\n      context.lineTo(endX, startY);\r\n      context.stroke();\r\n      context.closePath();\r\n      context.beginPath();\r\n      context.moveTo(endX, startY);\r\n      context.arc(endX, startY, 2, 0, 2 * Math.PI);\r\n      context.closePath();\r\n      context.fill();\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.textColor || opts.fontColor);\r\n      context.fillText(text, endX - 5 - measureText(text, fontSize, context), startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawFunnelCenterText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {\r\n  for (let i = 0; i < series.length; i++) {\r\n    let item = series[i];\r\n    let startY, fontSize;\r\n    if (item.centerText) {\r\n      startY = item.funnelArea[1] + eachSpacing / 2;\r\n      fontSize = item.centerTextSize * opts.pix || opts.fontSize * opts.pix;\r\n      context.beginPath();\r\n      context.setFontSize(fontSize);\r\n      context.setFillStyle(item.centerTextColor || \"#FFFFFF\");\r\n      context.fillText(item.centerText, centerPosition.x - measureText(item.centerText, fontSize, context) / 2, startY + fontSize / 2 - 2);\r\n      context.closePath();\r\n      context.stroke();\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction drawCanvas(opts, context) {\r\n  context.save();\r\n  context.translate(0, 0.5);\r\n  context.restore();\r\n  context.draw();\r\n}\r\n\r\nvar Timing = {\r\n  easeIn: function easeIn(pos) {\r\n    return Math.pow(pos, 3);\r\n  },\r\n  easeOut: function easeOut(pos) {\r\n    return Math.pow(pos - 1, 3) + 1;\r\n  },\r\n  easeInOut: function easeInOut(pos) {\r\n    if ((pos /= 0.5) < 1) {\r\n      return 0.5 * Math.pow(pos, 3);\r\n    } else {\r\n      return 0.5 * (Math.pow(pos - 2, 3) + 2);\r\n    }\r\n  },\r\n  linear: function linear(pos) {\r\n    return pos;\r\n  }\r\n};\r\n\r\nfunction Animation(opts) {\r\n  this.isStop = false;\r\n  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;\r\n  opts.timing = opts.timing || 'easeInOut';\r\n  var delay = 17;\r\n  function createAnimationFrame() {\r\n    if (typeof setTimeout !== 'undefined') {\r\n      return function(step, delay) {\r\n        setTimeout(function() {\r\n          var timeStamp = +new Date();\r\n          step(timeStamp);\r\n        }, delay);\r\n      };\r\n    } else if (typeof requestAnimationFrame !== 'undefined') {\r\n      return requestAnimationFrame;\r\n    } else {\r\n      return function(step) {\r\n        step(null);\r\n      };\r\n    }\r\n  };\r\n  var animationFrame = createAnimationFrame();\r\n  var startTimeStamp = null;\r\n  var _step = function step(timestamp) {\r\n    if (timestamp === null || this.isStop === true) {\r\n      opts.onProcess && opts.onProcess(1);\r\n      opts.onAnimationFinish && opts.onAnimationFinish();\r\n      return;\r\n    }\r\n    if (startTimeStamp === null) {\r\n      startTimeStamp = timestamp;\r\n    }\r\n    if (timestamp - startTimeStamp < opts.duration) {\r\n      var process = (timestamp - startTimeStamp) / opts.duration;\r\n      var timingFunction = Timing[opts.timing];\r\n      process = timingFunction(process);\r\n      opts.onProcess && opts.onProcess(process);\r\n      animationFrame(_step, delay);\r\n    } else {\r\n      opts.onProcess && opts.onProcess(1);\r\n      opts.onAnimationFinish && opts.onAnimationFinish();\r\n    }\r\n  };\r\n  _step = _step.bind(this);\r\n  animationFrame(_step, delay);\r\n}\r\n\r\nAnimation.prototype.stop = function() {\r\n  this.isStop = true;\r\n};\r\n\r\nfunction drawCharts(type, opts, config, context) {\r\n  var _this = this;\r\n  var series = opts.series;\r\n  //兼容ECharts饼图类数据格式\r\n  if (type === 'pie' || type === 'ring' || type === 'mount' || type === 'rose' || type === 'funnel') {\r\n    series = fixPieSeries(series, opts, config);\r\n  }\r\n  var categories = opts.categories;\r\n  if (type === 'mount') {\r\n    categories = [];\r\n    for (let j = 0; j < series.length; j++) {\r\n      if(series[j].show !== false) categories.push(series[j].name)\r\n    }\r\n    opts.categories = categories;\r\n  }\r\n  series = fillSeries(series, opts, config);\r\n  var duration = opts.animation ? opts.duration : 0;\r\n  _this.animationInstance && _this.animationInstance.stop();\r\n  var seriesMA = null;\r\n  if (type == 'candle') {\r\n    let average = assign({}, opts.extra.candle.average);\r\n    if (average.show) {\r\n      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);\r\n      seriesMA = fillSeries(seriesMA, opts, config);\r\n      opts.seriesMA = seriesMA;\r\n    } else if (opts.seriesMA) {\r\n      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);\r\n    } else {\r\n      seriesMA = series;\r\n    }\r\n  } else {\r\n    seriesMA = series;\r\n  }\r\n  /* 过滤掉show=false的series */\r\n  opts._series_ = series = filterSeries(series);\r\n  //重新计算图表区域\r\n  opts.area = new Array(4);\r\n  //复位绘图区域\r\n  for (let j = 0; j < 4; j++) {\r\n    opts.area[j] = opts.padding[j] * opts.pix;\r\n  }\r\n  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域\r\n  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData, context),\r\n    legendHeight = _calLegendData.area.wholeHeight,\r\n    legendWidth = _calLegendData.area.wholeWidth;\r\n\r\n  switch (opts.legend.position) {\r\n    case 'top':\r\n      opts.area[0] += legendHeight;\r\n      break;\r\n    case 'bottom':\r\n      opts.area[2] += legendHeight;\r\n      break;\r\n    case 'left':\r\n      opts.area[3] += legendWidth;\r\n      break;\r\n    case 'right':\r\n      opts.area[1] += legendWidth;\r\n      break;\r\n  }\r\n\r\n  let _calYAxisData = {},\r\n    yAxisWidth = 0;\r\n  if (opts.type === 'line' || opts.type === 'column'|| opts.type === 'mount' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle' || opts.type === 'scatter'  || opts.type === 'bubble' || opts.type === 'bar') {\r\n      _calYAxisData = calYAxisData(series, opts, config, context);\r\n      yAxisWidth = _calYAxisData.yAxisWidth;\r\n    //如果显示Y轴标题\r\n    if (opts.yAxis.showTitle) {\r\n      let maxTitleHeight = 0;\r\n      for (let i = 0; i < opts.yAxis.data.length; i++) {\r\n        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize * opts.pix : config.fontSize)\r\n      }\r\n      opts.area[0] += maxTitleHeight;\r\n    }\r\n    let rightIndex = 0,\r\n      leftIndex = 0;\r\n    //计算主绘图区域左右位置\r\n    for (let i = 0; i < yAxisWidth.length; i++) {\r\n      if (yAxisWidth[i].position == 'left') {\r\n        if (leftIndex > 0) {\r\n          opts.area[3] += yAxisWidth[i].width + opts.yAxis.padding * opts.pix;\r\n        } else {\r\n          opts.area[3] += yAxisWidth[i].width;\r\n        }\r\n        leftIndex += 1;\r\n      } else if (yAxisWidth[i].position == 'right') {\r\n        if (rightIndex > 0) {\r\n          opts.area[1] += yAxisWidth[i].width + opts.yAxis.padding * opts.pix;\r\n        } else {\r\n          opts.area[1] += yAxisWidth[i].width;\r\n        }\r\n        rightIndex += 1;\r\n      }\r\n    }\r\n  } else {\r\n    config.yAxisWidth = yAxisWidth;\r\n  }\r\n  opts.chartData.yAxisData = _calYAxisData;\r\n\r\n  if (opts.categories && opts.categories.length && opts.type !== 'radar' && opts.type !== 'gauge' && opts.type !== 'bar') {\r\n    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);\r\n    let _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing, context),\r\n      xAxisHeight = _calCategoriesData.xAxisHeight,\r\n      angle = _calCategoriesData.angle;\r\n    config.xAxisHeight = xAxisHeight;\r\n    config._xAxisTextAngle_ = angle;\r\n    opts.area[2] += xAxisHeight;\r\n    opts.chartData.categoriesData = _calCategoriesData;\r\n  } else {\r\n    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'scatter' || opts.type === 'bubble' || opts.type === 'bar') {\r\n      opts.chartData.xAxisData = calXAxisData(series, opts, config, context);\r\n      categories = opts.chartData.xAxisData.rangesFormat;\r\n      let _calCategoriesData = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing, context),\r\n        xAxisHeight = _calCategoriesData.xAxisHeight,\r\n        angle = _calCategoriesData.angle;\r\n      config.xAxisHeight = xAxisHeight;\r\n      config._xAxisTextAngle_ = angle;\r\n      opts.area[2] += xAxisHeight;\r\n      opts.chartData.categoriesData = _calCategoriesData;\r\n    } else {\r\n      opts.chartData.xAxisData = {\r\n        xAxisPoints: []\r\n      };\r\n    }\r\n  }\r\n\r\n  //计算右对齐偏移距离\r\n  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {\r\n    let offsetLeft = 0,\r\n      xAxisPoints = opts.chartData.xAxisData.xAxisPoints,\r\n      startX = opts.chartData.xAxisData.startX,\r\n      endX = opts.chartData.xAxisData.endX,\r\n      eachSpacing = opts.chartData.xAxisData.eachSpacing;\r\n    let totalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n    let screenWidth = endX - startX;\r\n    offsetLeft = screenWidth - totalWidth;\r\n    _this.scrollOption.currentOffset = offsetLeft;\r\n    _this.scrollOption.startTouchX = offsetLeft;\r\n    _this.scrollOption.distance = 0;\r\n    _this.scrollOption.lastMoveTime = 0;\r\n    opts._scrollDistance_ = offsetLeft;\r\n  }\r\n\r\n  if (type === 'pie' || type === 'ring' || type === 'rose') {\r\n    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA, config, context, opts);\r\n  }\r\n  \r\n  switch (type) {\r\n    case 'word':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawWordCloudDataPoints(series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'map':\r\n      context.clearRect(0, 0, opts.width, opts.height);\r\n      drawMapDataPoints(series, opts, config, context);\r\n      setTimeout(()=>{\r\n        this.uevent.trigger('renderComplete');\r\n      },50)\r\n      break;\r\n    case 'funnel':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'line':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawLineDataPoints.xAxisPoints,\r\n            calPoints = _drawLineDataPoints.calPoints,\r\n            eachSpacing = _drawLineDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'scatter':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawScatterDataPoints = drawScatterDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawScatterDataPoints.xAxisPoints,\r\n            calPoints = _drawScatterDataPoints.calPoints,\r\n            eachSpacing = _drawScatterDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'bubble':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawBubbleDataPoints = drawBubbleDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawBubbleDataPoints.xAxisPoints,\r\n            calPoints = _drawBubbleDataPoints.calPoints,\r\n            eachSpacing = _drawBubbleDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'mix':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawMixDataPoints.xAxisPoints,\r\n            calPoints = _drawMixDataPoints.calPoints,\r\n            eachSpacing = _drawMixDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'column':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawColumnDataPoints.xAxisPoints,\r\n            calPoints = _drawColumnDataPoints.calPoints,\r\n            eachSpacing = _drawColumnDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'mount':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawMountDataPoints = drawMountDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawMountDataPoints.xAxisPoints,\r\n            calPoints = _drawMountDataPoints.calPoints,\r\n            eachSpacing = _drawMountDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'bar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawBarDataPoints = drawBarDataPoints(series, opts, config, context, process),\r\n            yAxisPoints = _drawBarDataPoints.yAxisPoints,\r\n            calPoints = _drawBarDataPoints.calPoints,\r\n            eachSpacing = _drawBarDataPoints.eachSpacing;\r\n          opts.chartData.yAxisPoints = yAxisPoints;\r\n          opts.chartData.xAxisPoints = opts.chartData.xAxisData.xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, yAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'area':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),\r\n            xAxisPoints = _drawAreaDataPoints.xAxisPoints,\r\n            calPoints = _drawAreaDataPoints.calPoints,\r\n            eachSpacing = _drawAreaDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'ring':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'pie':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'rose':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'radar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);\r\n          drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          drawToolTipBridge(opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'arcbar':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'gauge':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n    case 'candle':\r\n      this.animationInstance = new Animation({\r\n        timing: opts.timing,\r\n        duration: duration,\r\n        onProcess: function onProcess(process) {\r\n          context.clearRect(0, 0, opts.width, opts.height);\r\n          if (opts.rotate) {\r\n            contextRotate(context, opts);\r\n          }\r\n          drawYAxisGrid(categories, opts, config, context);\r\n          drawXAxis(categories, opts, config, context);\r\n          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),\r\n            xAxisPoints = _drawCandleDataPoints.xAxisPoints,\r\n            calPoints = _drawCandleDataPoints.calPoints,\r\n            eachSpacing = _drawCandleDataPoints.eachSpacing;\r\n          opts.chartData.xAxisPoints = xAxisPoints;\r\n          opts.chartData.calPoints = calPoints;\r\n          opts.chartData.eachSpacing = eachSpacing;\r\n          drawYAxis(series, opts, config, context);\r\n          if (opts.enableMarkLine !== false && process === 1) {\r\n            drawMarkLine(opts, config, context);\r\n          }\r\n          if (seriesMA) {\r\n            drawLegend(seriesMA, opts, config, context, opts.chartData);\r\n          } else {\r\n            drawLegend(opts.series, opts, config, context, opts.chartData);\r\n          }\r\n          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);\r\n          drawCanvas(opts, context);\r\n        },\r\n        onAnimationFinish: function onAnimationFinish() {\r\n          _this.uevent.trigger('renderComplete');\r\n        }\r\n      });\r\n      break;\r\n  }\r\n}\r\n\r\nfunction uChartsEvent() {\r\n  this.events = {};\r\n}\r\n\r\nuChartsEvent.prototype.addEventListener = function(type, listener) {\r\n  this.events[type] = this.events[type] || [];\r\n  this.events[type].push(listener);\r\n};\r\n\r\nuChartsEvent.prototype.delEventListener = function(type) {\r\n  this.events[type] = [];\r\n};\r\n\r\nuChartsEvent.prototype.trigger = function() {\r\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n  var type = args[0];\r\n  var params = args.slice(1);\r\n  if (!!this.events[type]) {\r\n    this.events[type].forEach(function(listener) {\r\n      try {\r\n        listener.apply(null, params);\r\n      } catch (e) {\r\n          //console.log('[uCharts] '+e);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nvar uCharts = function uCharts(opts) {\r\n  opts.pix = opts.pixelRatio ? opts.pixelRatio : 1;\r\n  opts.fontSize = opts.fontSize ? opts.fontSize : 13;\r\n  opts.fontColor = opts.fontColor ? opts.fontColor : config.fontColor;\r\n  if (opts.background == \"\" || opts.background == \"none\") {\r\n    opts.background = \"#FFFFFF\"\r\n  }\r\n  opts.title = assign({}, opts.title);\r\n  opts.subtitle = assign({}, opts.subtitle);\r\n  opts.duration = opts.duration ? opts.duration : 1000;\r\n  opts.yAxis = assign({}, {\r\n    data: [],\r\n    showTitle: false,\r\n    disabled: false,\r\n    disableGrid: false,\r\n    gridSet: 'number',\r\n    splitNumber: 5,\r\n    gridType: 'solid',\r\n    dashLength: 4 * opts.pix,\r\n    gridColor: '#cccccc',\r\n    padding: 10,\r\n    fontColor: '#666666'\r\n  }, opts.yAxis);\r\n  opts.xAxis = assign({}, {\r\n    rotateLabel: false,\r\n    rotateAngle:45,\r\n    disabled: false,\r\n    disableGrid: false,\r\n    splitNumber: 5,\r\n    calibration:false,\r\n    fontColor: '#666666',\r\n    fontSize: 13,\r\n    lineHeight: 20,\r\n    marginTop: 0,\r\n    gridType: 'solid',\r\n    dashLength: 4,\r\n    scrollAlign: 'left',\r\n    boundaryGap: 'center',\r\n    axisLine: true,\r\n    axisLineColor: '#cccccc',\r\n    titleFontSize: 13,\r\n    titleOffsetY: 0,\r\n    titleOffsetX: 0,\r\n    titleFontColor: '#666666'\r\n  }, opts.xAxis);\r\n  opts.xAxis.scrollPosition = opts.xAxis.scrollAlign;\r\n  opts.legend = assign({}, {\r\n    show: true,\r\n    position: 'bottom',\r\n    float: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    margin: 5,\r\n    itemGap: 10,\r\n    fontSize: opts.fontSize,\r\n    lineHeight: opts.fontSize,\r\n    fontColor: opts.fontColor,\r\n    formatter: {},\r\n    hiddenColor: '#CECECE'\r\n  }, opts.legend);\r\n  opts.extra = assign({\r\n    tooltip:{\r\n      legendShape: 'auto'\r\n    }\r\n  }, opts.extra);\r\n  opts.rotate = opts.rotate ? true : false;\r\n  opts.animation = opts.animation ? true : false;\r\n  opts.rotate = opts.rotate ? true : false;\r\n  opts.canvas2d = opts.canvas2d ? true : false;\r\n  \r\n  let config$$1 = assign({}, config);\r\n  config$$1.color = opts.color ? opts.color : config$$1.color;\r\n  if (opts.type == 'pie') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  if (opts.type == 'ring') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.ring.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  if (opts.type == 'rose') {\r\n    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pix || config$$1.pieChartLinePadding * opts.pix;\r\n  }\r\n  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pix;\r\n\r\n  //屏幕旋转\r\n  config$$1.rotate = opts.rotate;\r\n  if (opts.rotate) {\r\n    let tempWidth = opts.width;\r\n    let tempHeight = opts.height;\r\n    opts.width = tempHeight;\r\n    opts.height = tempWidth;\r\n  }\r\n\r\n  //适配高分屏\r\n  opts.padding = opts.padding ? opts.padding : config$$1.padding;\r\n  config$$1.yAxisWidth = config.yAxisWidth * opts.pix;\r\n  config$$1.fontSize = opts.fontSize * opts.pix;\r\n  config$$1.titleFontSize = config.titleFontSize * opts.pix;\r\n  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pix;\r\n  if(!opts.context){\r\n    throw new Error('[uCharts] 未获取到context！注意：v2.0版本后，需要自行获取canvas的绘图上下文并传入opts.context！');\r\n  }\r\n  this.context = opts.context;\r\n  if (!this.context.setTextAlign) {\r\n    this.context.setStrokeStyle = function(e) {\r\n      return this.strokeStyle = e;\r\n    }\r\n    this.context.setLineWidth = function(e) {\r\n      return this.lineWidth = e;\r\n    }\r\n    this.context.setLineCap = function(e) {\r\n      return this.lineCap = e;\r\n    }\r\n    this.context.setFontSize = function(e) {\r\n      return this.font = e + \"px sans-serif\";\r\n    }\r\n    this.context.setFillStyle = function(e) {\r\n      return this.fillStyle = e;\r\n    }\r\n    this.context.setTextAlign = function(e) {\r\n      return this.textAlign = e;\r\n    }\r\n    this.context.setTextBaseline = function(e) {\r\n      return this.textBaseline = e;\r\n    }\r\n    this.context.setShadow = function(offsetX,offsetY,blur,color) {\r\n      this.shadowColor = color;\r\n      this.shadowOffsetX = offsetX;\r\n      this.shadowOffsetY = offsetY;\r\n      this.shadowBlur = blur;\r\n    }\r\n    this.context.draw = function() {}\r\n  }\r\n  //兼容NVUEsetLineDash\r\n  if(!this.context.setLineDash){\r\n    this.context.setLineDash = function(e) {}\r\n  }\r\n  opts.chartData = {};\r\n  this.uevent = new uChartsEvent();\r\n  this.scrollOption = {\r\n    currentOffset: 0,\r\n    startTouchX: 0,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  this.opts = opts;\r\n  this.config = config$$1;\r\n  drawCharts.call(this, opts.type, opts, config$$1, this.context);\r\n};\r\n\r\nuCharts.prototype.updateData = function() {\r\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  this.opts = assign({}, this.opts, data);\r\n  this.opts.updateData = true;\r\n  let scrollPosition = data.scrollPosition || 'current';\r\n  switch (scrollPosition) {\r\n    case 'current':\r\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\r\n      break;\r\n    case 'left':\r\n      this.opts._scrollDistance_ = 0;\r\n      this.scrollOption = {\r\n        currentOffset: 0,\r\n        startTouchX: 0,\r\n        distance: 0,\r\n        lastMoveTime: 0\r\n      };\r\n      break;\r\n    case 'right':\r\n      let _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config, this.context), yAxisWidth = _calYAxisData.yAxisWidth;\r\n      this.config.yAxisWidth = yAxisWidth;\r\n      let offsetLeft = 0;\r\n      let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config), xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n        startX = _getXAxisPoints0.startX,\r\n        endX = _getXAxisPoints0.endX,\r\n        eachSpacing = _getXAxisPoints0.eachSpacing;\r\n      let totalWidth = eachSpacing * (xAxisPoints.length - 1);\r\n      let screenWidth = endX - startX;\r\n      offsetLeft = screenWidth - totalWidth;\r\n      this.scrollOption = {\r\n        currentOffset: offsetLeft,\r\n        startTouchX: offsetLeft,\r\n        distance: 0,\r\n        lastMoveTime: 0\r\n      };\r\n      this.opts._scrollDistance_ = offsetLeft;\r\n      break;\r\n  }\r\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.zoom = function() {\r\n  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;\r\n  if (this.opts.enableScroll !== true) {\r\n    console.log('[uCharts] 请启用滚动条后使用')\r\n    return;\r\n  }\r\n  //当前屏幕中间点\r\n  let centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(this.opts.xAxis.itemCount / 2);\r\n  this.opts.animation = false;\r\n  this.opts.xAxis.itemCount = val.itemCount;\r\n  //重新计算x轴偏移距离\r\n  let _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config, this.context),\r\n    yAxisWidth = _calYAxisData.yAxisWidth;\r\n  this.config.yAxisWidth = yAxisWidth;\r\n  let offsetLeft = 0;\r\n  let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\r\n    xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n    startX = _getXAxisPoints0.startX,\r\n    endX = _getXAxisPoints0.endX,\r\n    eachSpacing = _getXAxisPoints0.eachSpacing;\r\n  let centerLeft = eachSpacing * centerPoint;\r\n  let screenWidth = endX - startX;\r\n  let MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\r\n  offsetLeft = screenWidth / 2 - centerLeft;\r\n  if (offsetLeft > 0) {\r\n    offsetLeft = 0;\r\n  }\r\n  if (offsetLeft < MaxLeft) {\r\n    offsetLeft = MaxLeft;\r\n  }\r\n  this.scrollOption = {\r\n    currentOffset: offsetLeft,\r\n    startTouchX: 0,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  calValidDistance(this, offsetLeft, this.opts.chartData, this.config, this.opts);\r\n  this.opts._scrollDistance_ = offsetLeft;\r\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.dobuleZoom = function(e) {\n  if (this.opts.enableScroll !== true) {\n    console.log('[uCharts] 请启用滚动条后使用')\n    return;\n  }\r\n  const tcs = e.changedTouches;\n  if (tcs.length < 2) {\n    return;\n  }\n  for (var i = 0; i < tcs.length; i++) {\n    tcs[i].x = tcs[i].x ? tcs[i].x : tcs[i].clientX;\n    tcs[i].y = tcs[i].y ? tcs[i].y : tcs[i].clientY;\n  }\r\n  const ntcs = [getTouches(tcs[0], this.opts, e),getTouches(tcs[1], this.opts, e)]; \r\n  const xlength = Math.abs(ntcs[0].x - ntcs[1].x);\r\n  // 记录初始的两指之间的数据\r\n  if(!this.scrollOption.moveCount){\r\n    let cts0 = {changedTouches:[{x:tcs[0].x,y:this.opts.area[0] / this.opts.pix + 2}]};\r\n    let cts1 = {changedTouches:[{x:tcs[1].x,y:this.opts.area[0] / this.opts.pix + 2}]};\r\n    if(this.opts.rotate){\r\n      cts0 = {changedTouches:[{x:this.opts.height / this.opts.pix - this.opts.area[0] / this.opts.pix - 2,y:tcs[0].y}]};\r\n      cts1 = {changedTouches:[{x:this.opts.height / this.opts.pix - this.opts.area[0] / this.opts.pix - 2,y:tcs[1].y}]};\r\n    }\r\n    const moveCurrent1 = this.getCurrentDataIndex(cts0).index;\r\n    const moveCurrent2 = this.getCurrentDataIndex(cts1).index;\r\n    const moveCount = Math.abs(moveCurrent1 - moveCurrent2);\r\n    this.scrollOption.moveCount = moveCount;\r\n    this.scrollOption.moveCurrent1 = Math.min(moveCurrent1, moveCurrent2);\r\n    this.scrollOption.moveCurrent2 = Math.max(moveCurrent1, moveCurrent2);\r\n    return;\r\n  }\r\n  \r\n  let currentEachSpacing = xlength / this.scrollOption.moveCount;\r\n  let itemCount = (this.opts.width - this.opts.area[1] - this.opts.area[3]) / currentEachSpacing;\r\n  itemCount = itemCount <= 2 ? 2 : itemCount;\r\n  itemCount = itemCount >= this.opts.categories.length ? this.opts.categories.length : itemCount;\n  this.opts.animation = false;\n  this.opts.xAxis.itemCount = itemCount;\n  // 重新计算滚动条偏移距离\n  let offsetLeft = 0;\r\n  let _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),\r\n    xAxisPoints = _getXAxisPoints0.xAxisPoints,\r\n    startX = _getXAxisPoints0.startX,\r\n    endX = _getXAxisPoints0.endX,\r\n    eachSpacing = _getXAxisPoints0.eachSpacing;\r\n  let currentLeft = eachSpacing * this.scrollOption.moveCurrent1;\r\n  let screenWidth = endX - startX;\r\n  let MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);\r\n  offsetLeft = -currentLeft+Math.min(ntcs[0].x,ntcs[1].x)-this.opts.area[3]-eachSpacing;\n  if (offsetLeft > 0) {\n    offsetLeft = 0;\n  }\n  if (offsetLeft < MaxLeft) {\n    offsetLeft = MaxLeft;\n  }\n  this.scrollOption.currentOffset= offsetLeft;\n  this.scrollOption.startTouchX= 0;\n  this.scrollOption.distance=0;\n  calValidDistance(this, offsetLeft, this.opts.chartData, this.config, this.opts);\n  this.opts._scrollDistance_ = offsetLeft;\n  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\n}\r\n\r\nuCharts.prototype.stopAnimation = function() {\r\n  this.animationInstance && this.animationInstance.stop();\r\n};\r\n\r\nuCharts.prototype.addEventListener = function(type, listener) {\r\n  this.uevent.addEventListener(type, listener);\r\n};\r\n\r\nuCharts.prototype.delEventListener = function(type) {\r\n  this.uevent.delEventListener(type);\r\n};\r\n\r\nuCharts.prototype.getCurrentDataIndex = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    let _touches$ = getTouches(touches, this.opts, e);\r\n    if (this.opts.type === 'pie' || this.opts.type === 'ring') {\r\n      return findPieChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.pieData, this.opts);\r\n    } else if (this.opts.type === 'rose') {\r\n      return findRoseChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.pieData, this.opts);\r\n    } else if (this.opts.type === 'radar') {\r\n      return findRadarChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.radarData, this.opts.categories.length);\r\n    } else if (this.opts.type === 'funnel') {\r\n      return findFunnelChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.funnelData);\r\n    } else if (this.opts.type === 'map') {\r\n      return findMapChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts);\r\n    } else if (this.opts.type === 'word') {\r\n      return findWordChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.wordCloudData);\r\n    } else if (this.opts.type === 'bar') {\r\n      return findBarChartCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\r\n    } else {\r\n      return findCurrentIndex({\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      }, this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\nuCharts.prototype.getLegendDataIndex = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    let _touches$ = getTouches(touches, this.opts, e);\r\n    return findLegendIndex({\r\n      x: _touches$.x,\r\n      y: _touches$.y\r\n    }, this.opts.chartData.legendData);\r\n  }\r\n  return -1;\r\n};\r\n\r\nuCharts.prototype.touchLegend = function(e) {\r\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches) {\r\n    var _touches$ = getTouches(touches, this.opts, e);\r\n    var index = this.getLegendDataIndex(e);\r\n    if (index >= 0) {\r\n      if (this.opts.type == 'candle') {\r\n        this.opts.seriesMA[index].show = !this.opts.seriesMA[index].show;\r\n      } else {\r\n        this.opts.series[index].show = !this.opts.series[index].show;\r\n      }\r\n      this.opts.animation = option.animation ? true : false;\r\n      this.opts._scrollDistance_ = this.scrollOption.currentOffset;\r\n      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);\r\n    }\r\n  }\r\n\r\n};\r\n\r\nuCharts.prototype.showToolTip = function(e) {\r\n  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (!touches) {\r\n    console.log(\"[uCharts] 未获取到event坐标信息\");\r\n  }\r\n  var _touches$ = getTouches(touches, this.opts, e);\r\n  var currentOffset = this.scrollOption.currentOffset;\r\n  var opts = assign({}, this.opts, {\r\n    _scrollDistance_: currentOffset,\r\n    animation: false\r\n  });\r\n  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column' || this.opts.type === 'scatter' || this.opts.type === 'bubble') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1 || index.length>0) {\r\n      var seriesData = getSeriesDataItem(this.opts.series, index, current.group);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getToolTipData(seriesData, this.opts, index, current.group, this.opts.categories, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList !== undefined ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index,\r\n          group: current.group\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'mount') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e).index : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, opts._series_[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, opts) : seriesData.name + ': ' + seriesData.data,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: opts.chartData.calPoints[index].x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    \r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'bar') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1 || index.length>0) {\r\n      var seriesData = getSeriesDataItem(this.opts.series, index, current.group);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getToolTipData(seriesData, this.opts, index, current.group, this.opts.categories, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.x = _touches$.x;\r\n        opts.tooltip = {\r\n          textList: option.textList !== undefined ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'mix') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1) {\r\n      var currentOffset = this.scrollOption.currentOffset;\r\n      var opts = assign({}, this.opts, {\r\n        _scrollDistance_: currentOffset,\r\n        animation: false\r\n      });\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts, index, this.opts.categories, option),\r\n          textList = _getMixToolTipData.textList,\r\n          offset = _getMixToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'candle') {\r\n    var current = this.getCurrentDataIndex(e);\r\n    var index = option.index == undefined ? current.index : option.index;\r\n    if (index > -1) {\r\n      var currentOffset = this.scrollOption.currentOffset;\r\n      var opts = assign({}, this.opts, {\r\n        _scrollDistance_: currentOffset,\r\n        animation: false\r\n      });\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts, index, this.opts.categories, this.opts.extra.candle, option),\r\n          textList = _getToolTipData.textList,\r\n          offset = _getToolTipData.offset;\r\n        offset.y = _touches$.y;\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, opts._series_[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, opts) : seriesData.name + ': ' + seriesData.data,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'map') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, this.opts.series[index]);\r\n      seriesData.name = seriesData.properties.name\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, this.opts) : seriesData.name,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    opts.updateData = false;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'word') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = assign({}, this.opts.series[index]);\r\n      var textList = [{\r\n        text: option.formatter ? option.formatter(seriesData, undefined, index, this.opts) : seriesData.name,\r\n        color: seriesData.color,\r\n        legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? seriesData.legendShape : this.opts.extra.tooltip.legendShape\r\n      }];\r\n      var offset = {\r\n        x: _touches$.x,\r\n        y: _touches$.y\r\n      };\r\n      opts.tooltip = {\r\n        textList: option.textList ? option.textList : textList,\r\n        offset: option.offset !== undefined ? option.offset : offset,\r\n        option: option,\r\n        index: index\r\n      };\r\n    }\r\n    opts.updateData = false;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n  if (this.opts.type === 'radar') {\r\n    var index = option.index == undefined ? this.getCurrentDataIndex(e) : option.index;\r\n    if (index > -1) {\r\n      var opts = assign({}, this.opts, {animation: false});\r\n      var seriesData = getSeriesDataItem(this.opts.series, index);\r\n      if (seriesData.length !== 0) {\r\n        var textList = seriesData.map((item) => {\r\n          return {\r\n            text: option.formatter ? option.formatter(item, this.opts.categories[index], index, this.opts) : item.name + ': ' + item.data,\r\n            color: item.color,\r\n            legendShape: this.opts.extra.tooltip.legendShape == 'auto' ? item.legendShape : this.opts.extra.tooltip.legendShape\r\n          };\r\n        });\r\n        var offset = {\r\n          x: _touches$.x,\r\n          y: _touches$.y\r\n        };\r\n        opts.tooltip = {\r\n          textList: option.textList ? option.textList : textList,\r\n          offset: option.offset !== undefined ? option.offset : offset,\r\n          option: option,\r\n          index: index\r\n        };\r\n      }\r\n    }\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n  }\r\n};\r\n\r\nuCharts.prototype.translate = function(distance) {\r\n  this.scrollOption = {\r\n    currentOffset: distance,\r\n    startTouchX: distance,\r\n    distance: 0,\r\n    lastMoveTime: 0\r\n  };\r\n  let opts = assign({}, this.opts, {\r\n    _scrollDistance_: distance,\r\n    animation: false\r\n  });\r\n  drawCharts.call(this, this.opts.type, opts, this.config, this.context);\r\n};\r\n\r\nuCharts.prototype.scrollStart = function(e) {\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  var _touches$ = getTouches(touches, this.opts, e);\r\n  if (touches && this.opts.enableScroll === true) {\r\n    this.scrollOption.startTouchX = _touches$.x;\r\n  }\r\n};\r\n\r\nuCharts.prototype.scroll = function(e) {\r\n  if (this.scrollOption.lastMoveTime === 0) {\r\n    this.scrollOption.lastMoveTime = Date.now();\r\n  }\r\n  let Limit = this.opts.touchMoveLimit || 60;\r\n  let currMoveTime = Date.now();\r\n  let duration = currMoveTime - this.scrollOption.lastMoveTime;\r\n  if (duration < Math.floor(1000 / Limit)) return;\r\n  if (this.scrollOption.startTouchX == 0) return;\r\n  this.scrollOption.lastMoveTime = currMoveTime;\r\n  var touches = null;\r\n  if (e.changedTouches) {\r\n    touches = e.changedTouches[0];\r\n  } else {\r\n    touches = e.mp.changedTouches[0];\r\n  }\r\n  if (touches && this.opts.enableScroll === true) {\r\n    var _touches$ = getTouches(touches, this.opts, e);\r\n    var _distance;\r\n    _distance = _touches$.x - this.scrollOption.startTouchX;\r\n    var currentOffset = this.scrollOption.currentOffset;\r\n    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);\r\n    this.scrollOption.distance = _distance = validDistance - currentOffset;\r\n    var opts = assign({}, this.opts, {\r\n      _scrollDistance_: currentOffset + _distance,\r\n      animation: false\r\n    });\r\n\t\tthis.opts = opts;\r\n    drawCharts.call(this, opts.type, opts, this.config, this.context);\r\n    return currentOffset + _distance;\r\n  }\r\n};\r\n\r\nuCharts.prototype.scrollEnd = function(e) {\r\n  if (this.opts.enableScroll === true) {\r\n    var _scrollOption = this.scrollOption,\r\n      currentOffset = _scrollOption.currentOffset,\r\n      distance = _scrollOption.distance;\r\n    this.scrollOption.currentOffset = currentOffset + distance;\r\n    this.scrollOption.distance = 0;\r\n    this.scrollOption.moveCount = 0;\r\n  }\r\n};\r\n\r\nexport default uCharts;"],"mappings":"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","ignoreList":[]}